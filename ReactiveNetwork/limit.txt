Found 169 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:39: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ConnectivityPredicate$1.val$states`.
  37.      */
  38.     public static Predicate<Connectivity> hasState(final NetworkInfo.State... states) {
  39. >     return new Predicate<Connectivity>() {
  40.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  41.           for (NetworkInfo.State state : states) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.this$0`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$adjustedHost`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$errorHandler`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$port`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$timeoutInMs`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.this$0`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$adjustedHost`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$errorHandler`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$httpResponse`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$port`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$timeoutInMs`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:75: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$1.this$0`.
  73.       manager.registerNetworkCallback(request, networkCallback);
  74.   
  75. >     return connectivitySubject.toFlowable(BackpressureStrategy.LATEST).doOnCancel(new Action() {
  76.         @Override public void run() {
  77.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:75: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$1.val$context`.
  73.       manager.registerNetworkCallback(request, networkCallback);
  74.   
  75. >     return connectivitySubject.toFlowable(BackpressureStrategy.LATEST).doOnCancel(new Action() {
  76.         @Override public void run() {
  77.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:75: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$1.val$manager`.
  73.       manager.registerNetworkCallback(request, networkCallback);
  74.   
  75. >     return connectivitySubject.toFlowable(BackpressureStrategy.LATEST).doOnCancel(new Action() {
  76.         @Override public void run() {
  77.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:51: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$1.this$1`.
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {
  51. >         final BroadcastReceiver receiver = new BroadcastReceiver() {
  52.             @Override public void onReceive(Context context, Intent intent) {
  53.               emitter.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:51: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$1.val$emitter`.
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {
  51. >         final BroadcastReceiver receiver = new BroadcastReceiver() {
  52.             @Override public void onReceive(Context context, Intent intent) {
  53.               emitter.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1.this$0`.
  46.       filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  47.   
  48. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1.val$context`.
  46.       filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  47.   
  48. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1.val$filter`.
  46.       filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  47.   
  48. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:88: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2$1.this$1`.
  86.           } else {
  87.             final Scheduler.Worker inner = AndroidSchedulers.mainThread().createWorker();
  88. >           inner.schedule(new Runnable() {
  89.               @Override public void run() {
  90.                 try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:88: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2$1.val$inner`.
  86.           } else {
  87.             final Scheduler.Worker inner = AndroidSchedulers.mainThread().createWorker();
  88. >           inner.schedule(new Runnable() {
  89.               @Override public void run() {
  90.                 try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ConnectivityPredicate$2.val$extendedTypes`.
  57.     public static Predicate<Connectivity> hasType(final int... types) {
  58.       final int[] extendedTypes = appendUnknownNetworkTypeToTypes(types);
  59. >     return new Predicate<Connectivity>() {
  60.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  61.           for (int type : extendedTypes) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.this$0`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$errorHandler`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$host`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$port`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$timeoutInMs`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.errorHandler`.
  45.       this.timeout = timeout;
  46.       this.httpResponse = httpResponse;
  47. >     this.errorHandler = errorHandler;
  48.       this.strategy = strategy;
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:43: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.host`.
  41.       this.initialInterval = initialInterval;
  42.       this.interval = interval;
  43. >     this.host = host;
  44.       this.port = port;
  45.       this.timeout = timeout;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.httpResponse`.
  44.       this.port = port;
  45.       this.timeout = timeout;
  46. >     this.httpResponse = httpResponse;
  47.       this.errorHandler = errorHandler;
  48.       this.strategy = strategy;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.initialInterval`.
  39.         int timeout, int httpResponse, ErrorHandler errorHandler,
  40.         InternetObservingStrategy strategy) {
  41. >     this.initialInterval = initialInterval;
  42.       this.interval = interval;
  43.       this.host = host;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:42: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.interval`.
  40.         InternetObservingStrategy strategy) {
  41.       this.initialInterval = initialInterval;
  42. >     this.interval = interval;
  43.       this.host = host;
  44.       this.port = port;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:44: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.port`.
  42.       this.interval = interval;
  43.       this.host = host;
  44. >     this.port = port;
  45.       this.timeout = timeout;
  46.       this.httpResponse = httpResponse;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.strategy`.
  46.       this.httpResponse = httpResponse;
  47.       this.errorHandler = errorHandler;
  48. >     this.strategy = strategy;
  49.     }
  50.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:45: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.timeout`.
  43.       this.host = host;
  44.       this.port = port;
  45. >     this.timeout = timeout;
  46.       this.httpResponse = httpResponse;
  47.       this.errorHandler = errorHandler;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:52: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$1.this$0`.
  50.           manager.registerNetworkCallback(networkRequest, networkCallback);
  51.         }
  52. >     }).doOnDispose(new Action() {
  53.         @Override public void run() {
  54.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:52: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$1.val$manager`.
  50.           manager.registerNetworkCallback(networkRequest, networkCallback);
  51.         }
  52. >     }).doOnDispose(new Action() {
  53.         @Override public void run() {
  54.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$2.this$0`.
  44.       final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  47.         @Override public void subscribe(ObservableEmitter<Connectivity> subscriber) throws Exception {
  48.           networkCallback = createNetworkCallback(subscriber, context);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$2.val$context`.
  44.       final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  47.         @Override public void subscribe(ObservableEmitter<Connectivity> subscriber) throws Exception {
  48.           networkCallback = createNetworkCallback(subscriber, context);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$2.val$manager`.
  44.       final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  47.         @Override public void subscribe(ObservableEmitter<Connectivity> subscriber) throws Exception {
  48.           networkCallback = createNetworkCallback(subscriber, context);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy.networkCallback`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ConnectivityManager$NetworkCallback LollipopNetworkObservingStrategy.access$102(LollipopNetworkObservingStrategy,ConnectivityManager$NetworkCallback)`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `x0`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `x0`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$2.this$1`.
  57.           context.registerReceiver(receiver, filter);
  58.   
  59. >         Disposable disposable = disposeInUiThread(new Action() {
  60.             @Override public void run() {
  61.               tryToUnregisterReceiver(context, receiver);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$2.val$receiver`.
  57.           context.registerReceiver(receiver, filter);
  58.   
  59. >         Disposable disposable = disposeInUiThread(new Action() {
  60.             @Override public void run() {
  61.               tryToUnregisterReceiver(context, receiver);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2.this$0`.
  80.   
  81.     private Disposable disposeInUiThread(final Action action) {
  82. >     return Disposables.fromAction(new Action() {
  83.         @Override public void run() throws Exception {
  84.           if (Looper.getMainLooper() == Looper.myLooper()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2.val$action`.
  80.   
  81.     private Disposable disposeInUiThread(final Action action) {
  82. >     return Disposables.fromAction(new Action() {
  83.         @Override public void run() throws Exception {
  84.           if (Looper.getMainLooper() == Looper.myLooper()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ConnectivityPredicate$1.test(Connectivity)`.
  39.       return new Predicate<Connectivity>() {
  40.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  41. >         for (NetworkInfo.State state : states) {
  42.             if (connectivity.state() == state) {
  43.               return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:42: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  40.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  41.           for (NetworkInfo.State state : states) {
  42. >           if (connectivity.state() == state) {
  43.               return true;
  44.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.this$0`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$errorHandler`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$host`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$httpResponse`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$port`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$timeoutInMs`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  54.           tryToUnregisterCallback(manager);
  55.         }
  56. >     }).startWith(Connectivity.create(context)).distinctUntilChanged();
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:44: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  42.     @Override public Observable<Connectivity> observeNetworkConnectivity(final Context context) {
  43.       final String service = Context.CONNECTIVITY_SERVICE;
  44. >     final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46.       return Observable.create(new ObservableOnSubscribe<Connectivity>() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:42: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `x0`.
  40.    * Uses Broadcast Receiver.
  41.    */
  42. > public class PreLollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  43.   
  44.     @Override public Observable<Connectivity> observeNetworkConnectivity(final Context context) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:89: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$2.this$0`.
  87.   
  88.     @NonNull protected BroadcastReceiver createIdleBroadcastReceiver() {
  89. >     return new BroadcastReceiver() {
  90.         @Override public void onReceive(final Context context, final Intent intent) {
  91.           if (isIdleMode(context)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:128: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$3.this$0`.
  126.   
  127.     protected ConnectivityManager.NetworkCallback createNetworkCallback(final Context context) {
  128. >     return new ConnectivityManager.NetworkCallback() {
  129.         @Override public void onAvailable(Network network) {
  130.           onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:128: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$3.val$context`.
  126.   
  127.     protected ConnectivityManager.NetworkCallback createNetworkCallback(final Context context) {
  128. >     return new ConnectivityManager.NetworkCallback() {
  129.         @Override public void onAvailable(Network network) {
  130.           onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:64: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `emitter`.
  62.             }
  63.           });
  64. >         emitter.setDisposable(disposable);
  65.         }
  66.       }).defaultIfEmpty(Connectivity.create());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:52: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  50.     private static ConnectivityManager getConnectivityManager(Context context) {
  51.       final String service = Context.CONNECTIVITY_SERVICE;
  52. >     return (ConnectivityManager) context.getSystemService(service);
  53.     }
  54.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:53: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  51.           final BroadcastReceiver receiver = new BroadcastReceiver() {
  52.             @Override public void onReceive(Context context, Intent intent) {
  53. >             emitter.onNext(Connectivity.create(context));
  54.             }
  55.           };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:59: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`.
  57.   
  58.     private InternetObservingSettings(Builder builder) {
  59. >     this(builder.initialInterval, builder.interval, builder.host, builder.port, builder.timeout,
  60.           builder.httpResponse, builder.errorHandler, builder.strategy);
  61.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void LollipopNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  60.       try {
  61.         manager.unregisterNetworkCallback(networkCallback);
  62. >     } catch (Exception exception) {
  63.         onError("could not unregister network callback", exception);
  64.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:61: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `manager`.
  59.     private void tryToUnregisterCallback(final ConnectivityManager manager) {
  60.       try {
  61. >       manager.unregisterNetworkCallback(networkCallback);
  62.       } catch (Exception exception) {
  63.         onError("could not unregister network callback", exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:62: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void LollipopNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  60.       try {
  61.         manager.unregisterNetworkCallback(networkCallback);
  62. >     } catch (Exception exception) {
  63.         onError("could not unregister network callback", exception);
  64.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:61: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ConnectivityPredicate$2.test(Connectivity)`.
  59.       return new Predicate<Connectivity>() {
  60.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  61. >         for (int type : extendedTypes) {
  62.             if (connectivity.type() == type) {
  63.               return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:62: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  60.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  61.           for (int type : extendedTypes) {
  62. >           if (connectivity.type() == type) {
  63.               return true;
  64.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  78.           tryToUnregisterReceiver(context);
  79.         }
  80. >     }).startWith(Connectivity.create(context)).distinctUntilChanged().toObservable();
  81.     }
  82.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:63: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  61.     @Override public Observable<Connectivity> observeNetworkConnectivity(final Context context) {
  62.       final String service = Context.CONNECTIVITY_SERVICE;
  63. >     final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  64.       networkCallback = createNetworkCallback(context);
  65.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:68: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  66.     private static Connectivity create(NetworkInfo networkInfo) {
  67.       return new Builder()
  68. >         .state(networkInfo.getState())
  69.           .detailedState(networkInfo.getDetailedState())
  70.           .type(networkInfo.getType())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:69: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  67.       return new Builder()
  68.           .state(networkInfo.getState())
  69. >         .detailedState(networkInfo.getDetailedState())
  70.           .type(networkInfo.getType())
  71.           .subType(networkInfo.getSubtype())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:70: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  68.           .state(networkInfo.getState())
  69.           .detailedState(networkInfo.getDetailedState())
  70. >         .type(networkInfo.getType())
  71.           .subType(networkInfo.getSubtype())
  72.           .available(networkInfo.isAvailable())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  69.           .detailedState(networkInfo.getDetailedState())
  70.           .type(networkInfo.getType())
  71. >         .subType(networkInfo.getSubtype())
  72.           .available(networkInfo.isAvailable())
  73.           .failover(networkInfo.isFailover())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:72: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  70.           .type(networkInfo.getType())
  71.           .subType(networkInfo.getSubtype())
  72. >         .available(networkInfo.isAvailable())
  73.           .failover(networkInfo.isFailover())
  74.           .roaming(networkInfo.isRoaming())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:73: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  71.           .subType(networkInfo.getSubtype())
  72.           .available(networkInfo.isAvailable())
  73. >         .failover(networkInfo.isFailover())
  74.           .roaming(networkInfo.isRoaming())
  75.           .typeName(networkInfo.getTypeName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:74: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  72.           .available(networkInfo.isAvailable())
  73.           .failover(networkInfo.isFailover())
  74. >         .roaming(networkInfo.isRoaming())
  75.           .typeName(networkInfo.getTypeName())
  76.           .subTypeName(networkInfo.getSubtypeName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:75: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  73.           .failover(networkInfo.isFailover())
  74.           .roaming(networkInfo.isRoaming())
  75. >         .typeName(networkInfo.getTypeName())
  76.           .subTypeName(networkInfo.getSubtypeName())
  77.           .reason(networkInfo.getReason())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:76: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  74.           .roaming(networkInfo.isRoaming())
  75.           .typeName(networkInfo.getTypeName())
  76. >         .subTypeName(networkInfo.getSubtypeName())
  77.           .reason(networkInfo.getReason())
  78.           .extraInfo(networkInfo.getExtraInfo())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:77: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  75.           .typeName(networkInfo.getTypeName())
  76.           .subTypeName(networkInfo.getSubtypeName())
  77. >         .reason(networkInfo.getReason())
  78.           .extraInfo(networkInfo.getExtraInfo())
  79.           .build();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:78: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  76.           .subTypeName(networkInfo.getSubtypeName())
  77.           .reason(networkInfo.getReason())
  78. >         .extraInfo(networkInfo.getExtraInfo())
  79.           .build();
  80.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:72: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void PreLollipopNetworkObservingStrategy.tryToUnregisterReceiver(Context,BroadcastReceiver)`.
  70.       try {
  71.         context.unregisterReceiver(receiver);
  72. >     } catch (Exception exception) {
  73.         onError("receiver was already unregistered", exception);
  74.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  69.     protected void tryToUnregisterReceiver(final Context context, final BroadcastReceiver receiver) {
  70.       try {
  71. >       context.unregisterReceiver(receiver);
  72.       } catch (Exception exception) {
  73.         onError("receiver was already unregistered", exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:72: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void PreLollipopNetworkObservingStrategy.tryToUnregisterReceiver(Context,BroadcastReceiver)`.
  70.       try {
  71.         context.unregisterReceiver(receiver);
  72. >     } catch (Exception exception) {
  73.         onError("receiver was already unregistered", exception);
  74.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$3.this$0`.
  71.     private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,
  72.         final Context context) {
  73. >     return new ConnectivityManager.NetworkCallback() {
  74.         @Override public void onAvailable(Network network) {
  75.           subscriber.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$3.val$context`.
  71.     private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,
  72.         final Context context) {
  73. >     return new ConnectivityManager.NetworkCallback() {
  74.         @Override public void onAvailable(Network network) {
  75.           subscriber.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$3.val$subscriber`.
  71.     private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,
  72.         final Context context) {
  73. >     return new ConnectivityManager.NetworkCallback() {
  74.         @Override public void onAvailable(Network network) {
  75.           subscriber.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int[] ConnectivityPredicate.appendUnknownNetworkTypeToTypes(int[])`.
  80.       int i = 0;
  81.       final int[] extendedTypes = new int[types.length + 1];
  82. >     for (int type : types) {
  83.         extendedTypes[i] = type;
  84.         i++;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:87: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int[] ConnectivityPredicate.appendUnknownNetworkTypeToTypes(int[])`.
  85.       }
  86.       extendedTypes[i] = Connectivity.UNKNOWN_TYPE;
  87. >     return extendedTypes;
  88.     }
  89.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:86: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `extendedTypes`.
  84.         i++;
  85.       }
  86. >     extendedTypes[i] = Connectivity.UNKNOWN_TYPE;
  87.       return extendedTypes;
  88.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:82: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `types`.
  80.       int i = 0;
  81.       final int[] extendedTypes = new int[types.length + 1];
  82. >     for (int type : types) {
  83.         extendedTypes[i] = type;
  84.         i++;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous argument `host` passed to nonnull parameter.
  80.     protected String adjustHost(final String host) {
  81.       if (!host.startsWith(HTTP_PROTOCOL) && !host.startsWith(HTTPS_PROTOCOL)) {
  82. >       return HTTP_PROTOCOL.concat(host);
  83.       }
  84.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:85: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String WalledGardenInternetObservingStrategy.adjustHost(String)`.
  83.       }
  84.   
  85. >     return host;
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:81: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  79.   
  80.     protected String adjustHost(final String host) {
  81. >     if (!host.startsWith(HTTP_PROTOCOL) && !host.startsWith(HTTPS_PROTOCOL)) {
  82.         return HTTP_PROTOCOL.concat(host);
  83.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:87: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String SocketInternetObservingStrategy.adjustHost(String)`.
  85.         return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);
  86.       }
  87. >     return host;
  88.     }
  89.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:82: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  80.      */
  81.     protected String adjustHost(final String host) {
  82. >     if (host.startsWith(HTTP_PROTOCOL)) {
  83.         return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84.       } else if (host.startsWith(HTTPS_PROTOCOL)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:83: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  81.     protected String adjustHost(final String host) {
  82.       if (host.startsWith(HTTP_PROTOCOL)) {
  83. >       return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84.       } else if (host.startsWith(HTTPS_PROTOCOL)) {
  85.         return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:84: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  82.       if (host.startsWith(HTTP_PROTOCOL)) {
  83.         return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84. >     } else if (host.startsWith(HTTPS_PROTOCOL)) {
  85.         return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);
  86.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:85: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  83.         return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84.       } else if (host.startsWith(HTTPS_PROTOCOL)) {
  85. >       return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);
  86.       }
  87.       return host;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:83: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  81.   
  82.     private Connectivity(Builder builder) {
  83. >     state = builder.state;
  84.       detailedState = builder.detailedState;
  85.       type = builder.type;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:84: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  82.     private Connectivity(Builder builder) {
  83.       state = builder.state;
  84. >     detailedState = builder.detailedState;
  85.       type = builder.type;
  86.       subType = builder.subType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:85: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  83.       state = builder.state;
  84.       detailedState = builder.detailedState;
  85. >     type = builder.type;
  86.       subType = builder.subType;
  87.       available = builder.available;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:86: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  84.       detailedState = builder.detailedState;
  85.       type = builder.type;
  86. >     subType = builder.subType;
  87.       available = builder.available;
  88.       failover = builder.failover;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:87: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  85.       type = builder.type;
  86.       subType = builder.subType;
  87. >     available = builder.available;
  88.       failover = builder.failover;
  89.       roaming = builder.roaming;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:88: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  86.       subType = builder.subType;
  87.       available = builder.available;
  88. >     failover = builder.failover;
  89.       roaming = builder.roaming;
  90.       typeName = builder.typeName;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:89: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  87.       available = builder.available;
  88.       failover = builder.failover;
  89. >     roaming = builder.roaming;
  90.       typeName = builder.typeName;
  91.       subTypeName = builder.subTypeName;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:90: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  88.       failover = builder.failover;
  89.       roaming = builder.roaming;
  90. >     typeName = builder.typeName;
  91.       subTypeName = builder.subTypeName;
  92.       reason = builder.reason;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:91: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  89.       roaming = builder.roaming;
  90.       typeName = builder.typeName;
  91. >     subTypeName = builder.subTypeName;
  92.       reason = builder.reason;
  93.       extraInfo = builder.extraInfo;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:92: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  90.       typeName = builder.typeName;
  91.       subTypeName = builder.subTypeName;
  92. >     reason = builder.reason;
  93.       extraInfo = builder.extraInfo;
  94.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:93: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  91.       subTypeName = builder.subTypeName;
  92.       reason = builder.reason;
  93. >     extraInfo = builder.extraInfo;
  94.     }
  95.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:85: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  83.     protected void registerIdleReceiver(final Context context) {
  84.       final IntentFilter filter = new IntentFilter(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED);
  85. >     context.registerReceiver(idleReceiver, filter);
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:91: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  89.       Preconditions.checkNotNull(context, "context == null");
  90.       Preconditions.checkNotNull(strategy, "strategy == null");
  91. >     return strategy.observeNetworkConnectivity(context);
  92.     }
  93.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:94: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  92.             onNext(Connectivity.create());
  93.           } else {
  94. >           onNext(Connectivity.create(context));
  95.           }
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:92: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void PreLollipopNetworkObservingStrategy$2$1.run()`.
  90.                 try {
  91.                   action.run();
  92. >               } catch (Exception e) {
  93.                   onError("Could not unregister receiver in UI Thread", e);
  94.                 }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:92: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void PreLollipopNetworkObservingStrategy$2$1.run()`.
  90.                 try {
  91.                   action.run();
  92. >               } catch (Exception e) {
  93.                   onError("Could not unregister receiver in UI Thread", e);
  94.                 }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:104: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  102.         urlConnection = createHttpUrlConnection(host, port, timeoutInMs);
  103.         return urlConnection.getResponseCode() == httpResponse;
  104. >     } catch (IOException e) {
  105.         errorHandler.handleError(e, "Could not establish connection with WalledGardenStrategy");
  106.         return Boolean.FALSE;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:105: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `errorHandler`.
  103.         return urlConnection.getResponseCode() == httpResponse;
  104.       } catch (IOException e) {
  105. >       errorHandler.handleError(e, "Could not establish connection with WalledGardenStrategy");
  106.         return Boolean.FALSE;
  107.       } finally {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:100: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  98.     protected Boolean isConnected(final String host, final int port, final int timeoutInMs,
  99.         final int httpResponse, final ErrorHandler errorHandler) {
  100. >     HttpURLConnection urlConnection = null;
  101.       try {
  102.         urlConnection = createHttpUrlConnection(host, port, timeoutInMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:104: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  102.         urlConnection = createHttpUrlConnection(host, port, timeoutInMs);
  103.         return urlConnection.getResponseCode() == httpResponse;
  104. >     } catch (IOException e) {
  105.         errorHandler.handleError(e, "Could not establish connection with WalledGardenStrategy");
  106.         return Boolean.FALSE;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:108: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  106.         return Boolean.FALSE;
  107.       } finally {
  108. >       if (urlConnection != null) {
  109.           urlConnection.disconnect();
  110.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:101: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  99.   
  100.     protected boolean isIdleMode(final Context context) {
  101. >     final String packageName = context.getPackageName();
  102.       final PowerManager manager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
  103.       boolean isIgnoringOptimizations = manager.isIgnoringBatteryOptimizations(packageName);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:102: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  100.     protected boolean isIdleMode(final Context context) {
  101.       final String packageName = context.getPackageName();
  102. >     final PowerManager manager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
  103.       boolean isIgnoringOptimizations = manager.isIgnoringBatteryOptimizations(packageName);
  104.       return manager.isDeviceIdleMode() && !isIgnoringOptimizations;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:110: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  108.       try {
  109.         manager.unregisterNetworkCallback(networkCallback);
  110. >     } catch (Exception exception) {
  111.         onError(ERROR_MSG_NETWORK_CALLBACK, exception);
  112.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:109: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `manager`.
  107.     protected void tryToUnregisterCallback(final ConnectivityManager manager) {
  108.       try {
  109. >       manager.unregisterNetworkCallback(networkCallback);
  110.       } catch (Exception exception) {
  111.         onError(ERROR_MSG_NETWORK_CALLBACK, exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:110: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  108.       try {
  109.         manager.unregisterNetworkCallback(networkCallback);
  110. >     } catch (Exception exception) {
  111.         onError(ERROR_MSG_NETWORK_CALLBACK, exception);
  112.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:118: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterReceiver(Context)`.
  116.       try {
  117.         context.unregisterReceiver(idleReceiver);
  118. >     } catch (Exception exception) {
  119.         onError(ERROR_MSG_RECEIVER, exception);
  120.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:117: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  115.     protected void tryToUnregisterReceiver(Context context) {
  116.       try {
  117. >       context.unregisterReceiver(idleReceiver);
  118.       } catch (Exception exception) {
  119.         onError(ERROR_MSG_RECEIVER, exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:118: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterReceiver(Context)`.
  116.       try {
  117.         context.unregisterReceiver(idleReceiver);
  118. >     } catch (Exception exception) {
  119.         onError(ERROR_MSG_RECEIVER, exception);
  120.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:122: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  120.     public static Observable<Boolean> observeInternetConnectivity(
  121.         InternetObservingSettings settings) {
  122. >     return observeInternetConnectivity(settings.strategy(), settings.initialInterval(),
  123.           settings.interval(), settings.host(), settings.port(),
  124.           settings.timeout(), settings.httpResponse(), settings.errorHandler());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:123: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  121.         InternetObservingSettings settings) {
  122.       return observeInternetConnectivity(settings.strategy(), settings.initialInterval(),
  123. >         settings.interval(), settings.host(), settings.port(),
  124.           settings.timeout(), settings.httpResponse(), settings.errorHandler());
  125.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:124: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  122.       return observeInternetConnectivity(settings.strategy(), settings.initialInterval(),
  123.           settings.interval(), settings.host(), settings.port(),
  124. >         settings.timeout(), settings.httpResponse(), settings.errorHandler());
  125.     }
  126.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:129: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  127.         socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128.         isConnected = socket.isConnected();
  129. >     } catch (IOException e) {
  130.         isConnected = Boolean.FALSE;
  131.       } finally {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:134: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  132.         try {
  133.           socket.close();
  134. >       } catch (IOException exception) {
  135.           errorHandler.handleError(exception, "Could not close the socket");
  136.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:135: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `errorHandler`.
  133.           socket.close();
  134.         } catch (IOException exception) {
  135. >         errorHandler.handleError(exception, "Could not close the socket");
  136.         }
  137.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:127: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `socket`.
  125.       boolean isConnected;
  126.       try {
  127. >       socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128.         isConnected = socket.isConnected();
  129.       } catch (IOException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:128: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `socket`.
  126.       try {
  127.         socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128. >       isConnected = socket.isConnected();
  129.       } catch (IOException e) {
  130.         isConnected = Boolean.FALSE;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:133: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `socket`.
  131.       } finally {
  132.         try {
  133. >         socket.close();
  134.         } catch (IOException exception) {
  135.           errorHandler.handleError(exception, "Could not close the socket");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:129: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  127.         socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128.         isConnected = socket.isConnected();
  129. >     } catch (IOException e) {
  130.         isConnected = Boolean.FALSE;
  131.       } finally {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:132: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  130.         isConnected = Boolean.FALSE;
  131.       } finally {
  132. >       try {
  133.           socket.close();
  134.         } catch (IOException exception) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:134: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  132.         try {
  133.           socket.close();
  134. >       } catch (IOException exception) {
  135.           errorHandler.handleError(exception, "Could not close the socket");
  136.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:131: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `x0`.
  129.      * Settings builder, which contains default parameters
  130.      */
  131. >   public final static class Builder {
  132.       private int initialInterval = 0;
  133.       private int interval = 2000;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:148: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  146.         final int httpResponse, final ErrorHandler errorHandler) {
  147.       checkStrategyIsNotNull(strategy);
  148. >     return strategy.observeInternetConnectivity(initialIntervalInMs, intervalInMs, host, port,
  149.           timeoutInMs, httpResponse, errorHandler);
  150.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:151: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.initialInterval`.
  149.        */
  150.       public Builder initialInterval(int initialInterval) {
  151. >       this.initialInterval = initialInterval;
  152.         return this;
  153.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:162: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.interval`.
  160.        */
  161.       public Builder interval(int interval) {
  162. >       this.interval = interval;
  163.         return this;
  164.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:172: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.host`.
  170.        */
  171.       public Builder host(String host) {
  172. >       this.host = host;
  173.         return this;
  174.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:174: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  172.     @RequiresPermission(Manifest.permission.INTERNET)
  173.     public static Single<Boolean> checkInternetConnectivity(InternetObservingSettings settings) {
  174. >     return checkInternetConnectivity(settings.strategy(), settings.host(), settings.port(),
  175.           settings.timeout(), settings.httpResponse(), settings.errorHandler());
  176.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:175: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  173.     public static Single<Boolean> checkInternetConnectivity(InternetObservingSettings settings) {
  174.       return checkInternetConnectivity(settings.strategy(), settings.host(), settings.port(),
  175. >         settings.timeout(), settings.httpResponse(), settings.errorHandler());
  176.     }
  177.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:182: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.port`.
  180.        */
  181.       public Builder port(int port) {
  182. >       this.port = port;
  183.         return this;
  184.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:196: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  194.         final ErrorHandler errorHandler) {
  195.       checkStrategyIsNotNull(strategy);
  196. >     return strategy.checkInternetConnectivity(host, port, timeoutInMs, httpResponse, errorHandler);
  197.     }
  198.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:193: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.timeout`.
  191.        */
  192.       public Builder timeout(int timeout) {
  193. >       this.timeout = timeout;
  194.         return this;
  195.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:204: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.httpResponse`.
  202.        */
  203.       public Builder httpResponse(final int httpResponse) {
  204. >       this.httpResponse = httpResponse;
  205.         return this;
  206.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:214: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.errorHandler`.
  212.        */
  213.       public Builder errorHandler(ErrorHandler errorHandler) {
  214. >       this.errorHandler = errorHandler;
  215.         return this;
  216.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:225: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.strategy`.
  223.        */
  224.       public Builder strategy(InternetObservingStrategy strategy) {
  225. >       this.strategy = strategy;
  226.         return this;
  227.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:282: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `x0`.
  280.     }
  281.   
  282. >   public static class Builder {
  283.   
  284.       // disabling PMD for builder class attributes

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:300: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.state`.
  298.   
  299.       public Builder state(NetworkInfo.State state) {
  300. >       this.state = state;
  301.         return this;
  302.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:305: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.detailedState`.
  303.   
  304.       public Builder detailedState(NetworkInfo.DetailedState detailedState) {
  305. >       this.detailedState = detailedState;
  306.         return this;
  307.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:310: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.type`.
  308.   
  309.       public Builder type(int type) {
  310. >       this.type = type;
  311.         return this;
  312.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:315: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.subType`.
  313.   
  314.       public Builder subType(int subType) {
  315. >       this.subType = subType;
  316.         return this;
  317.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:320: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.available`.
  318.   
  319.       public Builder available(boolean available) {
  320. >       this.available = available;
  321.         return this;
  322.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:325: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.failover`.
  323.   
  324.       public Builder failover(boolean failover) {
  325. >       this.failover = failover;
  326.         return this;
  327.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:330: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.roaming`.
  328.   
  329.       public Builder roaming(boolean roaming) {
  330. >       this.roaming = roaming;
  331.         return this;
  332.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:335: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.typeName`.
  333.   
  334.       public Builder typeName(String name) {
  335. >       this.typeName = name;
  336.         return this;
  337.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:340: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.subTypeName`.
  338.   
  339.       public Builder subTypeName(String subTypeName) {
  340. >       this.subTypeName = subTypeName;
  341.         return this;
  342.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:345: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.reason`.
  343.   
  344.       public Builder reason(String reason) {
  345. >       this.reason = reason;
  346.         return this;
  347.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:350: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.extraInfo`.
  348.   
  349.       public Builder extraInfo(String extraInfo) {
  350. >       this.extraInfo = extraInfo;
  351.         return this;
  352.       }

Summary of the reports

  GRADUAL_BOUNDARY: 97
     GRADUAL_CHECK: 61
    GRADUAL_STATIC: 11Found 7 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:36: warning: GRADUAL_BOUNDARY
  check ambiguous argument `savedInstanceState` passed to nonnull parameter.
  34.   
  35.     @Override protected void onCreate(Bundle savedInstanceState) {
  36. >     super.onCreate(savedInstanceState);
  37.       setContentView(R.layout.activity_main);
  38.       tvConnectivityStatus = (TextView) findViewById(R.id.connectivity_status);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:49: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  47.           .observeOn(AndroidSchedulers.mainThread())
  48.           .subscribe(connectivity -> {
  49. >           Log.d(TAG, connectivity.toString());
  50.             final NetworkInfo.State state = connectivity.state();
  51.             final String name = connectivity.typeName();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:50: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  48.           .subscribe(connectivity -> {
  49.             Log.d(TAG, connectivity.toString());
  50. >           final NetworkInfo.State state = connectivity.state();
  51.             final String name = connectivity.typeName();
  52.             tvConnectivityStatus.setText(String.format("state: %s, typeName: %s", state, name));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:51: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  49.             Log.d(TAG, connectivity.toString());
  50.             final NetworkInfo.State state = connectivity.state();
  51. >           final String name = connectivity.typeName();
  52.             tvConnectivityStatus.setText(String.format("state: %s, typeName: %s", state, name));
  53.           });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:58: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `isConnected`.
  56.           .subscribeOn(Schedulers.io())
  57.           .observeOn(AndroidSchedulers.mainThread())
  58. >         .subscribe(isConnected -> tvInternetStatus.setText(isConnected.toString()));
  59.     }
  60.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:67: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void MainActivity.safelyDispose(io.reactivex.disposables.Disposable[])`.
  65.   
  66.     private void safelyDispose(Disposable... disposables) {
  67. >     for (Disposable subscription : disposables) {
  68.         if (subscription != null && !subscription.isDisposed()) {
  69.           subscription.dispose();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:67: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `disposables`.
  65.   
  66.     private void safelyDispose(Disposable... disposables) {
  67. >     for (Disposable subscription : disposables) {
  68.         if (subscription != null && !subscription.isDisposed()) {
  69.           subscription.dispose();

Summary of the reports

     GRADUAL_CHECK: 5
  GRADUAL_BOUNDARY: 2Found 169 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:39: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ConnectivityPredicate$1.val$states`.
  37.      */
  38.     public static Predicate<Connectivity> hasState(final NetworkInfo.State... states) {
  39. >     return new Predicate<Connectivity>() {
  40.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  41.           for (NetworkInfo.State state : states) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.this$0`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$adjustedHost`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$errorHandler`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$port`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$1.val$timeoutInMs`.
  56.   
  57.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  58. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  59.         @Override public Boolean apply(@NonNull Long tick) throws Exception {
  60.           return isConnected(adjustedHost, port, timeoutInMs, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.this$0`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$adjustedHost`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$errorHandler`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$httpResponse`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$port`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$1.val$timeoutInMs`.
  60.   
  61.       return Observable.interval(initialIntervalInMs, intervalInMs, TimeUnit.MILLISECONDS,
  62. >         Schedulers.io()).map(new Function<Long, Boolean>() {
  63.         @Override public Boolean apply(@NonNull Long tick) {
  64.           return isConnected(adjustedHost, port, timeoutInMs, httpResponse, errorHandler);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:75: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$1.this$0`.
  73.       manager.registerNetworkCallback(request, networkCallback);
  74.   
  75. >     return connectivitySubject.toFlowable(BackpressureStrategy.LATEST).doOnCancel(new Action() {
  76.         @Override public void run() {
  77.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:75: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$1.val$context`.
  73.       manager.registerNetworkCallback(request, networkCallback);
  74.   
  75. >     return connectivitySubject.toFlowable(BackpressureStrategy.LATEST).doOnCancel(new Action() {
  76.         @Override public void run() {
  77.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:75: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$1.val$manager`.
  73.       manager.registerNetworkCallback(request, networkCallback);
  74.   
  75. >     return connectivitySubject.toFlowable(BackpressureStrategy.LATEST).doOnCancel(new Action() {
  76.         @Override public void run() {
  77.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:51: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$1.this$1`.
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {
  51. >         final BroadcastReceiver receiver = new BroadcastReceiver() {
  52.             @Override public void onReceive(Context context, Intent intent) {
  53.               emitter.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:51: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$1.val$emitter`.
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {
  51. >         final BroadcastReceiver receiver = new BroadcastReceiver() {
  52.             @Override public void onReceive(Context context, Intent intent) {
  53.               emitter.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1.this$0`.
  46.       filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  47.   
  48. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1.val$context`.
  46.       filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  47.   
  48. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1.val$filter`.
  46.       filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);
  47.   
  48. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  49.         @Override public void subscribe(final ObservableEmitter<Connectivity> emitter)
  50.             throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:88: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2$1.this$1`.
  86.           } else {
  87.             final Scheduler.Worker inner = AndroidSchedulers.mainThread().createWorker();
  88. >           inner.schedule(new Runnable() {
  89.               @Override public void run() {
  90.                 try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:88: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2$1.val$inner`.
  86.           } else {
  87.             final Scheduler.Worker inner = AndroidSchedulers.mainThread().createWorker();
  88. >           inner.schedule(new Runnable() {
  89.               @Override public void run() {
  90.                 try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ConnectivityPredicate$2.val$extendedTypes`.
  57.     public static Predicate<Connectivity> hasType(final int... types) {
  58.       final int[] extendedTypes = appendUnknownNetworkTypeToTypes(types);
  59. >     return new Predicate<Connectivity>() {
  60.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  61.           for (int type : extendedTypes) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.this$0`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$errorHandler`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$host`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$port`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:69: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.SocketInternetObservingStrategy$2.val$timeoutInMs`.
  67.       checkGeneralPreconditions(host, port, timeoutInMs, errorHandler);
  68.   
  69. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  70.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) throws Exception {
  71.           emitter.onSuccess(isConnected(host, port, timeoutInMs, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.errorHandler`.
  45.       this.timeout = timeout;
  46.       this.httpResponse = httpResponse;
  47. >     this.errorHandler = errorHandler;
  48.       this.strategy = strategy;
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:43: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.host`.
  41.       this.initialInterval = initialInterval;
  42.       this.interval = interval;
  43. >     this.host = host;
  44.       this.port = port;
  45.       this.timeout = timeout;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.httpResponse`.
  44.       this.port = port;
  45.       this.timeout = timeout;
  46. >     this.httpResponse = httpResponse;
  47.       this.errorHandler = errorHandler;
  48.       this.strategy = strategy;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.initialInterval`.
  39.         int timeout, int httpResponse, ErrorHandler errorHandler,
  40.         InternetObservingStrategy strategy) {
  41. >     this.initialInterval = initialInterval;
  42.       this.interval = interval;
  43.       this.host = host;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:42: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.interval`.
  40.         InternetObservingStrategy strategy) {
  41.       this.initialInterval = initialInterval;
  42. >     this.interval = interval;
  43.       this.host = host;
  44.       this.port = port;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:44: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.port`.
  42.       this.interval = interval;
  43.       this.host = host;
  44. >     this.port = port;
  45.       this.timeout = timeout;
  46.       this.httpResponse = httpResponse;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:48: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.strategy`.
  46.       this.httpResponse = httpResponse;
  47.       this.errorHandler = errorHandler;
  48. >     this.strategy = strategy;
  49.     }
  50.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:45: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings.timeout`.
  43.       this.host = host;
  44.       this.port = port;
  45. >     this.timeout = timeout;
  46.       this.httpResponse = httpResponse;
  47.       this.errorHandler = errorHandler;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:52: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$1.this$0`.
  50.           manager.registerNetworkCallback(networkRequest, networkCallback);
  51.         }
  52. >     }).doOnDispose(new Action() {
  53.         @Override public void run() {
  54.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:52: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$1.val$manager`.
  50.           manager.registerNetworkCallback(networkRequest, networkCallback);
  51.         }
  52. >     }).doOnDispose(new Action() {
  53.         @Override public void run() {
  54.           tryToUnregisterCallback(manager);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$2.this$0`.
  44.       final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  47.         @Override public void subscribe(ObservableEmitter<Connectivity> subscriber) throws Exception {
  48.           networkCallback = createNetworkCallback(subscriber, context);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$2.val$context`.
  44.       final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  47.         @Override public void subscribe(ObservableEmitter<Connectivity> subscriber) throws Exception {
  48.           networkCallback = createNetworkCallback(subscriber, context);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$2.val$manager`.
  44.       final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46. >     return Observable.create(new ObservableOnSubscribe<Connectivity>() {
  47.         @Override public void subscribe(ObservableEmitter<Connectivity> subscriber) throws Exception {
  48.           networkCallback = createNetworkCallback(subscriber, context);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy.networkCallback`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ConnectivityManager$NetworkCallback LollipopNetworkObservingStrategy.access$102(LollipopNetworkObservingStrategy,ConnectivityManager$NetworkCallback)`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `x0`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:38: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `x0`.
  36.    * Uses Network Callback API.
  37.    */
  38. > @TargetApi(21) public class LollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  39.     @SuppressWarnings("NullAway") // it has to be initialized in the Observable due to Context
  40.     private NetworkCallback networkCallback;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$2.this$1`.
  57.           context.registerReceiver(receiver, filter);
  58.   
  59. >         Disposable disposable = disposeInUiThread(new Action() {
  60.             @Override public void run() {
  61.               tryToUnregisterReceiver(context, receiver);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$1$2.val$receiver`.
  57.           context.registerReceiver(receiver, filter);
  58.   
  59. >         Disposable disposable = disposeInUiThread(new Action() {
  60.             @Override public void run() {
  61.               tryToUnregisterReceiver(context, receiver);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2.this$0`.
  80.   
  81.     private Disposable disposeInUiThread(final Action action) {
  82. >     return Disposables.fromAction(new Action() {
  83.         @Override public void run() throws Exception {
  84.           if (Looper.getMainLooper() == Looper.myLooper()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategy$2.val$action`.
  80.   
  81.     private Disposable disposeInUiThread(final Action action) {
  82. >     return Disposables.fromAction(new Action() {
  83.         @Override public void run() throws Exception {
  84.           if (Looper.getMainLooper() == Looper.myLooper()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ConnectivityPredicate$1.test(Connectivity)`.
  39.       return new Predicate<Connectivity>() {
  40.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  41. >         for (NetworkInfo.State state : states) {
  42.             if (connectivity.state() == state) {
  43.               return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:42: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  40.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  41.           for (NetworkInfo.State state : states) {
  42. >           if (connectivity.state() == state) {
  43.               return true;
  44.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.this$0`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$errorHandler`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$host`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$httpResponse`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$port`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.strategy.WalledGardenInternetObservingStrategy$2.val$timeoutInMs`.
  71.       checkGeneralPreconditions(host, port, timeoutInMs, httpResponse, errorHandler);
  72.   
  73. >     return Single.create(new SingleOnSubscribe<Boolean>() {
  74.         @Override public void subscribe(@NonNull SingleEmitter<Boolean> emitter) {
  75.           emitter.onSuccess(isConnected(host, port, timeoutInMs, httpResponse, errorHandler));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  54.           tryToUnregisterCallback(manager);
  55.         }
  56. >     }).startWith(Connectivity.create(context)).distinctUntilChanged();
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:44: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  42.     @Override public Observable<Connectivity> observeNetworkConnectivity(final Context context) {
  43.       final String service = Context.CONNECTIVITY_SERVICE;
  44. >     final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  45.   
  46.       return Observable.create(new ObservableOnSubscribe<Connectivity>() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:42: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `x0`.
  40.    * Uses Broadcast Receiver.
  41.    */
  42. > public class PreLollipopNetworkObservingStrategy implements NetworkObservingStrategy {
  43.   
  44.     @Override public Observable<Connectivity> observeNetworkConnectivity(final Context context) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:89: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$2.this$0`.
  87.   
  88.     @NonNull protected BroadcastReceiver createIdleBroadcastReceiver() {
  89. >     return new BroadcastReceiver() {
  90.         @Override public void onReceive(final Context context, final Intent intent) {
  91.           if (isIdleMode(context)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:128: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$3.this$0`.
  126.   
  127.     protected ConnectivityManager.NetworkCallback createNetworkCallback(final Context context) {
  128. >     return new ConnectivityManager.NetworkCallback() {
  129.         @Override public void onAvailable(Network network) {
  130.           onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:128: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.MarshmallowNetworkObservingStrategy$3.val$context`.
  126.   
  127.     protected ConnectivityManager.NetworkCallback createNetworkCallback(final Context context) {
  128. >     return new ConnectivityManager.NetworkCallback() {
  129.         @Override public void onAvailable(Network network) {
  130.           onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:64: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `emitter`.
  62.             }
  63.           });
  64. >         emitter.setDisposable(disposable);
  65.         }
  66.       }).defaultIfEmpty(Connectivity.create());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:52: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  50.     private static ConnectivityManager getConnectivityManager(Context context) {
  51.       final String service = Context.CONNECTIVITY_SERVICE;
  52. >     return (ConnectivityManager) context.getSystemService(service);
  53.     }
  54.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:53: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  51.           final BroadcastReceiver receiver = new BroadcastReceiver() {
  52.             @Override public void onReceive(Context context, Intent intent) {
  53. >             emitter.onNext(Connectivity.create(context));
  54.             }
  55.           };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:59: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`,check dereference of ambiguous pointer `builder`.
  57.   
  58.     private InternetObservingSettings(Builder builder) {
  59. >     this(builder.initialInterval, builder.interval, builder.host, builder.port, builder.timeout,
  60.           builder.httpResponse, builder.errorHandler, builder.strategy);
  61.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:62: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void LollipopNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  60.       try {
  61.         manager.unregisterNetworkCallback(networkCallback);
  62. >     } catch (Exception exception) {
  63.         onError("could not unregister network callback", exception);
  64.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:61: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `manager`.
  59.     private void tryToUnregisterCallback(final ConnectivityManager manager) {
  60.       try {
  61. >       manager.unregisterNetworkCallback(networkCallback);
  62.       } catch (Exception exception) {
  63.         onError("could not unregister network callback", exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:62: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void LollipopNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  60.       try {
  61.         manager.unregisterNetworkCallback(networkCallback);
  62. >     } catch (Exception exception) {
  63.         onError("could not unregister network callback", exception);
  64.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:61: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ConnectivityPredicate$2.test(Connectivity)`.
  59.       return new Predicate<Connectivity>() {
  60.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  61. >         for (int type : extendedTypes) {
  62.             if (connectivity.type() == type) {
  63.               return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:62: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  60.         @Override public boolean test(@NonNull Connectivity connectivity) throws Exception {
  61.           for (int type : extendedTypes) {
  62. >           if (connectivity.type() == type) {
  63.               return true;
  64.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  78.           tryToUnregisterReceiver(context);
  79.         }
  80. >     }).startWith(Connectivity.create(context)).distinctUntilChanged().toObservable();
  81.     }
  82.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:63: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  61.     @Override public Observable<Connectivity> observeNetworkConnectivity(final Context context) {
  62.       final String service = Context.CONNECTIVITY_SERVICE;
  63. >     final ConnectivityManager manager = (ConnectivityManager) context.getSystemService(service);
  64.       networkCallback = createNetworkCallback(context);
  65.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:68: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  66.     private static Connectivity create(NetworkInfo networkInfo) {
  67.       return new Builder()
  68. >         .state(networkInfo.getState())
  69.           .detailedState(networkInfo.getDetailedState())
  70.           .type(networkInfo.getType())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:69: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  67.       return new Builder()
  68.           .state(networkInfo.getState())
  69. >         .detailedState(networkInfo.getDetailedState())
  70.           .type(networkInfo.getType())
  71.           .subType(networkInfo.getSubtype())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:70: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  68.           .state(networkInfo.getState())
  69.           .detailedState(networkInfo.getDetailedState())
  70. >         .type(networkInfo.getType())
  71.           .subType(networkInfo.getSubtype())
  72.           .available(networkInfo.isAvailable())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  69.           .detailedState(networkInfo.getDetailedState())
  70.           .type(networkInfo.getType())
  71. >         .subType(networkInfo.getSubtype())
  72.           .available(networkInfo.isAvailable())
  73.           .failover(networkInfo.isFailover())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:72: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  70.           .type(networkInfo.getType())
  71.           .subType(networkInfo.getSubtype())
  72. >         .available(networkInfo.isAvailable())
  73.           .failover(networkInfo.isFailover())
  74.           .roaming(networkInfo.isRoaming())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:73: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  71.           .subType(networkInfo.getSubtype())
  72.           .available(networkInfo.isAvailable())
  73. >         .failover(networkInfo.isFailover())
  74.           .roaming(networkInfo.isRoaming())
  75.           .typeName(networkInfo.getTypeName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:74: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  72.           .available(networkInfo.isAvailable())
  73.           .failover(networkInfo.isFailover())
  74. >         .roaming(networkInfo.isRoaming())
  75.           .typeName(networkInfo.getTypeName())
  76.           .subTypeName(networkInfo.getSubtypeName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:75: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  73.           .failover(networkInfo.isFailover())
  74.           .roaming(networkInfo.isRoaming())
  75. >         .typeName(networkInfo.getTypeName())
  76.           .subTypeName(networkInfo.getSubtypeName())
  77.           .reason(networkInfo.getReason())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:76: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  74.           .roaming(networkInfo.isRoaming())
  75.           .typeName(networkInfo.getTypeName())
  76. >         .subTypeName(networkInfo.getSubtypeName())
  77.           .reason(networkInfo.getReason())
  78.           .extraInfo(networkInfo.getExtraInfo())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:77: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  75.           .typeName(networkInfo.getTypeName())
  76.           .subTypeName(networkInfo.getSubtypeName())
  77. >         .reason(networkInfo.getReason())
  78.           .extraInfo(networkInfo.getExtraInfo())
  79.           .build();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:78: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `networkInfo`.
  76.           .subTypeName(networkInfo.getSubtypeName())
  77.           .reason(networkInfo.getReason())
  78. >         .extraInfo(networkInfo.getExtraInfo())
  79.           .build();
  80.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:72: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void PreLollipopNetworkObservingStrategy.tryToUnregisterReceiver(Context,BroadcastReceiver)`.
  70.       try {
  71.         context.unregisterReceiver(receiver);
  72. >     } catch (Exception exception) {
  73.         onError("receiver was already unregistered", exception);
  74.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  69.     protected void tryToUnregisterReceiver(final Context context, final BroadcastReceiver receiver) {
  70.       try {
  71. >       context.unregisterReceiver(receiver);
  72.       } catch (Exception exception) {
  73.         onError("receiver was already unregistered", exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:72: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void PreLollipopNetworkObservingStrategy.tryToUnregisterReceiver(Context,BroadcastReceiver)`.
  70.       try {
  71.         context.unregisterReceiver(receiver);
  72. >     } catch (Exception exception) {
  73.         onError("receiver was already unregistered", exception);
  74.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$3.this$0`.
  71.     private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,
  72.         final Context context) {
  73. >     return new ConnectivityManager.NetworkCallback() {
  74.         @Override public void onAvailable(Network network) {
  75.           subscriber.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$3.val$context`.
  71.     private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,
  72.         final Context context) {
  73. >     return new ConnectivityManager.NetworkCallback() {
  74.         @Override public void onAvailable(Network network) {
  75.           subscriber.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java:73: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.LollipopNetworkObservingStrategy$3.val$subscriber`.
  71.     private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,
  72.         final Context context) {
  73. >     return new ConnectivityManager.NetworkCallback() {
  74.         @Override public void onAvailable(Network network) {
  75.           subscriber.onNext(Connectivity.create(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int[] ConnectivityPredicate.appendUnknownNetworkTypeToTypes(int[])`.
  80.       int i = 0;
  81.       final int[] extendedTypes = new int[types.length + 1];
  82. >     for (int type : types) {
  83.         extendedTypes[i] = type;
  84.         i++;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:87: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int[] ConnectivityPredicate.appendUnknownNetworkTypeToTypes(int[])`.
  85.       }
  86.       extendedTypes[i] = Connectivity.UNKNOWN_TYPE;
  87. >     return extendedTypes;
  88.     }
  89.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:86: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `extendedTypes`.
  84.         i++;
  85.       }
  86. >     extendedTypes[i] = Connectivity.UNKNOWN_TYPE;
  87.       return extendedTypes;
  88.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityPredicate.java:82: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `types`.
  80.       int i = 0;
  81.       final int[] extendedTypes = new int[types.length + 1];
  82. >     for (int type : types) {
  83.         extendedTypes[i] = type;
  84.         i++;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:82: warning: GRADUAL_BOUNDARY
  check ambiguous argument `host` passed to nonnull parameter.
  80.     protected String adjustHost(final String host) {
  81.       if (!host.startsWith(HTTP_PROTOCOL) && !host.startsWith(HTTPS_PROTOCOL)) {
  82. >       return HTTP_PROTOCOL.concat(host);
  83.       }
  84.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:85: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String WalledGardenInternetObservingStrategy.adjustHost(String)`.
  83.       }
  84.   
  85. >     return host;
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:81: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  79.   
  80.     protected String adjustHost(final String host) {
  81. >     if (!host.startsWith(HTTP_PROTOCOL) && !host.startsWith(HTTPS_PROTOCOL)) {
  82.         return HTTP_PROTOCOL.concat(host);
  83.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:87: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String SocketInternetObservingStrategy.adjustHost(String)`.
  85.         return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);
  86.       }
  87. >     return host;
  88.     }
  89.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:82: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  80.      */
  81.     protected String adjustHost(final String host) {
  82. >     if (host.startsWith(HTTP_PROTOCOL)) {
  83.         return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84.       } else if (host.startsWith(HTTPS_PROTOCOL)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:83: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  81.     protected String adjustHost(final String host) {
  82.       if (host.startsWith(HTTP_PROTOCOL)) {
  83. >       return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84.       } else if (host.startsWith(HTTPS_PROTOCOL)) {
  85.         return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:84: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  82.       if (host.startsWith(HTTP_PROTOCOL)) {
  83.         return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84. >     } else if (host.startsWith(HTTPS_PROTOCOL)) {
  85.         return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);
  86.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:85: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `host`.
  83.         return host.replace(HTTP_PROTOCOL, EMPTY_STRING);
  84.       } else if (host.startsWith(HTTPS_PROTOCOL)) {
  85. >       return host.replace(HTTPS_PROTOCOL, EMPTY_STRING);
  86.       }
  87.       return host;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:83: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  81.   
  82.     private Connectivity(Builder builder) {
  83. >     state = builder.state;
  84.       detailedState = builder.detailedState;
  85.       type = builder.type;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:84: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  82.     private Connectivity(Builder builder) {
  83.       state = builder.state;
  84. >     detailedState = builder.detailedState;
  85.       type = builder.type;
  86.       subType = builder.subType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:85: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  83.       state = builder.state;
  84.       detailedState = builder.detailedState;
  85. >     type = builder.type;
  86.       subType = builder.subType;
  87.       available = builder.available;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:86: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  84.       detailedState = builder.detailedState;
  85.       type = builder.type;
  86. >     subType = builder.subType;
  87.       available = builder.available;
  88.       failover = builder.failover;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:87: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  85.       type = builder.type;
  86.       subType = builder.subType;
  87. >     available = builder.available;
  88.       failover = builder.failover;
  89.       roaming = builder.roaming;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:88: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  86.       subType = builder.subType;
  87.       available = builder.available;
  88. >     failover = builder.failover;
  89.       roaming = builder.roaming;
  90.       typeName = builder.typeName;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:89: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  87.       available = builder.available;
  88.       failover = builder.failover;
  89. >     roaming = builder.roaming;
  90.       typeName = builder.typeName;
  91.       subTypeName = builder.subTypeName;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:90: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  88.       failover = builder.failover;
  89.       roaming = builder.roaming;
  90. >     typeName = builder.typeName;
  91.       subTypeName = builder.subTypeName;
  92.       reason = builder.reason;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:91: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  89.       roaming = builder.roaming;
  90.       typeName = builder.typeName;
  91. >     subTypeName = builder.subTypeName;
  92.       reason = builder.reason;
  93.       extraInfo = builder.extraInfo;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:92: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  90.       typeName = builder.typeName;
  91.       subTypeName = builder.subTypeName;
  92. >     reason = builder.reason;
  93.       extraInfo = builder.extraInfo;
  94.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:93: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `builder`.
  91.       subTypeName = builder.subTypeName;
  92.       reason = builder.reason;
  93. >     extraInfo = builder.extraInfo;
  94.     }
  95.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:85: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  83.     protected void registerIdleReceiver(final Context context) {
  84.       final IntentFilter filter = new IntentFilter(PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED);
  85. >     context.registerReceiver(idleReceiver, filter);
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:91: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  89.       Preconditions.checkNotNull(context, "context == null");
  90.       Preconditions.checkNotNull(strategy, "strategy == null");
  91. >     return strategy.observeNetworkConnectivity(context);
  92.     }
  93.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:94: warning: GRADUAL_BOUNDARY
  check ambiguous argument `context` passed to nonnull parameter.
  92.             onNext(Connectivity.create());
  93.           } else {
  94. >           onNext(Connectivity.create(context));
  95.           }
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:92: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void PreLollipopNetworkObservingStrategy$2$1.run()`.
  90.                 try {
  91.                   action.run();
  92. >               } catch (Exception e) {
  93.                   onError("Could not unregister receiver in UI Thread", e);
  94.                 }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategy.java:92: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void PreLollipopNetworkObservingStrategy$2$1.run()`.
  90.                 try {
  91.                   action.run();
  92. >               } catch (Exception e) {
  93.                   onError("Could not unregister receiver in UI Thread", e);
  94.                 }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:104: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  102.         urlConnection = createHttpUrlConnection(host, port, timeoutInMs);
  103.         return urlConnection.getResponseCode() == httpResponse;
  104. >     } catch (IOException e) {
  105.         errorHandler.handleError(e, "Could not establish connection with WalledGardenStrategy");
  106.         return Boolean.FALSE;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:105: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `errorHandler`.
  103.         return urlConnection.getResponseCode() == httpResponse;
  104.       } catch (IOException e) {
  105. >       errorHandler.handleError(e, "Could not establish connection with WalledGardenStrategy");
  106.         return Boolean.FALSE;
  107.       } finally {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:100: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  98.     protected Boolean isConnected(final String host, final int port, final int timeoutInMs,
  99.         final int httpResponse, final ErrorHandler errorHandler) {
  100. >     HttpURLConnection urlConnection = null;
  101.       try {
  102.         urlConnection = createHttpUrlConnection(host, port, timeoutInMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:104: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  102.         urlConnection = createHttpUrlConnection(host, port, timeoutInMs);
  103.         return urlConnection.getResponseCode() == httpResponse;
  104. >     } catch (IOException e) {
  105.         errorHandler.handleError(e, "Could not establish connection with WalledGardenStrategy");
  106.         return Boolean.FALSE;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/WalledGardenInternetObservingStrategy.java:108: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Boolean WalledGardenInternetObservingStrategy.isConnected(String,int,int,int,ErrorHandler)`.
  106.         return Boolean.FALSE;
  107.       } finally {
  108. >       if (urlConnection != null) {
  109.           urlConnection.disconnect();
  110.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:101: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  99.   
  100.     protected boolean isIdleMode(final Context context) {
  101. >     final String packageName = context.getPackageName();
  102.       final PowerManager manager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
  103.       boolean isIgnoringOptimizations = manager.isIgnoringBatteryOptimizations(packageName);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:102: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  100.     protected boolean isIdleMode(final Context context) {
  101.       final String packageName = context.getPackageName();
  102. >     final PowerManager manager = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
  103.       boolean isIgnoringOptimizations = manager.isIgnoringBatteryOptimizations(packageName);
  104.       return manager.isDeviceIdleMode() && !isIgnoringOptimizations;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:110: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  108.       try {
  109.         manager.unregisterNetworkCallback(networkCallback);
  110. >     } catch (Exception exception) {
  111.         onError(ERROR_MSG_NETWORK_CALLBACK, exception);
  112.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:109: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `manager`.
  107.     protected void tryToUnregisterCallback(final ConnectivityManager manager) {
  108.       try {
  109. >       manager.unregisterNetworkCallback(networkCallback);
  110.       } catch (Exception exception) {
  111.         onError(ERROR_MSG_NETWORK_CALLBACK, exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:110: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterCallback(ConnectivityManager)`.
  108.       try {
  109.         manager.unregisterNetworkCallback(networkCallback);
  110. >     } catch (Exception exception) {
  111.         onError(ERROR_MSG_NETWORK_CALLBACK, exception);
  112.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:118: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterReceiver(Context)`.
  116.       try {
  117.         context.unregisterReceiver(idleReceiver);
  118. >     } catch (Exception exception) {
  119.         onError(ERROR_MSG_RECEIVER, exception);
  120.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:117: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  115.     protected void tryToUnregisterReceiver(Context context) {
  116.       try {
  117. >       context.unregisterReceiver(idleReceiver);
  118.       } catch (Exception exception) {
  119.         onError(ERROR_MSG_RECEIVER, exception);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/MarshmallowNetworkObservingStrategy.java:118: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void MarshmallowNetworkObservingStrategy.tryToUnregisterReceiver(Context)`.
  116.       try {
  117.         context.unregisterReceiver(idleReceiver);
  118. >     } catch (Exception exception) {
  119.         onError(ERROR_MSG_RECEIVER, exception);
  120.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:122: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  120.     public static Observable<Boolean> observeInternetConnectivity(
  121.         InternetObservingSettings settings) {
  122. >     return observeInternetConnectivity(settings.strategy(), settings.initialInterval(),
  123.           settings.interval(), settings.host(), settings.port(),
  124.           settings.timeout(), settings.httpResponse(), settings.errorHandler());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:123: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  121.         InternetObservingSettings settings) {
  122.       return observeInternetConnectivity(settings.strategy(), settings.initialInterval(),
  123. >         settings.interval(), settings.host(), settings.port(),
  124.           settings.timeout(), settings.httpResponse(), settings.errorHandler());
  125.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:124: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  122.       return observeInternetConnectivity(settings.strategy(), settings.initialInterval(),
  123.           settings.interval(), settings.host(), settings.port(),
  124. >         settings.timeout(), settings.httpResponse(), settings.errorHandler());
  125.     }
  126.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:129: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  127.         socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128.         isConnected = socket.isConnected();
  129. >     } catch (IOException e) {
  130.         isConnected = Boolean.FALSE;
  131.       } finally {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:134: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  132.         try {
  133.           socket.close();
  134. >       } catch (IOException exception) {
  135.           errorHandler.handleError(exception, "Could not close the socket");
  136.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:135: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `errorHandler`.
  133.           socket.close();
  134.         } catch (IOException exception) {
  135. >         errorHandler.handleError(exception, "Could not close the socket");
  136.         }
  137.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:127: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `socket`.
  125.       boolean isConnected;
  126.       try {
  127. >       socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128.         isConnected = socket.isConnected();
  129.       } catch (IOException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:128: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `socket`.
  126.       try {
  127.         socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128. >       isConnected = socket.isConnected();
  129.       } catch (IOException e) {
  130.         isConnected = Boolean.FALSE;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:133: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `socket`.
  131.       } finally {
  132.         try {
  133. >         socket.close();
  134.         } catch (IOException exception) {
  135.           errorHandler.handleError(exception, "Could not close the socket");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:129: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  127.         socket.connect(new InetSocketAddress(host, port), timeoutInMs);
  128.         isConnected = socket.isConnected();
  129. >     } catch (IOException e) {
  130.         isConnected = Boolean.FALSE;
  131.       } finally {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:132: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  130.         isConnected = Boolean.FALSE;
  131.       } finally {
  132. >       try {
  133.           socket.close();
  134.         } catch (IOException exception) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/strategy/SocketInternetObservingStrategy.java:134: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean SocketInternetObservingStrategy.isConnected(Socket,String,int,int,ErrorHandler)`.
  132.         try {
  133.           socket.close();
  134. >       } catch (IOException exception) {
  135.           errorHandler.handleError(exception, "Could not close the socket");
  136.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:131: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `x0`.
  129.      * Settings builder, which contains default parameters
  130.      */
  131. >   public final static class Builder {
  132.       private int initialInterval = 0;
  133.       private int interval = 2000;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:148: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  146.         final int httpResponse, final ErrorHandler errorHandler) {
  147.       checkStrategyIsNotNull(strategy);
  148. >     return strategy.observeInternetConnectivity(initialIntervalInMs, intervalInMs, host, port,
  149.           timeoutInMs, httpResponse, errorHandler);
  150.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:151: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.initialInterval`.
  149.        */
  150.       public Builder initialInterval(int initialInterval) {
  151. >       this.initialInterval = initialInterval;
  152.         return this;
  153.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:162: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.interval`.
  160.        */
  161.       public Builder interval(int interval) {
  162. >       this.interval = interval;
  163.         return this;
  164.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:172: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.host`.
  170.        */
  171.       public Builder host(String host) {
  172. >       this.host = host;
  173.         return this;
  174.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:174: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  172.     @RequiresPermission(Manifest.permission.INTERNET)
  173.     public static Single<Boolean> checkInternetConnectivity(InternetObservingSettings settings) {
  174. >     return checkInternetConnectivity(settings.strategy(), settings.host(), settings.port(),
  175.           settings.timeout(), settings.httpResponse(), settings.errorHandler());
  176.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:175: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `settings`.
  173.     public static Single<Boolean> checkInternetConnectivity(InternetObservingSettings settings) {
  174.       return checkInternetConnectivity(settings.strategy(), settings.host(), settings.port(),
  175. >         settings.timeout(), settings.httpResponse(), settings.errorHandler());
  176.     }
  177.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:182: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.port`.
  180.        */
  181.       public Builder port(int port) {
  182. >       this.port = port;
  183.         return this;
  184.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetwork.java:196: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  194.         final ErrorHandler errorHandler) {
  195.       checkStrategyIsNotNull(strategy);
  196. >     return strategy.checkInternetConnectivity(host, port, timeoutInMs, httpResponse, errorHandler);
  197.     }
  198.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:193: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.timeout`.
  191.        */
  192.       public Builder timeout(int timeout) {
  193. >       this.timeout = timeout;
  194.         return this;
  195.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:204: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.httpResponse`.
  202.        */
  203.       public Builder httpResponse(final int httpResponse) {
  204. >       this.httpResponse = httpResponse;
  205.         return this;
  206.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:214: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.errorHandler`.
  212.        */
  213.       public Builder errorHandler(ErrorHandler errorHandler) {
  214. >       this.errorHandler = errorHandler;
  215.         return this;
  216.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettings.java:225: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettings$Builder.strategy`.
  223.        */
  224.       public Builder strategy(InternetObservingStrategy strategy) {
  225. >       this.strategy = strategy;
  226.         return this;
  227.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:282: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `x0`.
  280.     }
  281.   
  282. >   public static class Builder {
  283.   
  284.       // disabling PMD for builder class attributes

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:300: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.state`.
  298.   
  299.       public Builder state(NetworkInfo.State state) {
  300. >       this.state = state;
  301.         return this;
  302.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:305: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.detailedState`.
  303.   
  304.       public Builder detailedState(NetworkInfo.DetailedState detailedState) {
  305. >       this.detailedState = detailedState;
  306.         return this;
  307.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:310: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.type`.
  308.   
  309.       public Builder type(int type) {
  310. >       this.type = type;
  311.         return this;
  312.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:315: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.subType`.
  313.   
  314.       public Builder subType(int subType) {
  315. >       this.subType = subType;
  316.         return this;
  317.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:320: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.available`.
  318.   
  319.       public Builder available(boolean available) {
  320. >       this.available = available;
  321.         return this;
  322.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:325: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.failover`.
  323.   
  324.       public Builder failover(boolean failover) {
  325. >       this.failover = failover;
  326.         return this;
  327.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:330: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.roaming`.
  328.   
  329.       public Builder roaming(boolean roaming) {
  330. >       this.roaming = roaming;
  331.         return this;
  332.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:335: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.typeName`.
  333.   
  334.       public Builder typeName(String name) {
  335. >       this.typeName = name;
  336.         return this;
  337.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:340: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.subTypeName`.
  338.   
  339.       public Builder subTypeName(String subTypeName) {
  340. >       this.subTypeName = subTypeName;
  341.         return this;
  342.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:345: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.reason`.
  343.   
  344.       public Builder reason(String reason) {
  345. >       this.reason = reason;
  346.         return this;
  347.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/Connectivity.java:350: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.Connectivity$Builder.extraInfo`.
  348.   
  349.       public Builder extraInfo(String extraInfo) {
  350. >       this.extraInfo = extraInfo;
  351.         return this;
  352.       }

Summary of the reports

  GRADUAL_BOUNDARY: 97
     GRADUAL_CHECK: 61
    GRADUAL_STATIC: 11Found 7 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:36: warning: GRADUAL_BOUNDARY
  check ambiguous argument `savedInstanceState` passed to nonnull parameter.
  34.   
  35.     @Override protected void onCreate(Bundle savedInstanceState) {
  36. >     super.onCreate(savedInstanceState);
  37.       setContentView(R.layout.activity_main);
  38.       tvConnectivityStatus = (TextView) findViewById(R.id.connectivity_status);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:49: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  47.           .observeOn(AndroidSchedulers.mainThread())
  48.           .subscribe(connectivity -> {
  49. >           Log.d(TAG, connectivity.toString());
  50.             final NetworkInfo.State state = connectivity.state();
  51.             final String name = connectivity.typeName();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:50: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  48.           .subscribe(connectivity -> {
  49.             Log.d(TAG, connectivity.toString());
  50. >           final NetworkInfo.State state = connectivity.state();
  51.             final String name = connectivity.typeName();
  52.             tvConnectivityStatus.setText(String.format("state: %s, typeName: %s", state, name));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:51: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  49.             Log.d(TAG, connectivity.toString());
  50.             final NetworkInfo.State state = connectivity.state();
  51. >           final String name = connectivity.typeName();
  52.             tvConnectivityStatus.setText(String.format("state: %s, typeName: %s", state, name));
  53.           });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:58: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `isConnected`.
  56.           .subscribeOn(Schedulers.io())
  57.           .observeOn(AndroidSchedulers.mainThread())
  58. >         .subscribe(isConnected -> tvInternetStatus.setText(isConnected.toString()));
  59.     }
  60.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:67: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void MainActivity.safelyDispose(io.reactivex.disposables.Disposable[])`.
  65.   
  66.     private void safelyDispose(Disposable... disposables) {
  67. >     for (Disposable subscription : disposables) {
  68.         if (subscription != null && !subscription.isDisposed()) {
  69.           subscription.dispose();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/app/src/main/java/com/github/pwittchen/reactivenetwork/app/MainActivity.java:67: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `disposables`.
  65.   
  66.     private void safelyDispose(Disposable... disposables) {
  67. >     for (Disposable subscription : disposables) {
  68.         if (subscription != null && !subscription.isDisposed()) {
  69.           subscription.dispose();

Summary of the reports

     GRADUAL_CHECK: 5
  GRADUAL_BOUNDARY: 2No issues foundNo issues foundFound 17 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/NetworkObservingStrategyTest.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.NetworkObservingStrategyTest$1.this$0`.
  54.   
  55.       //when
  56. >     strategy.observeNetworkConnectivity(context).subscribe(new Consumer<Connectivity>() {
  57.         @Override public void accept(Connectivity connectivity) throws Exception {
  58.           // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategyTest.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategyTest$1.this$0`.
  57.   
  58.       // when
  59. >     strategy.observeNetworkConnectivity(context).subscribe(new Consumer<Connectivity>() {
  60.         @Override public void accept(Connectivity connectivity) throws Exception {
  61.           // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/NetworkObservingStrategyTest.java:56: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  54.   
  55.       //when
  56. >     strategy.observeNetworkConnectivity(context).subscribe(new Consumer<Connectivity>() {
  57.         @Override public void accept(Connectivity connectivity) throws Exception {
  58.           // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/NetworkObservingStrategyTest.java:59: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  57.         @Override public void accept(Connectivity connectivity) throws Exception {
  58.           // then
  59. >         assertThat(connectivity.state()).isEqualTo(NetworkInfo.State.CONNECTED);
  60.         }
  61.       });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettingsTest.java:94: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettingsTest$1.this$0`.
  92.   
  93.     @NonNull private ErrorHandler createTestErrorHandler() {
  94. >     return new ErrorHandler() {
  95.         @Override public void handleError(Exception exception, String message) {
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategyTest.java:62: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  60.         @Override public void accept(Connectivity connectivity) throws Exception {
  61.           // then
  62. >         assertThat(connectivity.state()).isEqualTo(NetworkInfo.State.CONNECTED);
  63.         }
  64.       });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:126: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ReactiveNetworkTest.observeNetworkConnectivityShouldThrowAnExceptionForNullContext()`.
  124.     public void observeNetworkConnectivityShouldThrowAnExceptionForNullContext() {
  125.       // given
  126. >     final Context context = null;
  127.       final NetworkObservingStrategy strategy = new LollipopNetworkObservingStrategy();
  128.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:139: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ReactiveNetworkTest.observeNetworkConnectivityShouldThrowAnExceptionForNullStrategy()`.
  137.       // given
  138.       final Context context = RuntimeEnvironment.application;
  139. >     final NetworkObservingStrategy strategy = null;
  140.   
  141.       // when

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:150: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ReactiveNetworkTest.observeInternetConnectivityShouldThrowAnExceptionWhenStrategyIsNull()`.
  148.     public void observeInternetConnectivityShouldThrowAnExceptionWhenStrategyIsNull() {
  149.       // given
  150. >     final InternetObservingStrategy strategy = null;
  151.       final ErrorHandler errorHandler = new DefaultErrorHandler();
  152.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:166: error: GRADUAL_STATIC
  possibly-null argument `context` passed to nonnull parameter.
  164.   
  165.       // when
  166. >     Connectivity.create(context);
  167.   
  168.       // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:163: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ConnectivityTest.createShouldThrowAnExceptionWhenContextIsNull()`.
  161.     public void createShouldThrowAnExceptionWhenContextIsNull() {
  162.       // given
  163. >     final Context context = null;
  164.   
  165.       // when

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:268: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ReactiveNetworkTest$1$1.this$1`.
  266.         @Override public Single<Boolean> checkInternetConnectivity(String host, int port,
  267.             int timeoutInMs, int httpResponse, ErrorHandler errorHandler) {
  268. >         return Single.fromCallable(new Callable<Boolean>() {
  269.             @Override public Boolean call() {
  270.               return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:259: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ReactiveNetworkTest$1.this$0`.
  257.   
  258.     @NonNull private InternetObservingStrategy createTestInternetObservingStrategy() {
  259. >     return new InternetObservingStrategy() {
  260.         @Override public Observable<Boolean> observeInternetConnectivity(int initialIntervalInMs,
  261.             int intervalInMs, String host, int port, int timeoutInMs, int httpResponse,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:282: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ReactiveNetworkTest$2.this$0`.
  280.   
  281.     @NonNull private ErrorHandler createTestErrorHandler() {
  282. >     return new ErrorHandler() {
  283.         @Override public void handleError(Exception exception, String message) {
  284.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:276: error: GRADUAL_STATIC
  possibly-null return in nonnull method `String ReactiveNetworkTest$1.getDefaultPingHost()`.
  274.   
  275.         @Override public String getDefaultPingHost() {
  276. >         return null;
  277.         }
  278.       };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:325: error: GRADUAL_STATIC
  possibly-null argument `connectivityManager` passed to nonnull parameter.
  323.   
  324.       // when
  325. >     Connectivity connectivity = Connectivity.create(context, connectivityManager);
  326.   
  327.       // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:322: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ConnectivityTest.shouldCreateDefaultConnectivityWhenConnectivityManagerIsNull()`.
  320.       // given
  321.       final Context context = RuntimeEnvironment.application.getApplicationContext();
  322. >     final ConnectivityManager connectivityManager = null;
  323.   
  324.       // when

Summary of the reports

    GRADUAL_STATIC: 8
  GRADUAL_BOUNDARY: 6
     GRADUAL_CHECK: 3Found 17 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/NetworkObservingStrategyTest.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.NetworkObservingStrategyTest$1.this$0`.
  54.   
  55.       //when
  56. >     strategy.observeNetworkConnectivity(context).subscribe(new Consumer<Connectivity>() {
  57.         @Override public void accept(Connectivity connectivity) throws Exception {
  58.           // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategyTest.java:59: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.network.observing.strategy.PreLollipopNetworkObservingStrategyTest$1.this$0`.
  57.   
  58.       // when
  59. >     strategy.observeNetworkConnectivity(context).subscribe(new Consumer<Connectivity>() {
  60.         @Override public void accept(Connectivity connectivity) throws Exception {
  61.           // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/NetworkObservingStrategyTest.java:56: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `strategy`.
  54.   
  55.       //when
  56. >     strategy.observeNetworkConnectivity(context).subscribe(new Consumer<Connectivity>() {
  57.         @Override public void accept(Connectivity connectivity) throws Exception {
  58.           // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/NetworkObservingStrategyTest.java:59: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  57.         @Override public void accept(Connectivity connectivity) throws Exception {
  58.           // then
  59. >         assertThat(connectivity.state()).isEqualTo(NetworkInfo.State.CONNECTED);
  60.         }
  61.       });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/internet/observing/InternetObservingSettingsTest.java:94: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.internet.observing.InternetObservingSettingsTest$1.this$0`.
  92.   
  93.     @NonNull private ErrorHandler createTestErrorHandler() {
  94. >     return new ErrorHandler() {
  95.         @Override public void handleError(Exception exception, String message) {
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/PreLollipopNetworkObservingStrategyTest.java:62: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `connectivity`.
  60.         @Override public void accept(Connectivity connectivity) throws Exception {
  61.           // then
  62. >         assertThat(connectivity.state()).isEqualTo(NetworkInfo.State.CONNECTED);
  63.         }
  64.       });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:126: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ReactiveNetworkTest.observeNetworkConnectivityShouldThrowAnExceptionForNullContext()`.
  124.     public void observeNetworkConnectivityShouldThrowAnExceptionForNullContext() {
  125.       // given
  126. >     final Context context = null;
  127.       final NetworkObservingStrategy strategy = new LollipopNetworkObservingStrategy();
  128.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:139: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ReactiveNetworkTest.observeNetworkConnectivityShouldThrowAnExceptionForNullStrategy()`.
  137.       // given
  138.       final Context context = RuntimeEnvironment.application;
  139. >     final NetworkObservingStrategy strategy = null;
  140.   
  141.       // when

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:150: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ReactiveNetworkTest.observeInternetConnectivityShouldThrowAnExceptionWhenStrategyIsNull()`.
  148.     public void observeInternetConnectivityShouldThrowAnExceptionWhenStrategyIsNull() {
  149.       // given
  150. >     final InternetObservingStrategy strategy = null;
  151.       final ErrorHandler errorHandler = new DefaultErrorHandler();
  152.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:166: error: GRADUAL_STATIC
  possibly-null argument `context` passed to nonnull parameter.
  164.   
  165.       // when
  166. >     Connectivity.create(context);
  167.   
  168.       // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:163: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ConnectivityTest.createShouldThrowAnExceptionWhenContextIsNull()`.
  161.     public void createShouldThrowAnExceptionWhenContextIsNull() {
  162.       // given
  163. >     final Context context = null;
  164.   
  165.       // when

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:268: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ReactiveNetworkTest$1$1.this$1`.
  266.         @Override public Single<Boolean> checkInternetConnectivity(String host, int port,
  267.             int timeoutInMs, int httpResponse, ErrorHandler errorHandler) {
  268. >         return Single.fromCallable(new Callable<Boolean>() {
  269.             @Override public Boolean call() {
  270.               return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:259: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ReactiveNetworkTest$1.this$0`.
  257.   
  258.     @NonNull private InternetObservingStrategy createTestInternetObservingStrategy() {
  259. >     return new InternetObservingStrategy() {
  260.         @Override public Observable<Boolean> observeInternetConnectivity(int initialIntervalInMs,
  261.             int intervalInMs, String host, int port, int timeoutInMs, int httpResponse,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:282: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `com.github.pwittchen.reactivenetwork.library.rx2.ReactiveNetworkTest$2.this$0`.
  280.   
  281.     @NonNull private ErrorHandler createTestErrorHandler() {
  282. >     return new ErrorHandler() {
  283.         @Override public void handleError(Exception exception, String message) {
  284.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ReactiveNetworkTest.java:276: error: GRADUAL_STATIC
  possibly-null return in nonnull method `String ReactiveNetworkTest$1.getDefaultPingHost()`.
  274.   
  275.         @Override public String getDefaultPingHost() {
  276. >         return null;
  277.         }
  278.       };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:325: error: GRADUAL_STATIC
  possibly-null argument `connectivityManager` passed to nonnull parameter.
  323.   
  324.       // when
  325. >     Connectivity connectivity = Connectivity.create(context, connectivityManager);
  326.   
  327.       // then

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/ReactiveNetwork/library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/ConnectivityTest.java:322: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ConnectivityTest.shouldCreateDefaultConnectivityWhenConnectivityManagerIsNull()`.
  320.       // given
  321.       final Context context = RuntimeEnvironment.application.getApplicationContext();
  322. >     final ConnectivityManager connectivityManager = null;
  323.   
  324.       // when

Summary of the reports

    GRADUAL_STATIC: 8
  GRADUAL_BOUNDARY: 6
     GRADUAL_CHECK: 3