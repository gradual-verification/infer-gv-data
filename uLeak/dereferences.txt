Found 275 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:145: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  143.         disposable =
  144.             observableInterval.subscribe(
  145. >               new Consumer<Long>() {
  146.                   @Override
  147.                   public void accept(Long aLong) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  143.         disposable =
  144.             observableInterval.subscribe(
  145. >               new Consumer<Long>() {
  146.                   @Override
  147.                   public void accept(Long aLong) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/build/generated/source/buildConfig/debug/com/uber/uleak/BuildConfig.java:6: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  4.   package com.uber.uleak;
  5.   
  6. > public final class BuildConfig {
  7.     public static final boolean DEBUG = Boolean.parseBoolean("true");
  8.     public static final String APPLICATION_ID = "com.uber.uleak";

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:187: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  185.                   }
  186.                 },
  187. >               new Consumer<Throwable>() {
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  185.                   }
  186.                 },
  187. >               new Consumer<Throwable>() {
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/NoOpTracker.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  19.   import java.util.concurrent.ConcurrentLinkedQueue;
  20.   
  21. > class NoOpTracker implements LeakInstanceTracker {
  22.   
  23.     @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/GcCallWrapper.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  20.    * This class wraps the system.gc call.
  21.    */
  22. > class GcCallWrapper {
  23.   
  24.     void callGC() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  20.    * Enum to specify the type of leak {@link ULeak} is tracking.
  21.    */
  22. > enum LeakType {
  23.     SINGLETON,
  24.     LIFECYCLE

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.$VALUES`.
  20.    * Enum to specify the type of leak {@link ULeak} is tracking.
  21.    */
  22. > enum LeakType {
  23.     SINGLETON,
  24.     LIFECYCLE

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  20.    * Enum to specify the type of leak {@link ULeak} is tracking.
  21.    */
  22. > enum LeakType {
  23.     SINGLETON,
  24.     LIFECYCLE

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  21.    */
  22.   enum LeakType {
  23. >   SINGLETON,
  24.     LIFECYCLE
  25.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  22.   enum LeakType {
  23.     SINGLETON,
  24. >   LIFECYCLE
  25.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/NoOpTracker.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `events`.
  23.     @Override
  24.     public void flushAllQueuedReferences(ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> events) {
  25. >     events.clear();
  26.     }
  27.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTrackerFactory.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  24.   class LeakTrackerFactory {
  25.   
  26. >   private LeakTrackerFactory() {
  27.     }
  28.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  29.   
  30.     ReferenceInfo(WeakReference<?> weakReference, long timeCreatedMs) {
  31. >     this.weakReference = weakReference;
  32.       this.timeCreatedMs = timeCreatedMs;
  33.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  30.     ReferenceInfo(WeakReference<?> weakReference, long timeCreatedMs) {
  31.       this.weakReference = weakReference;
  32. >     this.timeCreatedMs = timeCreatedMs;
  33.     }
  34.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  28.     private final long timeCreatedMs;
  29.   
  30. >   ReferenceInfo(WeakReference<?> weakReference, long timeCreatedMs) {
  31.       this.weakReference = weakReference;
  32.       this.timeCreatedMs = timeCreatedMs;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  25.   public final class ULeakEvent {
  26.   
  27. >   private final Map<String, Number> metrics = new HashMap<>();
  28.     private final Map<String, String> dimensions = new HashMap<>();
  29.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  26.   
  27.     private final Map<String, Number> metrics = new HashMap<>();
  28. >   private final Map<String, String> dimensions = new HashMap<>();
  29.   
  30.     ULeakEvent() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  25.   public final class ULeakEvent {
  26.   
  27. >   private final Map<String, Number> metrics = new HashMap<>();
  28.     private final Map<String, String> dimensions = new HashMap<>();
  29.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  26.   
  27.     private final Map<String, Number> metrics = new HashMap<>();
  28. >   private final Map<String, String> dimensions = new HashMap<>();
  29.   
  30.     ULeakEvent() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  28.     private final Map<String, String> dimensions = new HashMap<>();
  29.   
  30. >   ULeakEvent() {
  31.     }
  32.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  28.     private static final int NUMBER_ENQUEUED_LONG_LIVED_OBJECTS = 10;
  29.   
  30. >   private final Queue<Object> longLivedObjects = new LinkedList<>();
  31.   
  32.     WeakReferenceGenerator() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  28.     private static final int NUMBER_ENQUEUED_LONG_LIVED_OBJECTS = 10;
  29.   
  30. >   private final Queue<Object> longLivedObjects = new LinkedList<>();
  31.   
  32.     WeakReferenceGenerator() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  32.     WeakReferenceGenerator() {
  33.       for (int i = 0; i < NUMBER_ENQUEUED_LONG_LIVED_OBJECTS; i++) {
  34. >       longLivedObjects.add(new Object());
  35.       }
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.WeakReferenceGenerator.longLivedObjects`,dereference of pointer `this`.
  32.     WeakReferenceGenerator() {
  33.       for (int i = 0; i < NUMBER_ENQUEUED_LONG_LIVED_OBJECTS; i++) {
  34. >       longLivedObjects.add(new Object());
  35.       }
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:32: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  30.     private final Queue<Object> longLivedObjects = new LinkedList<>();
  31.   
  32. >   WeakReferenceGenerator() {
  33.       for (int i = 0; i < NUMBER_ENQUEUED_LONG_LIVED_OBJECTS; i++) {
  34.         longLivedObjects.add(new Object());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.     TrackedReferences() {
  35.       leakTrackerMultiMap =
  36. >         Collections.synchronizedMap(new HashMap<Class<?>, Map<LeakType, LeakTracker>>());
  37.     }
  38.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  33.   
  34.     TrackedReferences() {
  35. >     leakTrackerMultiMap =
  36.           Collections.synchronizedMap(new HashMap<Class<?>, Map<LeakType, LeakTracker>>());
  37.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  32.     private final Map<Class<?>, Map<LeakType, LeakTracker>> leakTrackerMultiMap;
  33.   
  34. >   TrackedReferences() {
  35.       leakTrackerMultiMap =
  36.           Collections.synchronizedMap(new HashMap<Class<?>, Map<LeakType, LeakTracker>>());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  30.   class LifecycleInstanceTracker extends LeakTracker {
  31.   
  32. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  31.   
  32.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   
  35.     LifecycleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  31.   
  32.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   
  35.     LifecycleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:32: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  30.   class LifecycleInstanceTracker extends LeakTracker {
  31.   
  32. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  37.         final WeakReferenceGenerator weakReferenceGenerator,
  38.         final String className) {
  39. >     super(clazz, weakReferenceGenerator, className, LIFECYCLE);
  40.     }
  41.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.   
  35.     WeakReference<?> getWeakReference() {
  36. >     return weakReference;
  37.     }
  38.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `x0`.
  34.   import io.reactivex.subjects.PublishSubject;
  35.   
  36. > class ActiveTracker implements LeakInstanceTracker {
  37.   
  38.     @VisibleForTesting

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:36: warning: GRADUAL_DEREFERENCE
  method call on pointer `x0`.
  34.   import io.reactivex.subjects.PublishSubject;
  35.   
  36. > class ActiveTracker implements LeakInstanceTracker {
  37.   
  38.     @VisibleForTesting

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:37: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  35.      */
  36.     public Map<String, Number> getMetrics() {
  37. >     return metrics;
  38.     }
  39.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTrackerFactory.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  42.         final LeakType leakType) {
  43.       if (leakType == SINGLETON) {
  44. >       return new SingleInstanceTracker(eventClass, weakReferenceGenerator, name);
  45.       } else {
  46.         return new LifecycleInstanceTracker(eventClass, weakReferenceGenerator, name);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTrackerFactory.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  44.         return new SingleInstanceTracker(eventClass, weakReferenceGenerator, name);
  45.       } else {
  46. >       return new LifecycleInstanceTracker(eventClass, weakReferenceGenerator, name);
  47.       }
  48.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  36.   public class ULeak {
  37.   
  38. >   private static final ConcurrentLinkedQueue<QueuedLeakEvent> PREINITIALIZATION_EVENTS =
  39.         new ConcurrentLinkedQueue<>();
  40.     private static final AtomicBoolean INITIALIZED = new AtomicBoolean(false);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  38.     private static final ConcurrentLinkedQueue<QueuedLeakEvent> PREINITIALIZATION_EVENTS =
  39.         new ConcurrentLinkedQueue<>();
  40. >   private static final AtomicBoolean INITIALIZED = new AtomicBoolean(false);
  41.     private static final PublishSubject<Throwable> ERROR_RELAY = PublishSubject.create();
  42.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39.       longLivedObjects.add(new Object());
  40. >     return new WeakReference<>(longLivedObjects.remove());
  41.     }
  42.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  37.   
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39. >     longLivedObjects.add(new Object());
  40.       return new WeakReference<>(longLivedObjects.remove());
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.WeakReferenceGenerator.longLivedObjects`,dereference of pointer `this`.
  37.   
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39. >     longLivedObjects.add(new Object());
  40.       return new WeakReference<>(longLivedObjects.remove());
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.WeakReferenceGenerator.longLivedObjects`,dereference of pointer `this`.
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39.       longLivedObjects.add(new Object());
  40. >     return new WeakReference<>(longLivedObjects.remove());
  41.     }
  42.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:40: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  38.   
  39.     long getTimeCreatedMs() {
  40. >     return timeCreatedMs;
  41.     }
  42.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.      * A list of weak references to instances allocated so far
  35.      */
  36. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  39.   
  40.     SingleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  36.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  39.   
  40.     SingleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:36: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  34.      * A list of weak references to instances allocated so far
  35.      */
  36. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  42.         final WeakReferenceGenerator weakReferenceGenerator,
  43.         final String name) {
  44. >     super(eventClass, weakReferenceGenerator, name, SINGLETON);
  45.     }
  46.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:41: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  39.   
  40.     public ULeakConfiguration(double explicitGCProbability, long leakCheckFrequencyMs) {
  41. >     this.explicitGCProbability = Math.max(0, explicitGCProbability);
  42.       this.leakCheckFrequencyMs = Math.max(MINIMUM_CHECK_FREQUENCY_MS, leakCheckFrequencyMs);
  43.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.     public ULeakConfiguration(double explicitGCProbability, long leakCheckFrequencyMs) {
  41.       this.explicitGCProbability = Math.max(0, explicitGCProbability);
  42. >     this.leakCheckFrequencyMs = Math.max(MINIMUM_CHECK_FREQUENCY_MS, leakCheckFrequencyMs);
  43.     }
  44.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  38.     public final long leakCheckFrequencyMs;
  39.   
  40. >   public ULeakConfiguration(double explicitGCProbability, long leakCheckFrequencyMs) {
  41.       this.explicitGCProbability = Math.max(0, explicitGCProbability);
  42.       this.leakCheckFrequencyMs = Math.max(MINIMUM_CHECK_FREQUENCY_MS, leakCheckFrequencyMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  45.         return;
  46.       }
  47. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48.       if (requiresTracking()) {
  49.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  45.         return;
  46.       }
  47. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48.       if (requiresTracking()) {
  49.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  42.     @Override
  43.     void track(WeakReference<?> weakReference, long timeCreatedMs) {
  44. >     if (!isValidTrackEvent(weakReference)) {
  45.         return;
  46.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  46.       }
  47.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48. >     if (requiresTracking()) {
  49.         resetWeakReference();
  50.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  47.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48.       if (requiresTracking()) {
  49. >       resetWeakReference();
  50.       }
  51.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:44: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  42.      */
  43.     public Map<String, String> getDimensions() {
  44. >     return dimensions;
  45.     }
  46.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:50: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  48.         String name,
  49.         final LeakType leakType) {
  50. >     this.eventClass = eventClass;
  51.       this.weakReferenceGenerator = weakReferenceGenerator;
  52.       this.name = name;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:51: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  49.         final LeakType leakType) {
  50.       this.eventClass = eventClass;
  51. >     this.weakReferenceGenerator = weakReferenceGenerator;
  52.       this.name = name;
  53.       this.leakType = leakType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:52: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  50.       this.eventClass = eventClass;
  51.       this.weakReferenceGenerator = weakReferenceGenerator;
  52. >     this.name = name;
  53.       this.leakType = leakType;
  54.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:53: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  51.       this.weakReferenceGenerator = weakReferenceGenerator;
  52.       this.name = name;
  53. >     this.leakType = leakType;
  54.     }
  55.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  47.         WeakReferenceGenerator weakReferenceGenerator,
  48.         String name,
  49. >       final LeakType leakType) {
  50.       this.eventClass = eventClass;
  51.       this.weakReferenceGenerator = weakReferenceGenerator;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  44.     private static LeakInstanceTracker trackerSingleton = null;
  45.   
  46. >   private ULeak() {
  47.     }
  48.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  46.      */
  47.     boolean contains(Class<?> clazz, LeakType leakType) {
  48. >     Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(clazz);
  49.       return trackers != null && trackers.containsKey(leakType);
  50.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  47.     boolean contains(Class<?> clazz, LeakType leakType) {
  48.       Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(clazz);
  49. >     return trackers != null && trackers.containsKey(leakType);
  50.     }
  51.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ULeakEvent.metrics`,dereference of pointer `this`.
  46.   
  47.     void addMetric(String key, Number metric) {
  48. >     metrics.put(key, metric);
  49.     }
  50.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  50.         return;
  51.       }
  52. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53.       if (requiresTracking()) {
  54.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  50.         return;
  51.       }
  52. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53.       if (requiresTracking()) {
  54.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  47.     @Override
  48.     protected void track(WeakReference<?> weakReference, final long timeCreatedMs) {
  49. >     if (!isValidTrackEvent(weakReference)) {
  50.         return;
  51.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  51.       }
  52.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53. >     if (requiresTracking()) {
  54.         resetWeakReference();
  55.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  52.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53.       if (requiresTracking()) {
  54. >       resetWeakReference();
  55.       }
  56.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:49: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  47.      */
  48.     public boolean shouldUseExplicitGc() {
  49. >     return explicitGCProbability > 0;
  50.     }
  51.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ULeakEvent.dimensions`,dereference of pointer `this`.
  50.   
  51.     void addDimension(String key, String dimension) {
  52. >     dimensions.put(key, dimension);
  53.     }
  54.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  56.       // a valid weak
  57.       // reference.
  58. >     return clearInvalidAndGetCount() >= 1;
  59.     }
  60.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  59.     protected void clearTrackingData() {
  60.       super.clearTrackingData();
  61. >     allocations.clear();
  62.       tempCollection.clear();
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.tempCollection`,dereference of pointer `this`.
  60.       super.clearTrackingData();
  61.       allocations.clear();
  62. >     tempCollection.clear();
  63.     }
  64.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  58.     @Override
  59.     protected void clearTrackingData() {
  60. >     super.clearTrackingData();
  61.       allocations.clear();
  62.       tempCollection.clear();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:62: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  60.      */
  61.     final Class<?> getTrackedClass() {
  62. >     return eventClass;
  63.     }
  64.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `gcIndicatorWeakReference`.
  63.       WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  64.       return gcIndicatorWeakReference != null
  65. >         && gcIndicatorWeakReference.get() == null
  66.           && isInMemory();
  67.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.     @Override
  62.     boolean hasViolation() {
  63. >     WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  64.       return gcIndicatorWeakReference != null
  65.           && gcIndicatorWeakReference.get() == null

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  64.       return gcIndicatorWeakReference != null
  65.           && gcIndicatorWeakReference.get() == null
  66. >         && isInMemory();
  67.     }
  68.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  66.         ActiveTracker.RefGeneratorFactory refGeneratorFactory) {
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68. >         && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69.         return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68.           && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69. >       return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {
  71.         LeakTracker tracker =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `refGeneratorFactory`.
  71.         LeakTracker tracker =
  72.             LeakTrackerFactory.getTracker(
  73. >               clazz, refGeneratorFactory.createGenerator(), className, leakType);
  74.         addTracker(tracker);
  75.         return tracker;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  65.         String className,
  66.         ActiveTracker.RefGeneratorFactory refGeneratorFactory) {
  67. >     if (leakTrackerMultiMap.containsKey(clazz)
  68.           && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69.         return leakTrackerMultiMap.get(clazz).get(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  66.         ActiveTracker.RefGeneratorFactory refGeneratorFactory) {
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68. >         && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69.         return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68.           && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69. >       return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {
  71.         LeakTracker tracker =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  72.             LeakTrackerFactory.getTracker(
  73.                 clazz, refGeneratorFactory.createGenerator(), className, leakType);
  74. >       addTracker(tracker);
  75.         return tracker;
  76.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:66: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  64.   
  65.     final String getTrackerName() {
  66. >     return name;
  67.     }
  68.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  65.     @Override
  66.     boolean requiresTracking() {
  67. >     return clearInvalidAndGetCount() > 1;
  68.     }
  69.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:71: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  69.     @Nullable
  70.     final WeakReference<Object> getGcIndicatorWeakReference() {
  71. >     return gcIndicatorWeakReference;
  72.     }
  73.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:83: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  81.       this.errorRelay = errorRelay;
  82.       this.reporter = reporter;
  83. >     long leakCheckFrequencyMillis = configuration.leakCheckFrequencyMs;
  84.       observableInterval =
  85.           new ObservableInterval(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:51: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  49.     private final ObservableInterval observableInterval;
  50.     private final GcCallWrapper gcCallWrapper;
  51. >   private final AtomicBoolean explicitGcCalledLastIteration = new AtomicBoolean(false);
  52.     private final ULeakConfiguration configuration;
  53.     private final Random random;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  53.     private final Random random;
  54.     private final PublishSubject<Throwable> errorRelay;
  55. >   private final TrackedReferences trackedReferences = new TrackedReferences();
  56.     @Nullable
  57.     private Disposable disposable;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:81: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  79.         Random random,
  80.         PublishSubject<Throwable> errorRelay) {
  81. >     this.errorRelay = errorRelay;
  82.       this.reporter = reporter;
  83.       long leakCheckFrequencyMillis = configuration.leakCheckFrequencyMs;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.         PublishSubject<Throwable> errorRelay) {
  81.       this.errorRelay = errorRelay;
  82. >     this.reporter = reporter;
  83.       long leakCheckFrequencyMillis = configuration.leakCheckFrequencyMs;
  84.       observableInterval =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:89: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  87.               leakCheckFrequencyMillis,
  88.               TimeUnit.MILLISECONDS,
  89. >             Schedulers.io());
  90.       this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:90: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  88.               TimeUnit.MILLISECONDS,
  89.               Schedulers.io());
  90. >     this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;
  92.       this.random = random;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:91: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  89.               Schedulers.io());
  90.       this.configuration = configuration;
  91. >     this.gcCallWrapper = gcCallWrapper;
  92.       this.random = random;
  93.       this.refGeneratorFactory = refGeneratorFactory;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:92: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  90.       this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;
  92. >     this.random = random;
  93.       this.refGeneratorFactory = refGeneratorFactory;
  94.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:93: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  91.       this.gcCallWrapper = gcCallWrapper;
  92.       this.random = random;
  93. >     this.refGeneratorFactory = refGeneratorFactory;
  94.     }
  95.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  87.               leakCheckFrequencyMillis,
  88.               TimeUnit.MILLISECONDS,
  89. >             Schedulers.io());
  90.       this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  49.     private final ObservableInterval observableInterval;
  50.     private final GcCallWrapper gcCallWrapper;
  51. >   private final AtomicBoolean explicitGcCalledLastIteration = new AtomicBoolean(false);
  52.     private final ULeakConfiguration configuration;
  53.     private final Random random;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  53.     private final Random random;
  54.     private final PublishSubject<Throwable> errorRelay;
  55. >   private final TrackedReferences trackedReferences = new TrackedReferences();
  56.     @Nullable
  57.     private Disposable disposable;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  78.         RefGeneratorFactory refGeneratorFactory,
  79.         Random random,
  80. >       PublishSubject<Throwable> errorRelay) {
  81.       this.errorRelay = errorRelay;
  82.       this.reporter = reporter;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:75: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  73.   
  74.     final Class<?> getEventClass() {
  75. >     return eventClass;
  76.     }
  77.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  75.     long getLatestReferenceRegistrationTimeMs() {
  76.       long oldestReferenceTime = 0L;
  77. >     for (ReferenceInfo referenceInfo : allocations) {
  78.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  79.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  76.       long oldestReferenceTime = 0L;
  77.       for (ReferenceInfo referenceInfo : allocations) {
  78. >       oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  79.       }
  80.       return oldestReferenceTime;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  75.     long getLatestReferenceRegistrationTimeMs() {
  76.       long oldestReferenceTime = 0L;
  77. >     for (ReferenceInfo referenceInfo : allocations) {
  78.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  79.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `gcIndicatorWeakReference`.
  77.       WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  78.       return gcIndicatorWeakReference != null
  79. >         && gcIndicatorWeakReference.get() == null
  80.           && clearInvalidAndGetCount() > MAX_ACTIVE_INSTANCES_ALLOWED;
  81.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  75.     @Override
  76.     boolean hasViolation() {
  77. >     WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  78.       return gcIndicatorWeakReference != null
  79.           && gcIndicatorWeakReference.get() == null

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  78.       return gcIndicatorWeakReference != null
  79.           && gcIndicatorWeakReference.get() == null
  80. >         && clearInvalidAndGetCount() > MAX_ACTIVE_INSTANCES_ALLOWED;
  81.     }
  82.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:79: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  77.   
  78.     final void resetWeakReference() {
  79. >     gcIndicatorWeakReference = weakReferenceGenerator.getGenericWeakRef();
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LeakTracker.weakReferenceGenerator`,dereference of pointer `this`.
  77.   
  78.     final void resetWeakReference() {
  79. >     gcIndicatorWeakReference = weakReferenceGenerator.getGenericWeakRef();
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `materialized`.
  82.     final boolean isValidTrackEvent(WeakReference<?> weakReference) {
  83.       Object materialized = weakReference.get();
  84. >     if (materialized == null || this.getEventClass() != materialized.getClass()) {
  85.         return false;
  86.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  82.     final boolean isValidTrackEvent(WeakReference<?> weakReference) {
  83.       Object materialized = weakReference.get();
  84. >     if (materialized == null || this.getEventClass() != materialized.getClass()) {
  85.         return false;
  86.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `weakReference`.
  81.   
  82.     final boolean isValidTrackEvent(WeakReference<?> weakReference) {
  83. >     Object materialized = weakReference.get();
  84.       if (materialized == null || this.getEventClass() != materialized.getClass()) {
  85.         return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  83.     @Override
  84.     int getCurrentNumInMemoryInstances() {
  85. >     return clearInvalidAndGetCount();
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  83.     @Override
  84.     int getCurrentNumInMemoryInstances() {
  85. >     return allocations.size();
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  83.      */
  84.     private void addTracker(LeakTracker leakTracker) {
  85. >     if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86.         Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  84.     private void addTracker(LeakTracker leakTracker) {
  85.       if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86. >       Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must
  88.         // have a

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:93: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  91.           return;
  92.         }
  93. >       if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  92.         }
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94. >         trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:95: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95. >         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }
  97.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  97.       } else {
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99. >       trackers.put(leakTracker.getLeakType(), leakTracker);
  100.         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99.         trackers.put(leakTracker.getLeakType(), leakTracker);
  100. >       leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }
  102.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  96.         }
  97.       } else {
  98. >       Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99.         trackers.put(leakTracker.getLeakType(), leakTracker);
  100.         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  83.      */
  84.     private void addTracker(LeakTracker leakTracker) {
  85. >     if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86.         Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  84.     private void addTracker(LeakTracker leakTracker) {
  85.       if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86. >       Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must
  88.         // have a

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:95: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95. >         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }
  97.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99.         trackers.put(leakTracker.getLeakType(), leakTracker);
  100. >       leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }
  102.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:93: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  91.           return;
  92.         }
  93. >       if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  92.         }
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94. >         trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  97.       } else {
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99. >       trackers.put(leakTracker.getLeakType(), leakTracker);
  100.         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:91: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  89.   
  90.     final LeakType getLeakType() {
  91. >     return leakType;
  92.     }
  93.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  89.     protected void clearTrackingData() {
  90.       super.clearTrackingData();
  91. >     allocations.clear();
  92.       tempCollection.clear();
  93.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.tempCollection`,dereference of pointer `this`.
  90.       super.clearTrackingData();
  91.       allocations.clear();
  92. >     tempCollection.clear();
  93.     }
  94.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  88.     @Override
  89.     protected void clearTrackingData() {
  90. >     super.clearTrackingData();
  91.       allocations.clear();
  92.       tempCollection.clear();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  94.     long getLatestReferenceRegistrationTimeMs() {
  95.       long oldestReferenceTime = 0L;
  96. >     for (ReferenceInfo referenceInfo : allocations) {
  97.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  98.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:97: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  95.       long oldestReferenceTime = 0L;
  96.       for (ReferenceInfo referenceInfo : allocations) {
  97. >       oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  98.       }
  99.       return oldestReferenceTime;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  94.     long getLatestReferenceRegistrationTimeMs() {
  95.       long oldestReferenceTime = 0L;
  96. >     for (ReferenceInfo referenceInfo : allocations) {
  97.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  98.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:96: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  94.     @CallSuper
  95.     protected void clearTrackingData() {
  96. >     gcIndicatorWeakReference = null;
  97.     }
  98.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`.
  113.           shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }
  115. >     }
  116.       if (shouldStartTracking && disposable == null) {
  117.         startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:100: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  98.       ULeak.QueuedLeakEvent queuedLeakEvent;
  99.       boolean shouldStartTracking = false;
  100. >     synchronized (trackedReferences) {
  101.         while ((queuedLeakEvent = events.poll()) != null) {
  102.           Object object = queuedLeakEvent.weakReference.get();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  113.           shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }
  115. >     }
  116.       if (shouldStartTracking && disposable == null) {
  117.         startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:116: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  114.         }
  115.       }
  116. >     if (shouldStartTracking && disposable == null) {
  117.         startTracking();
  118.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `events`.
  99.       boolean shouldStartTracking = false;
  100.       synchronized (trackedReferences) {
  101. >       while ((queuedLeakEvent = events.poll()) != null) {
  102.           Object object = queuedLeakEvent.weakReference.get();
  103.           if (object == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  106.           LeakTracker tracker =
  107.               trackedReferences.getOrCreate(
  108. >                 object.getClass(), SINGLETON, queuedLeakEvent.className, refGeneratorFactory);
  109.           if (tracker == null) {
  110.             continue;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `queuedLeakEvent->com.uber.uleak.ULeak$QueuedLeakEvent.weakReference`,dereference of pointer `queuedLeakEvent`.
  100.       synchronized (trackedReferences) {
  101.         while ((queuedLeakEvent = events.poll()) != null) {
  102. >         Object object = queuedLeakEvent.weakReference.get();
  103.           if (object == null) {
  104.             continue;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`,dereference of pointer `queuedLeakEvent`,dereference of pointer `this`.
  105.           }
  106.           LeakTracker tracker =
  107. >             trackedReferences.getOrCreate(
  108.                   object.getClass(), SINGLETON, queuedLeakEvent.className, refGeneratorFactory);
  109.           if (tracker == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  115.       }
  116.       if (shouldStartTracking && disposable == null) {
  117. >       startTracking();
  118.       }
  119.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  111.           }
  112.           tracker.track(queuedLeakEvent.weakReference, queuedLeakEvent.timeEventRegisteredMs);
  113. >         shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }
  115.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `queuedLeakEvent`,dereference of pointer `queuedLeakEvent`.
  110.             continue;
  111.           }
  112. >         tracker.track(queuedLeakEvent.weakReference, queuedLeakEvent.timeEventRegisteredMs);
  113.           shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  98.       tempCollection.clear();
  99.       allocations.drainTo(tempCollection);
  100. >     for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  99.       allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101. >       if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);
  103.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  99.       allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101. >       if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);
  103.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {
  102. >         allocations.add(referenceInfo);
  103.         }
  104.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  103.         }
  104.       }
  105. >     return allocations.size();
  106.     }
  107.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`,dereference of pointer `this`.
  97.     private int clearInvalidAndGetCount() {
  98.       tempCollection.clear();
  99. >     allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.tempCollection`,dereference of pointer `this`.
  96.     // still exists.
  97.     private int clearInvalidAndGetCount() {
  98. >     tempCollection.clear();
  99.       allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.tempCollection`,dereference of pointer `this`.
  98.       tempCollection.clear();
  99.       allocations.drainTo(tempCollection);
  100. >     for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  dereference of pointer `uleak.ULeak$1.com.uber.uleak.ULeak$1.$SwitchMap$com$uber$uleak$ULeak$Type`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  109.       switch (type) {
  110.         case ACTIVE_REPORTING:
  111. >         trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);
  112.           break;
  113.         case NO_OP:

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  113.         case NO_OP:
  114.         default:
  115. >         trackerSingleton = new NoOpTracker();
  116.           break;
  117.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak.com.uber.uleak.ULeak.INITIALIZED`.
  104.     public static synchronized void initialize(
  105.         final Type type, final ULeakEventReporter reporter, ULeakConfiguration configuration) {
  106. >     if (INITIALIZED.getAndSet(true)) {
  107.         return;
  108.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak.com.uber.uleak.ULeak.trackerSingleton`.
  116.           break;
  117.       }
  118. >     trackerSingleton.flushAllQueuedReferences(PREINITIALIZATION_EVENTS);
  119.     }
  120.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  109.       tempCollection.clear();
  110.       allocations.drainTo(tempCollection);
  111. >     for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  110.       allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112. >       if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);
  114.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  110.       allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112. >       if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);
  114.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {
  113. >         allocations.add(referenceInfo);
  114.         }
  115.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  114.         }
  115.       }
  116. >     return allocations.size();
  117.     }
  118.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`,dereference of pointer `this`.
  108.     private int clearInvalidAndGetCount() {
  109.       tempCollection.clear();
  110. >     allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.tempCollection`,dereference of pointer `this`.
  107.      */
  108.     private int clearInvalidAndGetCount() {
  109. >     tempCollection.clear();
  110.       allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.tempCollection`,dereference of pointer `this`.
  109.       tempCollection.clear();
  110.       allocations.drainTo(tempCollection);
  111. >     for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  108.     // If any reference still exists it means the object being referenced is still in memory.
  109.     private boolean isInMemory() {
  110. >     return clearInvalidAndGetCount() > 0;
  111.     }
  112.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTrackers`.
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111.       for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112. >       leakTrackers.addAll(trackers.values());
  113.       }
  114.       return leakTrackers;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  108.      */
  109.     List<LeakTracker> getAllLeakTrackers() {
  110. >     List<LeakTracker> leakTrackers = new ArrayList<>();
  111.       for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  109.     List<LeakTracker> getAllLeakTrackers() {
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111. >     for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());
  113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  109.     List<LeakTracker> getAllLeakTrackers() {
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111. >     for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());
  113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  109.     List<LeakTracker> getAllLeakTrackers() {
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111. >     for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());
  113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111.       for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112. >       leakTrackers.addAll(trackers.values());
  113.       }
  114.       return leakTrackers;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  dereference of pointer `uleak.ULeak$1.com.uber.uleak.ULeak$1.$SwitchMap$com$uber$uleak$ULeak$Type`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak$Type.com.uber.uleak.ULeak$Type.ACTIVE_REPORTING`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak$Type.com.uber.uleak.ULeak$Type.NO_OP`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:129: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`.
  127.         tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {
  129. >         return;
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:135: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`.
  133.           startTracking();
  134.         }
  135. >     }
  136.     }
  137.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:126: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  124.       Class<?> clazz = object.getClass();
  125.       LeakTracker tracker;
  126. >     synchronized (trackedReferences) {
  127.         tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:129: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  127.         tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {
  129. >         return;
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:132: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);
  132. >       if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();
  134.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:135: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  133.           startTracking();
  134.         }
  135. >     }
  136.     }
  137.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  129.           return;
  130.         }
  131. >       tracker.track(new WeakReference<>(object), timeCreatedMs);
  132.         if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  122.     public void registerNewReference(
  123.         Object object, String className, final long timeCreatedMs, final LeakType leakType) {
  124. >     Class<?> clazz = object.getClass();
  125.       LeakTracker tracker;
  126.       synchronized (trackedReferences) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:127: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`,dereference of pointer `this`.
  125.       LeakTracker tracker;
  126.       synchronized (trackedReferences) {
  127. >       tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {
  129.           return;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);
  132.         if (tracker.requiresTracking() && disposable == null) {
  133. >         startTracking();
  134.         }
  135.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  129.           return;
  130.         }
  131. >       tracker.track(new WeakReference<>(object), timeCreatedMs);
  132.         if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:132: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);
  132. >       if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();
  134.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  123.      * depend on cached experiments so give the callers a way to initialize this stuff
  124.      */
  125. >   public enum Type {
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak$Type.com.uber.uleak.ULeak$Type.$VALUES`.
  123.      * depend on cached experiments so give the callers a way to initialize this stuff
  124.      */
  125. >   public enum Type {
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:125: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  123.      * depend on cached experiments so give the callers a way to initialize this stuff
  124.      */
  125. >   public enum Type {
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker
  128. >     NO_OP,
  129.   
  130.       // the instance counter would report violations to the backend via UR

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  131.       // Caveat: wouldn't catch transient violations that happen before initialize
  132.       // Instance Class: ActiveTracker
  133. >     ACTIVE_REPORTING,
  134.     }
  135.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:141: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this`.
  139.       synchronized (observableInterval) {
  140.         if (disposable != null) {
  141. >         return;
  142.         }
  143.         disposable =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:194: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this`.
  192.                   }
  193.                 });
  194. >     }
  195.     }
  196.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:139: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  137.   
  138.     private void startTracking() {
  139. >     synchronized (observableInterval) {
  140.         if (disposable != null) {
  141.           return;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:140: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  138.     private void startTracking() {
  139.       synchronized (observableInterval) {
  140. >       if (disposable != null) {
  141.           return;
  142.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:141: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  139.       synchronized (observableInterval) {
  140.         if (disposable != null) {
  141. >         return;
  142.         }
  143.         disposable =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  142.         }
  143.         disposable =
  144. >           observableInterval.subscribe(
  145.                 new Consumer<Long>() {
  146.                   @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:194: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  192.                   }
  193.                 });
  194. >     }
  195.     }
  196.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  141.           return;
  142.         }
  143. >       disposable =
  144.             observableInterval.subscribe(
  145.                 new Consumer<Long>() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  141.           return;
  142.         }
  143. >       disposable =
  144.             observableInterval.subscribe(
  145.                 new Consumer<Long>() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:144: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this`.
  142.         }
  143.         disposable =
  144. >           observableInterval.subscribe(
  145.                 new Consumer<Long>() {
  146.                   @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  142.       QueuedLeakEvent(
  143.           WeakReference<Object> weakReference, String className, final long timeEventRegisteredMs) {
  144. >       this.weakReference = weakReference;
  145.         this.className = className;
  146.         this.timeEventRegisteredMs = timeEventRegisteredMs;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:145: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  143.           WeakReference<Object> weakReference, String className, final long timeEventRegisteredMs) {
  144.         this.weakReference = weakReference;
  145. >       this.className = className;
  146.         this.timeEventRegisteredMs = timeEventRegisteredMs;
  147.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:146: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  144.         this.weakReference = weakReference;
  145.         this.className = className;
  146. >       this.timeEventRegisteredMs = timeEventRegisteredMs;
  147.       }
  148.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  141.   
  142.       QueuedLeakEvent(
  143. >         WeakReference<Object> weakReference, String className, final long timeEventRegisteredMs) {
  144.         this.weakReference = weakReference;
  145.         this.className = className;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  143.         disposable =
  144.             observableInterval.subscribe(
  145. >               new Consumer<Long>() {
  146.                   @Override
  147.                   public void accept(Long aLong) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:150: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.configuration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  148.                     boolean useExplicitGcThisRound =
  149.                         configuration.shouldUseExplicitGc()
  150. >                           && random.nextDouble() < configuration.explicitGCProbability;
  151.                     boolean continueTracking = false;
  152.                     boolean callExplicitGC = false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:176: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  174.                           disposable = null;
  175.                         }
  176. >                     }
  177.                       return;
  178.                     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:168: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  166.                         continueTracking = continueTracking || tracker.requiresTracking();
  167.                       }
  168. >                   }
  169.                     if (!continueTracking) {
  170.                       // stop the interval if there isn't anything to track.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:153: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  151.                     boolean continueTracking = false;
  152.                     boolean callExplicitGC = false;
  153. >                   synchronized (trackedReferences) {
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:168: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  166.                         continueTracking = continueTracking || tracker.requiresTracking();
  167.                       }
  168. >                   }
  169.                     if (!continueTracking) {
  170.                       // stop the interval if there isn't anything to track.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:171: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  169.                     if (!continueTracking) {
  170.                       // stop the interval if there isn't anything to track.
  171. >                     synchronized (observableInterval) {
  172.                         if (disposable != null) {
  173.                           disposable.dispose();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:172: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  170.                       // stop the interval if there isn't anything to track.
  171.                       synchronized (observableInterval) {
  172. >                       if (disposable != null) {
  173.                           disposable.dispose();
  174.                           disposable = null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:174: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  172.                         if (disposable != null) {
  173.                           disposable.dispose();
  174. >                         disposable = null;
  175.                         }
  176.                       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:176: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  174.                           disposable = null;
  175.                         }
  176. >                     }
  177.                       return;
  178.                     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  152.                     boolean callExplicitGC = false;
  153.                     synchronized (trackedReferences) {
  154. >                     for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  152.                     boolean callExplicitGC = false;
  153.                     synchronized (trackedReferences) {
  154. >                     for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:149: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.configuration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  147.                   public void accept(Long aLong) throws Exception {
  148.                     boolean useExplicitGcThisRound =
  149. >                       configuration.shouldUseExplicitGc()
  150.                             && random.nextDouble() < configuration.explicitGCProbability;
  151.                     boolean continueTracking = false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.disposable`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  171.                       synchronized (observableInterval) {
  172.                         if (disposable != null) {
  173. >                         disposable.dispose();
  174.                           disposable = null;
  175.                         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:157: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));
  157. >                         if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {
  158.                             // try again with an explicit gc call.
  159.                             callExplicitGC = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  179.                     if (callExplicitGC) {
  180.                       gcCallWrapper.callGC();
  181. >                     explicitGcCalledLastIteration.set(true);
  182.                     } else {
  183.                       explicitGcCalledLastIteration.set(false);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  181.                       explicitGcCalledLastIteration.set(true);
  182.                     } else {
  183. >                     explicitGcCalledLastIteration.set(false);
  184.                     }
  185.                   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.gcCallWrapper`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  178.                     }
  179.                     if (callExplicitGC) {
  180. >                     gcCallWrapper.callGC();
  181.                       explicitGcCalledLastIteration.set(true);
  182.                     } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:150: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.random`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  148.                     boolean useExplicitGcThisRound =
  149.                         configuration.shouldUseExplicitGc()
  150. >                           && random.nextDouble() < configuration.explicitGCProbability;
  151.                     boolean continueTracking = false;
  152.                     boolean callExplicitGC = false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.reporter`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156. >                         reporter.reportEvent(createReportingEvent(tracker));
  157.                           if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {
  158.                             // try again with an explicit gc call.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  152.                     boolean callExplicitGC = false;
  153.                     synchronized (trackedReferences) {
  154. >                     for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156. >                         reporter.reportEvent(createReportingEvent(tracker));
  157.                           if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {
  158.                             // try again with an explicit gc call.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  185.                   }
  186.                 },
  187. >               new Consumer<Throwable>() {
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:155: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  153.                     synchronized (trackedReferences) {
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155. >                       if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));
  157.                           if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  159.                             callExplicitGC = true;
  160.                             continueTracking = true;
  161. >                           tracker.resetWeakReference();
  162.                           } else {
  163.                             tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:163: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  161.                             tracker.resetWeakReference();
  162.                           } else {
  163. >                           tracker.clearTrackingData();
  164.                           }
  165.                         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:166: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  164.                           }
  165.                         }
  166. >                       continueTracking = continueTracking || tracker.requiresTracking();
  167.                       }
  168.                     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:191: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$2.this$0->com.uber.uleak.ActiveTracker.errorRelay`,dereference of pointer `this->com.uber.uleak.ActiveTracker$2.this$0`,dereference of pointer `this`.
  189.                   public void accept(Throwable throwable) throws Exception {
  190.                     explicitGcCalledLastIteration.set(false);
  191. >                   errorRelay.onNext(throwable);
  192.                   }
  193.                 });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$2.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$2.this$0`,dereference of pointer `this`.
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {
  190. >                   explicitGcCalledLastIteration.set(false);
  191.                     errorRelay.onNext(throwable);
  192.                   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T2_46`.
  204.       ULeakEvent reporterEvent = new ULeakEvent();
  205.       reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206. >     reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,
  208.           explicitGcCalledLastIteration.get()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  202.      */
  203.     private ULeakEvent createReportingEvent(final LeakTracker tracker) {
  204. >     ULeakEvent reporterEvent = new ULeakEvent();
  205.       reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206.       reporterEvent.addDimension(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211. >     reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  203.     private ULeakEvent createReportingEvent(final LeakTracker tracker) {
  204.       ULeakEvent reporterEvent = new ULeakEvent();
  205. >     reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206.       reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211. >     reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:212: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212. >     reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214.       reporterEvent.addMetric(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:214: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214. >     reporterEvent.addMetric(
  215.           LAST_LEAK_CREATED_TIME_MS, tracker.getLatestReferenceRegistrationTimeMs());
  216.       return reporterEvent;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:208: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this`.
  206.       reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,
  208. >         explicitGcCalledLastIteration.get()
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  203.     private ULeakEvent createReportingEvent(final LeakTracker tracker) {
  204.       ULeakEvent reporterEvent = new ULeakEvent();
  205. >     reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206.       reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211. >     reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:213: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213. >         INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214.       reporterEvent.addMetric(
  215.           LAST_LEAK_CREATED_TIME_MS, tracker.getLatestReferenceRegistrationTimeMs());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:215: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214.       reporterEvent.addMetric(
  215. >         LAST_LEAK_CREATED_TIME_MS, tracker.getLatestReferenceRegistrationTimeMs());
  216.       return reporterEvent;
  217.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ActiveTracker$ViolationType.com.uber.uleak.ActiveTracker$ViolationType.EXPLICIT_GC_VIOLATION`.
  207.           GC_TYPE_DIMENSION_KEY_NAME,
  208.           explicitGcCalledLastIteration.get()
  209. >             ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:210: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ActiveTracker$ViolationType.com.uber.uleak.ActiveTracker$ViolationType.IMPLICIT_GC_VIOLATION`.
  208.           explicitGcCalledLastIteration.get()
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210. >             : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:219: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ActiveTracker$ViolationType.com.uber.uleak.ActiveTracker$ViolationType.$VALUES`.
  217.     }
  218.   
  219. >   @VisibleForTesting
  220.     enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  218.   
  219.     @VisibleForTesting
  220. >   enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,
  222.       IMPLICIT_GC_VIOLATION

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:219: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  217.     }
  218.   
  219. >   @VisibleForTesting
  220.     enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:221: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  219.     @VisibleForTesting
  220.     enum ViolationType {
  221. >     EXPLICIT_GC_VIOLATION,
  222.       IMPLICIT_GC_VIOLATION
  223.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  220.     enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,
  222. >     IMPLICIT_GC_VIOLATION
  223.     }
  224.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:226: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  224.   
  225.     @VisibleForTesting(otherwise = VisibleForTesting.PACKAGE_PRIVATE)
  226. >   static class RefGeneratorFactory {
  227.   
  228.       WeakReferenceGenerator createGenerator() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:229: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  227.   
  228.       WeakReferenceGenerator createGenerator() {
  229. >       return new WeakReferenceGenerator();
  230.       }
  231.     }

Summary of the reports

  GRADUAL_DEREFERENCE: 275Found 275 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:145: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  143.         disposable =
  144.             observableInterval.subscribe(
  145. >               new Consumer<Long>() {
  146.                   @Override
  147.                   public void accept(Long aLong) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  143.         disposable =
  144.             observableInterval.subscribe(
  145. >               new Consumer<Long>() {
  146.                   @Override
  147.                   public void accept(Long aLong) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/build/generated/source/buildConfig/release/com/uber/uleak/BuildConfig.java:6: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  4.   package com.uber.uleak;
  5.   
  6. > public final class BuildConfig {
  7.     public static final boolean DEBUG = false;
  8.     public static final String APPLICATION_ID = "com.uber.uleak";

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:187: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  185.                   }
  186.                 },
  187. >               new Consumer<Throwable>() {
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  185.                   }
  186.                 },
  187. >               new Consumer<Throwable>() {
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/NoOpTracker.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  19.   import java.util.concurrent.ConcurrentLinkedQueue;
  20.   
  21. > class NoOpTracker implements LeakInstanceTracker {
  22.   
  23.     @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/GcCallWrapper.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  20.    * This class wraps the system.gc call.
  21.    */
  22. > class GcCallWrapper {
  23.   
  24.     void callGC() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  20.    * Enum to specify the type of leak {@link ULeak} is tracking.
  21.    */
  22. > enum LeakType {
  23.     SINGLETON,
  24.     LIFECYCLE

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.$VALUES`.
  20.    * Enum to specify the type of leak {@link ULeak} is tracking.
  21.    */
  22. > enum LeakType {
  23.     SINGLETON,
  24.     LIFECYCLE

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  20.    * Enum to specify the type of leak {@link ULeak} is tracking.
  21.    */
  22. > enum LeakType {
  23.     SINGLETON,
  24.     LIFECYCLE

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  21.    */
  22.   enum LeakType {
  23. >   SINGLETON,
  24.     LIFECYCLE
  25.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakType.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  22.   enum LeakType {
  23.     SINGLETON,
  24. >   LIFECYCLE
  25.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/NoOpTracker.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `events`.
  23.     @Override
  24.     public void flushAllQueuedReferences(ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> events) {
  25. >     events.clear();
  26.     }
  27.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTrackerFactory.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  24.   class LeakTrackerFactory {
  25.   
  26. >   private LeakTrackerFactory() {
  27.     }
  28.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  29.   
  30.     ReferenceInfo(WeakReference<?> weakReference, long timeCreatedMs) {
  31. >     this.weakReference = weakReference;
  32.       this.timeCreatedMs = timeCreatedMs;
  33.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  30.     ReferenceInfo(WeakReference<?> weakReference, long timeCreatedMs) {
  31.       this.weakReference = weakReference;
  32. >     this.timeCreatedMs = timeCreatedMs;
  33.     }
  34.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  28.     private final long timeCreatedMs;
  29.   
  30. >   ReferenceInfo(WeakReference<?> weakReference, long timeCreatedMs) {
  31.       this.weakReference = weakReference;
  32.       this.timeCreatedMs = timeCreatedMs;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  25.   public final class ULeakEvent {
  26.   
  27. >   private final Map<String, Number> metrics = new HashMap<>();
  28.     private final Map<String, String> dimensions = new HashMap<>();
  29.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  26.   
  27.     private final Map<String, Number> metrics = new HashMap<>();
  28. >   private final Map<String, String> dimensions = new HashMap<>();
  29.   
  30.     ULeakEvent() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  25.   public final class ULeakEvent {
  26.   
  27. >   private final Map<String, Number> metrics = new HashMap<>();
  28.     private final Map<String, String> dimensions = new HashMap<>();
  29.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  26.   
  27.     private final Map<String, Number> metrics = new HashMap<>();
  28. >   private final Map<String, String> dimensions = new HashMap<>();
  29.   
  30.     ULeakEvent() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  28.     private final Map<String, String> dimensions = new HashMap<>();
  29.   
  30. >   ULeakEvent() {
  31.     }
  32.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  28.     private static final int NUMBER_ENQUEUED_LONG_LIVED_OBJECTS = 10;
  29.   
  30. >   private final Queue<Object> longLivedObjects = new LinkedList<>();
  31.   
  32.     WeakReferenceGenerator() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  28.     private static final int NUMBER_ENQUEUED_LONG_LIVED_OBJECTS = 10;
  29.   
  30. >   private final Queue<Object> longLivedObjects = new LinkedList<>();
  31.   
  32.     WeakReferenceGenerator() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  32.     WeakReferenceGenerator() {
  33.       for (int i = 0; i < NUMBER_ENQUEUED_LONG_LIVED_OBJECTS; i++) {
  34. >       longLivedObjects.add(new Object());
  35.       }
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.WeakReferenceGenerator.longLivedObjects`,dereference of pointer `this`.
  32.     WeakReferenceGenerator() {
  33.       for (int i = 0; i < NUMBER_ENQUEUED_LONG_LIVED_OBJECTS; i++) {
  34. >       longLivedObjects.add(new Object());
  35.       }
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:32: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  30.     private final Queue<Object> longLivedObjects = new LinkedList<>();
  31.   
  32. >   WeakReferenceGenerator() {
  33.       for (int i = 0; i < NUMBER_ENQUEUED_LONG_LIVED_OBJECTS; i++) {
  34.         longLivedObjects.add(new Object());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.     TrackedReferences() {
  35.       leakTrackerMultiMap =
  36. >         Collections.synchronizedMap(new HashMap<Class<?>, Map<LeakType, LeakTracker>>());
  37.     }
  38.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  33.   
  34.     TrackedReferences() {
  35. >     leakTrackerMultiMap =
  36.           Collections.synchronizedMap(new HashMap<Class<?>, Map<LeakType, LeakTracker>>());
  37.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  32.     private final Map<Class<?>, Map<LeakType, LeakTracker>> leakTrackerMultiMap;
  33.   
  34. >   TrackedReferences() {
  35.       leakTrackerMultiMap =
  36.           Collections.synchronizedMap(new HashMap<Class<?>, Map<LeakType, LeakTracker>>());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  30.   class LifecycleInstanceTracker extends LeakTracker {
  31.   
  32. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  31.   
  32.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   
  35.     LifecycleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  31.   
  32.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   
  35.     LifecycleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:32: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  30.   class LifecycleInstanceTracker extends LeakTracker {
  31.   
  32. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  33.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  34.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  37.         final WeakReferenceGenerator weakReferenceGenerator,
  38.         final String className) {
  39. >     super(clazz, weakReferenceGenerator, className, LIFECYCLE);
  40.     }
  41.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.   
  35.     WeakReference<?> getWeakReference() {
  36. >     return weakReference;
  37.     }
  38.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `x0`.
  34.   import io.reactivex.subjects.PublishSubject;
  35.   
  36. > class ActiveTracker implements LeakInstanceTracker {
  37.   
  38.     @VisibleForTesting

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:36: warning: GRADUAL_DEREFERENCE
  method call on pointer `x0`.
  34.   import io.reactivex.subjects.PublishSubject;
  35.   
  36. > class ActiveTracker implements LeakInstanceTracker {
  37.   
  38.     @VisibleForTesting

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:37: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  35.      */
  36.     public Map<String, Number> getMetrics() {
  37. >     return metrics;
  38.     }
  39.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTrackerFactory.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  42.         final LeakType leakType) {
  43.       if (leakType == SINGLETON) {
  44. >       return new SingleInstanceTracker(eventClass, weakReferenceGenerator, name);
  45.       } else {
  46.         return new LifecycleInstanceTracker(eventClass, weakReferenceGenerator, name);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTrackerFactory.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  44.         return new SingleInstanceTracker(eventClass, weakReferenceGenerator, name);
  45.       } else {
  46. >       return new LifecycleInstanceTracker(eventClass, weakReferenceGenerator, name);
  47.       }
  48.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  36.   public class ULeak {
  37.   
  38. >   private static final ConcurrentLinkedQueue<QueuedLeakEvent> PREINITIALIZATION_EVENTS =
  39.         new ConcurrentLinkedQueue<>();
  40.     private static final AtomicBoolean INITIALIZED = new AtomicBoolean(false);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  38.     private static final ConcurrentLinkedQueue<QueuedLeakEvent> PREINITIALIZATION_EVENTS =
  39.         new ConcurrentLinkedQueue<>();
  40. >   private static final AtomicBoolean INITIALIZED = new AtomicBoolean(false);
  41.     private static final PublishSubject<Throwable> ERROR_RELAY = PublishSubject.create();
  42.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39.       longLivedObjects.add(new Object());
  40. >     return new WeakReference<>(longLivedObjects.remove());
  41.     }
  42.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  37.   
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39. >     longLivedObjects.add(new Object());
  40.       return new WeakReference<>(longLivedObjects.remove());
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.WeakReferenceGenerator.longLivedObjects`,dereference of pointer `this`.
  37.   
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39. >     longLivedObjects.add(new Object());
  40.       return new WeakReference<>(longLivedObjects.remove());
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/WeakReferenceGenerator.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.WeakReferenceGenerator.longLivedObjects`,dereference of pointer `this`.
  38.     protected synchronized WeakReference<Object> getGenericWeakRef() {
  39.       longLivedObjects.add(new Object());
  40. >     return new WeakReference<>(longLivedObjects.remove());
  41.     }
  42.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ReferenceInfo.java:40: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  38.   
  39.     long getTimeCreatedMs() {
  40. >     return timeCreatedMs;
  41.     }
  42.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.      * A list of weak references to instances allocated so far
  35.      */
  36. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  39.   
  40.     SingleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  36.     private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38. >   private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();
  39.   
  40.     SingleInstanceTracker(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:36: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  34.      * A list of weak references to instances allocated so far
  35.      */
  36. >   private final LinkedBlockingQueue<ReferenceInfo> allocations = new LinkedBlockingQueue<>();
  37.   
  38.     private final Collection<ReferenceInfo> tempCollection = new LinkedList<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  42.         final WeakReferenceGenerator weakReferenceGenerator,
  43.         final String name) {
  44. >     super(eventClass, weakReferenceGenerator, name, SINGLETON);
  45.     }
  46.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:41: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  39.   
  40.     public ULeakConfiguration(double explicitGCProbability, long leakCheckFrequencyMs) {
  41. >     this.explicitGCProbability = Math.max(0, explicitGCProbability);
  42.       this.leakCheckFrequencyMs = Math.max(MINIMUM_CHECK_FREQUENCY_MS, leakCheckFrequencyMs);
  43.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.     public ULeakConfiguration(double explicitGCProbability, long leakCheckFrequencyMs) {
  41.       this.explicitGCProbability = Math.max(0, explicitGCProbability);
  42. >     this.leakCheckFrequencyMs = Math.max(MINIMUM_CHECK_FREQUENCY_MS, leakCheckFrequencyMs);
  43.     }
  44.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  38.     public final long leakCheckFrequencyMs;
  39.   
  40. >   public ULeakConfiguration(double explicitGCProbability, long leakCheckFrequencyMs) {
  41.       this.explicitGCProbability = Math.max(0, explicitGCProbability);
  42.       this.leakCheckFrequencyMs = Math.max(MINIMUM_CHECK_FREQUENCY_MS, leakCheckFrequencyMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  45.         return;
  46.       }
  47. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48.       if (requiresTracking()) {
  49.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  45.         return;
  46.       }
  47. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48.       if (requiresTracking()) {
  49.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  42.     @Override
  43.     void track(WeakReference<?> weakReference, long timeCreatedMs) {
  44. >     if (!isValidTrackEvent(weakReference)) {
  45.         return;
  46.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  46.       }
  47.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48. >     if (requiresTracking()) {
  49.         resetWeakReference();
  50.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  47.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  48.       if (requiresTracking()) {
  49. >       resetWeakReference();
  50.       }
  51.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:44: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  42.      */
  43.     public Map<String, String> getDimensions() {
  44. >     return dimensions;
  45.     }
  46.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:50: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  48.         String name,
  49.         final LeakType leakType) {
  50. >     this.eventClass = eventClass;
  51.       this.weakReferenceGenerator = weakReferenceGenerator;
  52.       this.name = name;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:51: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  49.         final LeakType leakType) {
  50.       this.eventClass = eventClass;
  51. >     this.weakReferenceGenerator = weakReferenceGenerator;
  52.       this.name = name;
  53.       this.leakType = leakType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:52: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  50.       this.eventClass = eventClass;
  51.       this.weakReferenceGenerator = weakReferenceGenerator;
  52. >     this.name = name;
  53.       this.leakType = leakType;
  54.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:53: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  51.       this.weakReferenceGenerator = weakReferenceGenerator;
  52.       this.name = name;
  53. >     this.leakType = leakType;
  54.     }
  55.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  47.         WeakReferenceGenerator weakReferenceGenerator,
  48.         String name,
  49. >       final LeakType leakType) {
  50.       this.eventClass = eventClass;
  51.       this.weakReferenceGenerator = weakReferenceGenerator;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  44.     private static LeakInstanceTracker trackerSingleton = null;
  45.   
  46. >   private ULeak() {
  47.     }
  48.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  46.      */
  47.     boolean contains(Class<?> clazz, LeakType leakType) {
  48. >     Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(clazz);
  49.       return trackers != null && trackers.containsKey(leakType);
  50.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  47.     boolean contains(Class<?> clazz, LeakType leakType) {
  48.       Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(clazz);
  49. >     return trackers != null && trackers.containsKey(leakType);
  50.     }
  51.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ULeakEvent.metrics`,dereference of pointer `this`.
  46.   
  47.     void addMetric(String key, Number metric) {
  48. >     metrics.put(key, metric);
  49.     }
  50.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  50.         return;
  51.       }
  52. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53.       if (requiresTracking()) {
  54.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  50.         return;
  51.       }
  52. >     allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53.       if (requiresTracking()) {
  54.         resetWeakReference();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  47.     @Override
  48.     protected void track(WeakReference<?> weakReference, final long timeCreatedMs) {
  49. >     if (!isValidTrackEvent(weakReference)) {
  50.         return;
  51.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  51.       }
  52.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53. >     if (requiresTracking()) {
  54.         resetWeakReference();
  55.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  52.       allocations.add(new ReferenceInfo(weakReference, timeCreatedMs));
  53.       if (requiresTracking()) {
  54. >       resetWeakReference();
  55.       }
  56.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakConfiguration.java:49: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  47.      */
  48.     public boolean shouldUseExplicitGc() {
  49. >     return explicitGCProbability > 0;
  50.     }
  51.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeakEvent.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ULeakEvent.dimensions`,dereference of pointer `this`.
  50.   
  51.     void addDimension(String key, String dimension) {
  52. >     dimensions.put(key, dimension);
  53.     }
  54.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  56.       // a valid weak
  57.       // reference.
  58. >     return clearInvalidAndGetCount() >= 1;
  59.     }
  60.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  62.         ULeakConfiguration configuration,
  63.         PublishSubject<Throwable> errorRelay) {
  64. >     this(
  65.           reporter,
  66.           configuration,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  59.     protected void clearTrackingData() {
  60.       super.clearTrackingData();
  61. >     allocations.clear();
  62.       tempCollection.clear();
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.tempCollection`,dereference of pointer `this`.
  60.       super.clearTrackingData();
  61.       allocations.clear();
  62. >     tempCollection.clear();
  63.     }
  64.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  58.     @Override
  59.     protected void clearTrackingData() {
  60. >     super.clearTrackingData();
  61.       allocations.clear();
  62.       tempCollection.clear();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:62: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  60.      */
  61.     final Class<?> getTrackedClass() {
  62. >     return eventClass;
  63.     }
  64.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `gcIndicatorWeakReference`.
  63.       WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  64.       return gcIndicatorWeakReference != null
  65. >         && gcIndicatorWeakReference.get() == null
  66.           && isInMemory();
  67.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.     @Override
  62.     boolean hasViolation() {
  63. >     WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  64.       return gcIndicatorWeakReference != null
  65.           && gcIndicatorWeakReference.get() == null

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  64.       return gcIndicatorWeakReference != null
  65.           && gcIndicatorWeakReference.get() == null
  66. >         && isInMemory();
  67.     }
  68.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  66.         ActiveTracker.RefGeneratorFactory refGeneratorFactory) {
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68. >         && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69.         return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68.           && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69. >       return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {
  71.         LeakTracker tracker =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `refGeneratorFactory`.
  71.         LeakTracker tracker =
  72.             LeakTrackerFactory.getTracker(
  73. >               clazz, refGeneratorFactory.createGenerator(), className, leakType);
  74.         addTracker(tracker);
  75.         return tracker;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  65.         String className,
  66.         ActiveTracker.RefGeneratorFactory refGeneratorFactory) {
  67. >     if (leakTrackerMultiMap.containsKey(clazz)
  68.           && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69.         return leakTrackerMultiMap.get(clazz).get(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  66.         ActiveTracker.RefGeneratorFactory refGeneratorFactory) {
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68. >         && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69.         return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  67.       if (leakTrackerMultiMap.containsKey(clazz)
  68.           && leakTrackerMultiMap.get(clazz).containsKey(leakType)) {
  69. >       return leakTrackerMultiMap.get(clazz).get(leakType);
  70.       } else {
  71.         LeakTracker tracker =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  72.             LeakTrackerFactory.getTracker(
  73.                 clazz, refGeneratorFactory.createGenerator(), className, leakType);
  74. >       addTracker(tracker);
  75.         return tracker;
  76.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:66: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  64.   
  65.     final String getTrackerName() {
  66. >     return name;
  67.     }
  68.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  65.     @Override
  66.     boolean requiresTracking() {
  67. >     return clearInvalidAndGetCount() > 1;
  68.     }
  69.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:71: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  69.     @Nullable
  70.     final WeakReference<Object> getGcIndicatorWeakReference() {
  71. >     return gcIndicatorWeakReference;
  72.     }
  73.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:83: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  81.       this.errorRelay = errorRelay;
  82.       this.reporter = reporter;
  83. >     long leakCheckFrequencyMillis = configuration.leakCheckFrequencyMs;
  84.       observableInterval =
  85.           new ObservableInterval(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:51: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  49.     private final ObservableInterval observableInterval;
  50.     private final GcCallWrapper gcCallWrapper;
  51. >   private final AtomicBoolean explicitGcCalledLastIteration = new AtomicBoolean(false);
  52.     private final ULeakConfiguration configuration;
  53.     private final Random random;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  53.     private final Random random;
  54.     private final PublishSubject<Throwable> errorRelay;
  55. >   private final TrackedReferences trackedReferences = new TrackedReferences();
  56.     @Nullable
  57.     private Disposable disposable;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:81: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  79.         Random random,
  80.         PublishSubject<Throwable> errorRelay) {
  81. >     this.errorRelay = errorRelay;
  82.       this.reporter = reporter;
  83.       long leakCheckFrequencyMillis = configuration.leakCheckFrequencyMs;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.         PublishSubject<Throwable> errorRelay) {
  81.       this.errorRelay = errorRelay;
  82. >     this.reporter = reporter;
  83.       long leakCheckFrequencyMillis = configuration.leakCheckFrequencyMs;
  84.       observableInterval =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:89: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  87.               leakCheckFrequencyMillis,
  88.               TimeUnit.MILLISECONDS,
  89. >             Schedulers.io());
  90.       this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:90: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  88.               TimeUnit.MILLISECONDS,
  89.               Schedulers.io());
  90. >     this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;
  92.       this.random = random;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:91: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  89.               Schedulers.io());
  90.       this.configuration = configuration;
  91. >     this.gcCallWrapper = gcCallWrapper;
  92.       this.random = random;
  93.       this.refGeneratorFactory = refGeneratorFactory;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:92: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  90.       this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;
  92. >     this.random = random;
  93.       this.refGeneratorFactory = refGeneratorFactory;
  94.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:93: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  91.       this.gcCallWrapper = gcCallWrapper;
  92.       this.random = random;
  93. >     this.refGeneratorFactory = refGeneratorFactory;
  94.     }
  95.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  87.               leakCheckFrequencyMillis,
  88.               TimeUnit.MILLISECONDS,
  89. >             Schedulers.io());
  90.       this.configuration = configuration;
  91.       this.gcCallWrapper = gcCallWrapper;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  49.     private final ObservableInterval observableInterval;
  50.     private final GcCallWrapper gcCallWrapper;
  51. >   private final AtomicBoolean explicitGcCalledLastIteration = new AtomicBoolean(false);
  52.     private final ULeakConfiguration configuration;
  53.     private final Random random;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  53.     private final Random random;
  54.     private final PublishSubject<Throwable> errorRelay;
  55. >   private final TrackedReferences trackedReferences = new TrackedReferences();
  56.     @Nullable
  57.     private Disposable disposable;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  78.         RefGeneratorFactory refGeneratorFactory,
  79.         Random random,
  80. >       PublishSubject<Throwable> errorRelay) {
  81.       this.errorRelay = errorRelay;
  82.       this.reporter = reporter;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:75: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  73.   
  74.     final Class<?> getEventClass() {
  75. >     return eventClass;
  76.     }
  77.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  75.     long getLatestReferenceRegistrationTimeMs() {
  76.       long oldestReferenceTime = 0L;
  77. >     for (ReferenceInfo referenceInfo : allocations) {
  78.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  79.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  76.       long oldestReferenceTime = 0L;
  77.       for (ReferenceInfo referenceInfo : allocations) {
  78. >       oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  79.       }
  80.       return oldestReferenceTime;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  75.     long getLatestReferenceRegistrationTimeMs() {
  76.       long oldestReferenceTime = 0L;
  77. >     for (ReferenceInfo referenceInfo : allocations) {
  78.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  79.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `gcIndicatorWeakReference`.
  77.       WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  78.       return gcIndicatorWeakReference != null
  79. >         && gcIndicatorWeakReference.get() == null
  80.           && clearInvalidAndGetCount() > MAX_ACTIVE_INSTANCES_ALLOWED;
  81.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  75.     @Override
  76.     boolean hasViolation() {
  77. >     WeakReference<Object> gcIndicatorWeakReference = getGcIndicatorWeakReference();
  78.       return gcIndicatorWeakReference != null
  79.           && gcIndicatorWeakReference.get() == null

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  78.       return gcIndicatorWeakReference != null
  79.           && gcIndicatorWeakReference.get() == null
  80. >         && clearInvalidAndGetCount() > MAX_ACTIVE_INSTANCES_ALLOWED;
  81.     }
  82.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:79: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  77.   
  78.     final void resetWeakReference() {
  79. >     gcIndicatorWeakReference = weakReferenceGenerator.getGenericWeakRef();
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LeakTracker.weakReferenceGenerator`,dereference of pointer `this`.
  77.   
  78.     final void resetWeakReference() {
  79. >     gcIndicatorWeakReference = weakReferenceGenerator.getGenericWeakRef();
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `materialized`.
  82.     final boolean isValidTrackEvent(WeakReference<?> weakReference) {
  83.       Object materialized = weakReference.get();
  84. >     if (materialized == null || this.getEventClass() != materialized.getClass()) {
  85.         return false;
  86.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  82.     final boolean isValidTrackEvent(WeakReference<?> weakReference) {
  83.       Object materialized = weakReference.get();
  84. >     if (materialized == null || this.getEventClass() != materialized.getClass()) {
  85.         return false;
  86.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `weakReference`.
  81.   
  82.     final boolean isValidTrackEvent(WeakReference<?> weakReference) {
  83. >     Object materialized = weakReference.get();
  84.       if (materialized == null || this.getEventClass() != materialized.getClass()) {
  85.         return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  83.     @Override
  84.     int getCurrentNumInMemoryInstances() {
  85. >     return clearInvalidAndGetCount();
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  83.     @Override
  84.     int getCurrentNumInMemoryInstances() {
  85. >     return allocations.size();
  86.     }
  87.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  83.      */
  84.     private void addTracker(LeakTracker leakTracker) {
  85. >     if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86.         Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  84.     private void addTracker(LeakTracker leakTracker) {
  85.       if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86. >       Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must
  88.         // have a

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:93: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  91.           return;
  92.         }
  93. >       if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  92.         }
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94. >         trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:95: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95. >         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }
  97.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  97.       } else {
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99. >       trackers.put(leakTracker.getLeakType(), leakTracker);
  100.         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTracker`.
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99.         trackers.put(leakTracker.getLeakType(), leakTracker);
  100. >       leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }
  102.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  96.         }
  97.       } else {
  98. >       Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99.         trackers.put(leakTracker.getLeakType(), leakTracker);
  100.         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  83.      */
  84.     private void addTracker(LeakTracker leakTracker) {
  85. >     if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86.         Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  84.     private void addTracker(LeakTracker leakTracker) {
  85.       if (leakTrackerMultiMap.containsKey(leakTracker.getEventClass())) {
  86. >       Map<LeakType, LeakTracker> trackers = leakTrackerMultiMap.get(leakTracker.getEventClass());
  87.         // Never expect this scenario to occur because if the map contains the class key, then it must
  88.         // have a

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:95: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95. >         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }
  97.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99.         trackers.put(leakTracker.getLeakType(), leakTracker);
  100. >       leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }
  102.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:93: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  91.           return;
  92.         }
  93. >       if (!trackers.containsKey(leakTracker.getLeakType())) {
  94.           trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  92.         }
  93.         if (!trackers.containsKey(leakTracker.getLeakType())) {
  94. >         trackers.put(leakTracker.getLeakType(), leakTracker);
  95.           leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  96.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  97.       } else {
  98.         Map<LeakType, LeakTracker> trackers = new HashMap<>();
  99. >       trackers.put(leakTracker.getLeakType(), leakTracker);
  100.         leakTrackerMultiMap.put(leakTracker.getEventClass(), trackers);
  101.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:91: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  89.   
  90.     final LeakType getLeakType() {
  91. >     return leakType;
  92.     }
  93.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  89.     protected void clearTrackingData() {
  90.       super.clearTrackingData();
  91. >     allocations.clear();
  92.       tempCollection.clear();
  93.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.tempCollection`,dereference of pointer `this`.
  90.       super.clearTrackingData();
  91.       allocations.clear();
  92. >     tempCollection.clear();
  93.     }
  94.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  88.     @Override
  89.     protected void clearTrackingData() {
  90. >     super.clearTrackingData();
  91.       allocations.clear();
  92.       tempCollection.clear();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  94.     long getLatestReferenceRegistrationTimeMs() {
  95.       long oldestReferenceTime = 0L;
  96. >     for (ReferenceInfo referenceInfo : allocations) {
  97.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  98.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:97: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  95.       long oldestReferenceTime = 0L;
  96.       for (ReferenceInfo referenceInfo : allocations) {
  97. >       oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  98.       }
  99.       return oldestReferenceTime;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  94.     long getLatestReferenceRegistrationTimeMs() {
  95.       long oldestReferenceTime = 0L;
  96. >     for (ReferenceInfo referenceInfo : allocations) {
  97.         oldestReferenceTime = Math.max(referenceInfo.getTimeCreatedMs(), oldestReferenceTime);
  98.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LeakTracker.java:96: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  94.     @CallSuper
  95.     protected void clearTrackingData() {
  96. >     gcIndicatorWeakReference = null;
  97.     }
  98.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`.
  113.           shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }
  115. >     }
  116.       if (shouldStartTracking && disposable == null) {
  117.         startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:100: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  98.       ULeak.QueuedLeakEvent queuedLeakEvent;
  99.       boolean shouldStartTracking = false;
  100. >     synchronized (trackedReferences) {
  101.         while ((queuedLeakEvent = events.poll()) != null) {
  102.           Object object = queuedLeakEvent.weakReference.get();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  113.           shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }
  115. >     }
  116.       if (shouldStartTracking && disposable == null) {
  117.         startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:116: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  114.         }
  115.       }
  116. >     if (shouldStartTracking && disposable == null) {
  117.         startTracking();
  118.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `events`.
  99.       boolean shouldStartTracking = false;
  100.       synchronized (trackedReferences) {
  101. >       while ((queuedLeakEvent = events.poll()) != null) {
  102.           Object object = queuedLeakEvent.weakReference.get();
  103.           if (object == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  106.           LeakTracker tracker =
  107.               trackedReferences.getOrCreate(
  108. >                 object.getClass(), SINGLETON, queuedLeakEvent.className, refGeneratorFactory);
  109.           if (tracker == null) {
  110.             continue;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `queuedLeakEvent->com.uber.uleak.ULeak$QueuedLeakEvent.weakReference`,dereference of pointer `queuedLeakEvent`.
  100.       synchronized (trackedReferences) {
  101.         while ((queuedLeakEvent = events.poll()) != null) {
  102. >         Object object = queuedLeakEvent.weakReference.get();
  103.           if (object == null) {
  104.             continue;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`,dereference of pointer `queuedLeakEvent`,dereference of pointer `this`.
  105.           }
  106.           LeakTracker tracker =
  107. >             trackedReferences.getOrCreate(
  108.                   object.getClass(), SINGLETON, queuedLeakEvent.className, refGeneratorFactory);
  109.           if (tracker == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  115.       }
  116.       if (shouldStartTracking && disposable == null) {
  117. >       startTracking();
  118.       }
  119.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  111.           }
  112.           tracker.track(queuedLeakEvent.weakReference, queuedLeakEvent.timeEventRegisteredMs);
  113. >         shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }
  115.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `queuedLeakEvent`,dereference of pointer `queuedLeakEvent`.
  110.             continue;
  111.           }
  112. >         tracker.track(queuedLeakEvent.weakReference, queuedLeakEvent.timeEventRegisteredMs);
  113.           shouldStartTracking = shouldStartTracking || tracker.requiresTracking();
  114.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  98.       tempCollection.clear();
  99.       allocations.drainTo(tempCollection);
  100. >     for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  99.       allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101. >       if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);
  103.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  99.       allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101. >       if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);
  103.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {
  102. >         allocations.add(referenceInfo);
  103.         }
  104.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`.
  103.         }
  104.       }
  105. >     return allocations.size();
  106.     }
  107.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.allocations`,dereference of pointer `this`,dereference of pointer `this`.
  97.     private int clearInvalidAndGetCount() {
  98.       tempCollection.clear();
  99. >     allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.tempCollection`,dereference of pointer `this`.
  96.     // still exists.
  97.     private int clearInvalidAndGetCount() {
  98. >     tempCollection.clear();
  99.       allocations.drainTo(tempCollection);
  100.       for (ReferenceInfo referenceInfo : tempCollection) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTracker.tempCollection`,dereference of pointer `this`.
  98.       tempCollection.clear();
  99.       allocations.drainTo(tempCollection);
  100. >     for (ReferenceInfo referenceInfo : tempCollection) {
  101.         if (referenceInfo.getWeakReference().get() != null) {
  102.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  dereference of pointer `uleak.ULeak$1.com.uber.uleak.ULeak$1.$SwitchMap$com$uber$uleak$ULeak$Type`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  109.       switch (type) {
  110.         case ACTIVE_REPORTING:
  111. >         trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);
  112.           break;
  113.         case NO_OP:

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  113.         case NO_OP:
  114.         default:
  115. >         trackerSingleton = new NoOpTracker();
  116.           break;
  117.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak.com.uber.uleak.ULeak.INITIALIZED`.
  104.     public static synchronized void initialize(
  105.         final Type type, final ULeakEventReporter reporter, ULeakConfiguration configuration) {
  106. >     if (INITIALIZED.getAndSet(true)) {
  107.         return;
  108.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak.com.uber.uleak.ULeak.trackerSingleton`.
  116.           break;
  117.       }
  118. >     trackerSingleton.flushAllQueuedReferences(PREINITIALIZATION_EVENTS);
  119.     }
  120.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  109.       tempCollection.clear();
  110.       allocations.drainTo(tempCollection);
  111. >     for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  110.       allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112. >       if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);
  114.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `referenceInfo`.
  110.       allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112. >       if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);
  114.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {
  113. >         allocations.add(referenceInfo);
  114.         }
  115.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`.
  114.         }
  115.       }
  116. >     return allocations.size();
  117.     }
  118.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.allocations`,dereference of pointer `this`,dereference of pointer `this`.
  108.     private int clearInvalidAndGetCount() {
  109.       tempCollection.clear();
  110. >     allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.tempCollection`,dereference of pointer `this`.
  107.      */
  108.     private int clearInvalidAndGetCount() {
  109. >     tempCollection.clear();
  110.       allocations.drainTo(tempCollection);
  111.       for (ReferenceInfo referenceInfo : tempCollection) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/SingleInstanceTracker.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTracker.tempCollection`,dereference of pointer `this`.
  109.       tempCollection.clear();
  110.       allocations.drainTo(tempCollection);
  111. >     for (ReferenceInfo referenceInfo : tempCollection) {
  112.         if (referenceInfo.getWeakReference().get() != null) {
  113.           allocations.add(referenceInfo);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/LifecycleInstanceTracker.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  108.     // If any reference still exists it means the object being referenced is still in memory.
  109.     private boolean isInMemory() {
  110. >     return clearInvalidAndGetCount() > 0;
  111.     }
  112.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTrackers`.
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111.       for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112. >       leakTrackers.addAll(trackers.values());
  113.       }
  114.       return leakTrackers;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  108.      */
  109.     List<LeakTracker> getAllLeakTrackers() {
  110. >     List<LeakTracker> leakTrackers = new ArrayList<>();
  111.       for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  109.     List<LeakTracker> getAllLeakTrackers() {
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111. >     for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());
  113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  109.     List<LeakTracker> getAllLeakTrackers() {
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111. >     for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());
  113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferences.leakTrackerMultiMap`,dereference of pointer `this`.
  109.     List<LeakTracker> getAllLeakTrackers() {
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111. >     for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112.         leakTrackers.addAll(trackers.values());
  113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/TrackedReferences.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `trackers`.
  110.       List<LeakTracker> leakTrackers = new ArrayList<>();
  111.       for (Map<LeakType, LeakTracker> trackers : leakTrackerMultiMap.values()) {
  112. >       leakTrackers.addAll(trackers.values());
  113.       }
  114.       return leakTrackers;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  dereference of pointer `uleak.ULeak$1.com.uber.uleak.ULeak$1.$SwitchMap$com$uber$uleak$ULeak$Type`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak$Type.com.uber.uleak.ULeak$Type.ACTIVE_REPORTING`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak$Type.com.uber.uleak.ULeak$Type.NO_OP`.
  107.         return;
  108.       }
  109. >     switch (type) {
  110.         case ACTIVE_REPORTING:
  111.           trackerSingleton = new ActiveTracker(reporter, configuration, ERROR_RELAY);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:129: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`.
  127.         tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {
  129. >         return;
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:135: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`.
  133.           startTracking();
  134.         }
  135. >     }
  136.     }
  137.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:126: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  124.       Class<?> clazz = object.getClass();
  125.       LeakTracker tracker;
  126. >     synchronized (trackedReferences) {
  127.         tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:129: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  127.         tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {
  129. >         return;
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:132: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);
  132. >       if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();
  134.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:135: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  133.           startTracking();
  134.         }
  135. >     }
  136.     }
  137.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  129.           return;
  130.         }
  131. >       tracker.track(new WeakReference<>(object), timeCreatedMs);
  132.         if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  122.     public void registerNewReference(
  123.         Object object, String className, final long timeCreatedMs, final LeakType leakType) {
  124. >     Class<?> clazz = object.getClass();
  125.       LeakTracker tracker;
  126.       synchronized (trackedReferences) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:127: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this`,dereference of pointer `this`.
  125.       LeakTracker tracker;
  126.       synchronized (trackedReferences) {
  127. >       tracker = trackedReferences.getOrCreate(clazz, leakType, className, refGeneratorFactory);
  128.         if (tracker == null) {
  129.           return;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);
  132.         if (tracker.requiresTracking() && disposable == null) {
  133. >         startTracking();
  134.         }
  135.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  129.           return;
  130.         }
  131. >       tracker.track(new WeakReference<>(object), timeCreatedMs);
  132.         if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:132: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  130.         }
  131.         tracker.track(new WeakReference<>(object), timeCreatedMs);
  132. >       if (tracker.requiresTracking() && disposable == null) {
  133.           startTracking();
  134.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  123.      * depend on cached experiments so give the callers a way to initialize this stuff
  124.      */
  125. >   public enum Type {
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ULeak$Type.com.uber.uleak.ULeak$Type.$VALUES`.
  123.      * depend on cached experiments so give the callers a way to initialize this stuff
  124.      */
  125. >   public enum Type {
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:125: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  123.      * depend on cached experiments so give the callers a way to initialize this stuff
  124.      */
  125. >   public enum Type {
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  126.       // would create a no-op instance counter
  127.       // Instance Class: NoOpTracker
  128. >     NO_OP,
  129.   
  130.       // the instance counter would report violations to the backend via UR

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  131.       // Caveat: wouldn't catch transient violations that happen before initialize
  132.       // Instance Class: ActiveTracker
  133. >     ACTIVE_REPORTING,
  134.     }
  135.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:141: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this`.
  139.       synchronized (observableInterval) {
  140.         if (disposable != null) {
  141. >         return;
  142.         }
  143.         disposable =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:194: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this`.
  192.                   }
  193.                 });
  194. >     }
  195.     }
  196.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:139: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  137.   
  138.     private void startTracking() {
  139. >     synchronized (observableInterval) {
  140.         if (disposable != null) {
  141.           return;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:140: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  138.     private void startTracking() {
  139.       synchronized (observableInterval) {
  140. >       if (disposable != null) {
  141.           return;
  142.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:141: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  139.       synchronized (observableInterval) {
  140.         if (disposable != null) {
  141. >         return;
  142.         }
  143.         disposable =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  142.         }
  143.         disposable =
  144. >           observableInterval.subscribe(
  145.                 new Consumer<Long>() {
  146.                   @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:194: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  192.                   }
  193.                 });
  194. >     }
  195.     }
  196.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  141.           return;
  142.         }
  143. >       disposable =
  144.             observableInterval.subscribe(
  145.                 new Consumer<Long>() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  141.           return;
  142.         }
  143. >       disposable =
  144.             observableInterval.subscribe(
  145.                 new Consumer<Long>() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:144: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this`.
  142.         }
  143.         disposable =
  144. >           observableInterval.subscribe(
  145.                 new Consumer<Long>() {
  146.                   @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  142.       QueuedLeakEvent(
  143.           WeakReference<Object> weakReference, String className, final long timeEventRegisteredMs) {
  144. >       this.weakReference = weakReference;
  145.         this.className = className;
  146.         this.timeEventRegisteredMs = timeEventRegisteredMs;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:145: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  143.           WeakReference<Object> weakReference, String className, final long timeEventRegisteredMs) {
  144.         this.weakReference = weakReference;
  145. >       this.className = className;
  146.         this.timeEventRegisteredMs = timeEventRegisteredMs;
  147.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:146: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  144.         this.weakReference = weakReference;
  145.         this.className = className;
  146. >       this.timeEventRegisteredMs = timeEventRegisteredMs;
  147.       }
  148.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ULeak.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  141.   
  142.       QueuedLeakEvent(
  143. >         WeakReference<Object> weakReference, String className, final long timeEventRegisteredMs) {
  144.         this.weakReference = weakReference;
  145.         this.className = className;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  143.         disposable =
  144.             observableInterval.subscribe(
  145. >               new Consumer<Long>() {
  146.                   @Override
  147.                   public void accept(Long aLong) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:150: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.configuration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  148.                     boolean useExplicitGcThisRound =
  149.                         configuration.shouldUseExplicitGc()
  150. >                           && random.nextDouble() < configuration.explicitGCProbability;
  151.                     boolean continueTracking = false;
  152.                     boolean callExplicitGC = false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:176: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.observableInterval`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  174.                           disposable = null;
  175.                         }
  176. >                     }
  177.                       return;
  178.                     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:168: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  166.                         continueTracking = continueTracking || tracker.requiresTracking();
  167.                       }
  168. >                   }
  169.                     if (!continueTracking) {
  170.                       // stop the interval if there isn't anything to track.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:153: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  151.                     boolean continueTracking = false;
  152.                     boolean callExplicitGC = false;
  153. >                   synchronized (trackedReferences) {
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:168: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  166.                         continueTracking = continueTracking || tracker.requiresTracking();
  167.                       }
  168. >                   }
  169.                     if (!continueTracking) {
  170.                       // stop the interval if there isn't anything to track.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:171: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  169.                     if (!continueTracking) {
  170.                       // stop the interval if there isn't anything to track.
  171. >                     synchronized (observableInterval) {
  172.                         if (disposable != null) {
  173.                           disposable.dispose();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:172: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  170.                       // stop the interval if there isn't anything to track.
  171.                       synchronized (observableInterval) {
  172. >                       if (disposable != null) {
  173.                           disposable.dispose();
  174.                           disposable = null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:174: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  172.                         if (disposable != null) {
  173.                           disposable.dispose();
  174. >                         disposable = null;
  175.                         }
  176.                       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:176: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  174.                           disposable = null;
  175.                         }
  176. >                     }
  177.                       return;
  178.                     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  152.                     boolean callExplicitGC = false;
  153.                     synchronized (trackedReferences) {
  154. >                     for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  152.                     boolean callExplicitGC = false;
  153.                     synchronized (trackedReferences) {
  154. >                     for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:149: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.configuration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  147.                   public void accept(Long aLong) throws Exception {
  148.                     boolean useExplicitGcThisRound =
  149. >                       configuration.shouldUseExplicitGc()
  150.                             && random.nextDouble() < configuration.explicitGCProbability;
  151.                     boolean continueTracking = false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.disposable`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  171.                       synchronized (observableInterval) {
  172.                         if (disposable != null) {
  173. >                         disposable.dispose();
  174.                           disposable = null;
  175.                         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:157: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));
  157. >                         if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {
  158.                             // try again with an explicit gc call.
  159.                             callExplicitGC = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  179.                     if (callExplicitGC) {
  180.                       gcCallWrapper.callGC();
  181. >                     explicitGcCalledLastIteration.set(true);
  182.                     } else {
  183.                       explicitGcCalledLastIteration.set(false);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  181.                       explicitGcCalledLastIteration.set(true);
  182.                     } else {
  183. >                     explicitGcCalledLastIteration.set(false);
  184.                     }
  185.                   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.gcCallWrapper`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  178.                     }
  179.                     if (callExplicitGC) {
  180. >                     gcCallWrapper.callGC();
  181.                       explicitGcCalledLastIteration.set(true);
  182.                     } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:150: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.random`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  148.                     boolean useExplicitGcThisRound =
  149.                         configuration.shouldUseExplicitGc()
  150. >                           && random.nextDouble() < configuration.explicitGCProbability;
  151.                     boolean continueTracking = false;
  152.                     boolean callExplicitGC = false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.reporter`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156. >                         reporter.reportEvent(createReportingEvent(tracker));
  157.                           if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {
  158.                             // try again with an explicit gc call.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0->com.uber.uleak.ActiveTracker.trackedReferences`,dereference of pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  152.                     boolean callExplicitGC = false;
  153.                     synchronized (trackedReferences) {
  154. >                     for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$1.this$0`,dereference of pointer `this`.
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155.                         if (tracker.hasViolation()) {
  156. >                         reporter.reportEvent(createReportingEvent(tracker));
  157.                           if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {
  158.                             // try again with an explicit gc call.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  185.                   }
  186.                 },
  187. >               new Consumer<Throwable>() {
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:155: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  153.                     synchronized (trackedReferences) {
  154.                       for (LeakTracker tracker : trackedReferences.getAllLeakTrackers()) {
  155. >                       if (tracker.hasViolation()) {
  156.                           reporter.reportEvent(createReportingEvent(tracker));
  157.                           if (useExplicitGcThisRound && !explicitGcCalledLastIteration.get()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  159.                             callExplicitGC = true;
  160.                             continueTracking = true;
  161. >                           tracker.resetWeakReference();
  162.                           } else {
  163.                             tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:163: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  161.                             tracker.resetWeakReference();
  162.                           } else {
  163. >                           tracker.clearTrackingData();
  164.                           }
  165.                         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:166: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  164.                           }
  165.                         }
  166. >                       continueTracking = continueTracking || tracker.requiresTracking();
  167.                       }
  168.                     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:191: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$2.this$0->com.uber.uleak.ActiveTracker.errorRelay`,dereference of pointer `this->com.uber.uleak.ActiveTracker$2.this$0`,dereference of pointer `this`.
  189.                   public void accept(Throwable throwable) throws Exception {
  190.                     explicitGcCalledLastIteration.set(false);
  191. >                   errorRelay.onNext(throwable);
  192.                   }
  193.                 });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker$2.this$0->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this->com.uber.uleak.ActiveTracker$2.this$0`,dereference of pointer `this`.
  188.                   @Override
  189.                   public void accept(Throwable throwable) throws Exception {
  190. >                   explicitGcCalledLastIteration.set(false);
  191.                     errorRelay.onNext(throwable);
  192.                   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T2_46`.
  204.       ULeakEvent reporterEvent = new ULeakEvent();
  205.       reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206. >     reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,
  208.           explicitGcCalledLastIteration.get()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  202.      */
  203.     private ULeakEvent createReportingEvent(final LeakTracker tracker) {
  204. >     ULeakEvent reporterEvent = new ULeakEvent();
  205.       reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206.       reporterEvent.addDimension(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211. >     reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  203.     private ULeakEvent createReportingEvent(final LeakTracker tracker) {
  204.       ULeakEvent reporterEvent = new ULeakEvent();
  205. >     reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206.       reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211. >     reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:212: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212. >     reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214.       reporterEvent.addMetric(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:214: warning: GRADUAL_DEREFERENCE
  method call on pointer `reporterEvent`.
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214. >     reporterEvent.addMetric(
  215.           LAST_LEAK_CREATED_TIME_MS, tracker.getLatestReferenceRegistrationTimeMs());
  216.       return reporterEvent;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:208: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTracker.explicitGcCalledLastIteration`,dereference of pointer `this`.
  206.       reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,
  208. >         explicitGcCalledLastIteration.get()
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  203.     private ULeakEvent createReportingEvent(final LeakTracker tracker) {
  204.       ULeakEvent reporterEvent = new ULeakEvent();
  205. >     reporterEvent.addDimension(CLASS_DIMENSION_KEY_NAME, tracker.getTrackerName());
  206.       reporterEvent.addDimension(
  207.           GC_TYPE_DIMENSION_KEY_NAME,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211. >     reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:213: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(
  213. >         INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214.       reporterEvent.addMetric(
  215.           LAST_LEAK_CREATED_TIME_MS, tracker.getLatestReferenceRegistrationTimeMs());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:215: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  213.           INSTANCES_COUNT_METRIC_KEY_NAME, tracker.getCurrentNumInMemoryInstances());
  214.       reporterEvent.addMetric(
  215. >         LAST_LEAK_CREATED_TIME_MS, tracker.getLatestReferenceRegistrationTimeMs());
  216.       return reporterEvent;
  217.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ActiveTracker$ViolationType.com.uber.uleak.ActiveTracker$ViolationType.EXPLICIT_GC_VIOLATION`.
  207.           GC_TYPE_DIMENSION_KEY_NAME,
  208.           explicitGcCalledLastIteration.get()
  209. >             ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210.               : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:210: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ActiveTracker$ViolationType.com.uber.uleak.ActiveTracker$ViolationType.IMPLICIT_GC_VIOLATION`.
  208.           explicitGcCalledLastIteration.get()
  209.               ? ViolationType.EXPLICIT_GC_VIOLATION.name()
  210. >             : ViolationType.IMPLICIT_GC_VIOLATION.name());
  211.       reporterEvent.addDimension(LEAK_TYPE_KEY_NAME, tracker.getLeakType().name());
  212.       reporterEvent.addMetric(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:219: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.ActiveTracker$ViolationType.com.uber.uleak.ActiveTracker$ViolationType.$VALUES`.
  217.     }
  218.   
  219. >   @VisibleForTesting
  220.     enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  218.   
  219.     @VisibleForTesting
  220. >   enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,
  222.       IMPLICIT_GC_VIOLATION

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:219: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  217.     }
  218.   
  219. >   @VisibleForTesting
  220.     enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:221: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  219.     @VisibleForTesting
  220.     enum ViolationType {
  221. >     EXPLICIT_GC_VIOLATION,
  222.       IMPLICIT_GC_VIOLATION
  223.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  220.     enum ViolationType {
  221.       EXPLICIT_GC_VIOLATION,
  222. >     IMPLICIT_GC_VIOLATION
  223.     }
  224.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:226: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  224.   
  225.     @VisibleForTesting(otherwise = VisibleForTesting.PACKAGE_PRIVATE)
  226. >   static class RefGeneratorFactory {
  227.   
  228.       WeakReferenceGenerator createGenerator() {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/main/java/com/uber/uleak/ActiveTracker.java:229: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  227.   
  228.       WeakReferenceGenerator createGenerator() {
  229. >       return new WeakReferenceGenerator();
  230.       }
  231.     }

Summary of the reports

  GRADUAL_DEREFERENCE: 275Found 696 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  21.   import org.junit.Test;
  22.   
  23. > public class ULeakConfigurationTest {
  24.   
  25.     @Test

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  30.           new ULeakConfiguration(
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  32.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34. >     assertThat(configuration.leakCheckFrequencyMs)
  35.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)
  35.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  27.     uleakConfiguration_whenConfigIsInitializedWithValidValues_ShouldReturnInitializedValues() {
  28.       double explicitGCProbability = .5d;
  29. >     ULeakConfiguration configuration =
  30.           new ULeakConfiguration(
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)
  35.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)
  35. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  36.     }
  37.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:32: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  30.           new ULeakConfiguration(
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  26.   import org.mockito.MockitoAnnotations;
  27.   
  28. > public class TrackedReferencesTest {
  29.   
  30.     TrackedReferences references;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:40: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  38.     WeakReferenceGenerator weakReferenceGenerator;
  39.   
  40. >   private final long lifecycleEndTimeMs = 1234L;
  41.   
  42.     @SuppressWarnings("NullAway")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:31: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  29.   import java.lang.ref.WeakReference;
  30.   
  31. > public class LifecycleInstanceTrackerTest {
  32.   
  33.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.     WeakReferenceGenerator weakReferenceGenerator;
  41.   
  42. >   private final long timeCreatedMs = 1234L;
  43.     private final long timeCreated2Ms = 4321L;
  44.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:43: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  41.   
  42.     private final long timeCreatedMs = 1234L;
  43. >   private final long timeCreated2Ms = 4321L;
  44.   
  45.     @SuppressWarnings("NullAway")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:31: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  29.   import java.lang.ref.WeakReference;
  30.   
  31. > public class SingleInstanceTrackerTest {
  32.   
  33.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.     public void setup() {
  37.       MockitoAnnotations.initMocks(this);
  38. >     references = new TrackedReferences();
  39.     }
  40.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  36.     public void setup() {
  37.       MockitoAnnotations.initMocks(this);
  38. >     references = new TrackedReferences();
  39.     }
  40.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:43: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  41.       ULeakConfiguration configuration =
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43. >     assertThat(configuration.explicitGCProbability).isZero();
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:45: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  43.       assertThat(configuration.explicitGCProbability).isZero();
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45. >     assertThat(configuration.leakCheckFrequencyMs)
  46.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  47.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43.       assertThat(configuration.explicitGCProbability).isZero();
  44. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)
  46.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:41: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  39.     public void
  40.     uleakConfiguration_whenConfigIsInitializedWithBadProbability_ShouldReturnUpdatedValues() {
  41. >     ULeakConfiguration configuration =
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43.       assertThat(configuration.explicitGCProbability).isZero();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43.       assertThat(configuration.explicitGCProbability).isZero();
  44. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)
  46.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)
  46. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  47.     }
  48.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  41.       ULeakConfiguration configuration =
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43. >     assertThat(configuration.explicitGCProbability).isZero();
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  41.     @Test
  42.     public void contains_whenMapIsEmpty_shouldReturnFalse() {
  43. >     assertThat(references.contains(Integer.class, SINGLETON)).isFalse();
  44.     }
  45.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  41.     @Test
  42.     public void contains_whenMapIsEmpty_shouldReturnFalse() {
  43. >     assertThat(references.contains(Integer.class, SINGLETON)).isFalse();
  44.     }
  45.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  47.     public void contains_whenParticularLeakTypeDoesNotExist_shouldReturnNull() {
  48.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  49. >     assertThat(references.contains(Integer.class, LIFECYCLE)).isFalse();
  50.     }
  51.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  47.     public void contains_whenParticularLeakTypeDoesNotExist_shouldReturnNull() {
  48.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  49. >     assertThat(references.contains(Integer.class, LIFECYCLE)).isFalse();
  50.     }
  51.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  46.     @Test
  47.     public void contains_whenParticularLeakTypeDoesNotExist_shouldReturnNull() {
  48. >     references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  49.       assertThat(references.contains(Integer.class, LIFECYCLE)).isFalse();
  50.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:50: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  48.     @Test
  49.     public void track_whenObjectIsTrackedButWeakReferenceReturnsNull_shouldNotBeAdded() {
  50. >     LifecycleInstanceTracker tracker =
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54. >     assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54. >     assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  50.       LifecycleInstanceTracker tracker =
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  53.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:54: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  52.       ULeakConfiguration configuration =
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54. >     assertThat(configuration.explicitGCProbability).isZero();
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:56: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  54.       assertThat(configuration.explicitGCProbability).isZero();
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56. >     assertThat(configuration.leakCheckFrequencyMs)
  57.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54.       assertThat(configuration.explicitGCProbability).isZero();
  55. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)
  57.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  50.     public void
  51.     uleakConfiguration_whenConfigIsInitializedWithInvalidFrequency_ShouldReturnMinimumFrequency() {
  52. >     ULeakConfiguration configuration =
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54.       assertThat(configuration.explicitGCProbability).isZero();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54.       assertThat(configuration.explicitGCProbability).isZero();
  55. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)
  57.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)
  57. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  58.     }
  59.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  52.       ULeakConfiguration configuration =
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54. >     assertThat(configuration.explicitGCProbability).isZero();
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  51.     @Test
  52.     public void getEventClass_whenObjectCreated_ShouldReturnSameClass() {
  53. >     SingleInstanceTracker tracker =
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56. >     assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }
  59.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  53.       SingleInstanceTracker tracker =
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55. >     assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  53.       SingleInstanceTracker tracker =
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55. >     assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56. >     assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }
  59.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  53.     public void contains_whenExists_shouldReturnTrue() {
  54.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  55. >     assertThat(references.contains(Integer.class, SINGLETON)).isTrue();
  56.     }
  57.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  53.     public void contains_whenExists_shouldReturnTrue() {
  54.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  55. >     assertThat(references.contains(Integer.class, SINGLETON)).isTrue();
  56.     }
  57.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  52.     @Test
  53.     public void contains_whenExists_shouldReturnTrue() {
  54. >     references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  55.       assertThat(references.contains(Integer.class, SINGLETON)).isTrue();
  56.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  78.     private ActiveTracker activeTracker;
  79.     private TestObserver<Throwable> testObserver;
  80. >   private long createdTimeMs1 = 1234L;
  81.     private long createdTimeMs2 = 4321L;
  82.     private long createdTimeMs3 = 4322L;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:81: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  79.     private TestObserver<Throwable> testObserver;
  80.     private long createdTimeMs1 = 1234L;
  81. >   private long createdTimeMs2 = 4321L;
  82.     private long createdTimeMs3 = 4322L;
  83.     private String className = "Integer";

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.     private long createdTimeMs1 = 1234L;
  81.     private long createdTimeMs2 = 4321L;
  82. >   private long createdTimeMs3 = 4322L;
  83.     private String className = "Integer";
  84.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:83: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  81.     private long createdTimeMs2 = 4321L;
  82.     private long createdTimeMs3 = 4322L;
  83. >   private String className = "Integer";
  84.   
  85.     @SuppressWarnings("NullAway")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:59: warning: GRADUAL_DEREFERENCE
  dereference of pointer `x0`.
  57.   import io.reactivex.subjects.PublishSubject;
  58.   
  59. > public class ActiveTrackerTest {
  60.   
  61.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  57.   import io.reactivex.subjects.PublishSubject;
  58.   
  59. > public class ActiveTrackerTest {
  60.   
  61.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62. >     assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }
  64.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62. >     assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }
  64.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62. >     assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }
  64.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  58.     @Test
  59.     public void getAllLeakTrackers_whenThereAreTwo_shouldReturnArrayListWithThoseTwoTrackers() {
  60. >     references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62.       assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  59.     public void getAllLeakTrackers_whenThereAreTwo_shouldReturnArrayListWithThoseTwoTrackers() {
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61. >     references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62.       assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  59.     @Test
  60.     public void track_whenObjectIsTrackedButWeakReferenceTypesDontMatch_shouldNotBeAdded() {
  61. >     LifecycleInstanceTracker tracker =
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  63.       when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }
  69.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  61.       LifecycleInstanceTracker tracker =
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63. >     when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  61.       LifecycleInstanceTracker tracker =
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63. >     when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  63.       when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }
  69.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63.       when(weakIntReference.get()).thenReturn(0);
  64. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  60.     @Test
  61.     public void track_whenObjectIsTrackedButWeakReferenceReturnsNull_ShouldNotBeAdded() {
  62. >     SingleInstanceTracker tracker =
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  69.     }
  70.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  69.     }
  70.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  62.       SingleInstanceTracker tracker =
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64. >     tracker.track(weakIntReference, timeCreatedMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:67: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  65.           new ULeakConfiguration(
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:69: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  67.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69. >     assertThat(configuration.leakCheckFrequencyMs)
  70.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  71.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)
  70.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  62.     uleakConfiguration_whenConfigIsInitializedWithInvalidFrequencybutValidP_ShouldReturnMinimumFrequency() {
  63.       double explicitGCProbability = .5d;
  64. >     ULeakConfiguration configuration =
  65.           new ULeakConfiguration(
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)
  70.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)
  70. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  71.     }
  72.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  65.           new ULeakConfiguration(
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:72: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  70.     @Test
  71.     public void track_whenObjectIsTracked_shouldBeAddedAndSizeShouldBeOne() {
  72. >     LifecycleInstanceTracker tracker =
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  74.       when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77. >     assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }
  80.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  72.       LifecycleInstanceTracker tracker =
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74. >     when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  72.       LifecycleInstanceTracker tracker =
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74. >     when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  74.       when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77. >     assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }
  80.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74.       when(weakIntReference.get()).thenReturn(0);
  75. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  71.     @Test
  72.     public void track_whenObjectIsTrackedButWeakReferenceTypesDontMatch_ShouldNotBeAdded() {
  73. >     SingleInstanceTracker tracker =
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  75.       when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78. >     assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  73.       SingleInstanceTracker tracker =
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75. >     when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  73.       SingleInstanceTracker tracker =
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75. >     when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  75.       when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78. >     assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75.       when(weakIntReference.get()).thenReturn(0);
  76. >     tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:78: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  76.       ULeakConfiguration configuration =
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78. >     assertThat(configuration.explicitGCProbability).isZero();
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  78.       assertThat(configuration.explicitGCProbability).isZero();
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80. >     assertThat(configuration.leakCheckFrequencyMs)
  81.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78.       assertThat(configuration.explicitGCProbability).isZero();
  79. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)
  81.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  74.     public void
  75.     uleakConfiguration_whenConfigIsInitializedWithInvalidInputs_ShouldReturnDefaultValues() {
  76. >     ULeakConfiguration configuration =
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78.       assertThat(configuration.explicitGCProbability).isZero();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78.       assertThat(configuration.explicitGCProbability).isZero();
  79. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)
  81.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:81: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)
  81. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  82.     }
  83.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  76.       ULeakConfiguration configuration =
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78. >     assertThat(configuration.explicitGCProbability).isZero();
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  81.     @Test
  82.     public void reset_when2ObjectsAreTrackedButResetIsCalled_shouldResetEverything() {
  83. >     LifecycleInstanceTracker tracker =
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:87: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  85.       when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88. >     assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89. >     assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$61`.
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92.       assertThat(tracker.requiresTracking()).isFalse();
  93.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92. >     assertThat(tracker.requiresTracking()).isFalse();
  93.     }
  94.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  83.       LifecycleInstanceTracker tracker =
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85. >     when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  83.       LifecycleInstanceTracker tracker =
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85. >     when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:87: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  85.       when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88. >     assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89. >     assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();
  90. >     tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92.       assertThat(tracker.requiresTracking()).isFalse();
  93.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92. >     assertThat(tracker.requiresTracking()).isFalse();
  93.     }
  94.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85.       when(weakIntReference.get()).thenReturn(0);
  86. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  82.     @Test
  83.     public void track_whenObjectIsTracked_ShouldBeAddedAndSizeShouldBeOne() {
  84. >     SingleInstanceTracker tracker =
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  86.       when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89. >     assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }
  92.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  84.       SingleInstanceTracker tracker =
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86. >     when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  84.       SingleInstanceTracker tracker =
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86. >     when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  86.       when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89. >     assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }
  92.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:87: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86.       when(weakIntReference.get()).thenReturn(0);
  87. >     tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  87.     public void setup() throws Exception {
  88.       MockitoAnnotations.initMocks(this);
  89. >     scheduler = new TestScheduler();
  90.       RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:96: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  94.         }
  95.       });
  96. >     errorRelay = PublishSubject.create();
  97.       testObserver = TestObserver.create();
  98.       errorRelay.subscribe(testObserver);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  95.       });
  96.       errorRelay = PublishSubject.create();
  97. >     testObserver = TestObserver.create();
  98.       errorRelay.subscribe(testObserver);
  99.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  87.     public void setup() throws Exception {
  88.       MockitoAnnotations.initMocks(this);
  89. >     scheduler = new TestScheduler();
  90.       RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.errorRelay`,dereference of pointer `this`,dereference of pointer `this`.
  96.       errorRelay = PublishSubject.create();
  97.       testObserver = TestObserver.create();
  98. >     errorRelay.subscribe(testObserver);
  99.     }
  100.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:93: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTrackerTest$1.this$0`,dereference of pointer `this`.
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {
  93. >         return ActiveTrackerTest.this.scheduler;
  94.         }
  95.       });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  94.     public void
  95.     hasViolation_when2ObjectsAreTrackedButGenericWeakRefStillHoldsRef_ShouldNotCauseViolation() {
  96. >     SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  96.       SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98. >     when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);
  99. >     when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  98.       when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100. >     when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  98.       when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100. >     when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  94.     public void
  95.     hasViolation_when2ObjectsAreTrackedButGenericWeakRefStillHoldsRef_ShouldNotCauseViolation() {
  96. >     SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$68`.
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference2`,dereference of pointer `this`.
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);
  99. >     when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference3`,dereference of pointer `this`.
  98.       when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100. >     when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  96.       SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98. >     when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  99.       when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101. >     tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:103: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103. >     tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  97.     public void
  98.     hasViolation_whenObjectIsTrackedButGenericWekRefStillHoldsRef_shouldNotCauseViolation() {
  99. >     LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  99.       LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101. >     when(weakIntReference.get()).thenReturn(0);
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);
  102. >     when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);
  102. >     when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  97.     public void
  98.     hasViolation_whenObjectIsTrackedButGenericWekRefStillHoldsRef_shouldNotCauseViolation() {
  99. >     LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$72`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  99.       LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101. >     when(weakIntReference.get()).thenReturn(0);
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakObjectReference`,dereference of pointer `this`.
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);
  102. >     when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:103: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  101.       when(weakIntReference.get()).thenReturn(0);
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();
  113. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  112.       scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114. >     verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115. >     verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();
  117.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116. >     verify(genericWeakRef1).get();
  117.     }
  118.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  107.     public void flushQueue_whenWeakReferenceReturnsNull_shouldDoNothing() {
  108.       createTracker(0.0);
  109. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();
  113. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  112.       scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114. >     verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  108.       createTracker(0.0);
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115. >     verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();
  117.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$61`.
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116. >     verify(genericWeakRef1).get();
  117.     }
  118.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  108.       createTracker(0.0);
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111. >     activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);
  112. >     scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  106.     @Test
  107.     public void flushQueue_whenWeakReferenceReturnsNull_shouldDoNothing() {
  108. >     createTracker(0.0);
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  110.     @Test
  111.     public void hasViolation_when2ObjectsAreTrackedButGenericWeakRefIsGced_ShouldCauseViolation() {
  112. >     SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  112.       SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114. >     when(weakIntReference.get()).thenReturn(0);
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);
  115. >     when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  110.     @Test
  111.     public void hasViolation_when2ObjectsAreTrackedButGenericWeakRefIsGced_ShouldCauseViolation() {
  112. >     SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$68`.
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120. >     assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$78`.
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121. >     assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$86`.
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122. >     assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$96`.
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }
  125.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference2`,dereference of pointer `this`.
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);
  115. >     when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  112.       SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114. >     when(weakIntReference.get()).thenReturn(0);
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120. >     assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121. >     assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122. >     assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }
  125.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  114.       when(weakIntReference.get()).thenReturn(0);
  115.       when(weakIntReference2.get()).thenReturn(1);
  116. >     tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118. >     tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  111.     @Test
  112.     public void hasViolation_whenObjectIsTrackedAndGenericWekRefSIsGCed_shouldCauseViolation() {
  113. >     LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  113.       LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115. >     when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  115.       when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  111.     @Test
  112.     public void hasViolation_whenObjectIsTrackedAndGenericWekRefSIsGCed_shouldCauseViolation() {
  113. >     LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118. >     assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119. >     assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }
  122.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  113.       LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115. >     when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  115.       when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118. >     assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119. >     assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }
  122.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115.       when(weakIntReference.get()).thenReturn(0);
  116. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:129: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  127.       activeTracker.flushAllQueuedReferences(queue);
  128.       scheduler.triggerActions();
  129. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  128.       scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130. >     verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();
  132.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131. >     verify(random, never()).nextDouble();
  132.     }
  133.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  120.     public void flushQueue_whenWeakReferenceReturnsObject_shouldStillDoNothing() {
  121.       Integer ref = 0;
  122. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  123.       createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:129: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  127.       activeTracker.flushAllQueuedReferences(queue);
  128.       scheduler.triggerActions();
  129. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  128.       scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130. >     verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();
  132.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131. >     verify(random, never()).nextDouble();
  132.     }
  133.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  122.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  123.       createTracker(0.0);
  124. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  123.       createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   
  127.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  123.       createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   
  127.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:127: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  125.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   
  127. >     activeTracker.flushAllQueuedReferences(queue);
  128.       scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  126.   
  127.       activeTracker.flushAllQueuedReferences(queue);
  128. >     scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  121.       Integer ref = 0;
  122.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  123. >     createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  121.     }
  122.   
  123. >   private class TestWeakRedGenerator extends WeakReferenceGenerator {
  124.   
  125.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  121.     }
  122.   
  123. >   private class TestWeakRedGenerator extends WeakReferenceGenerator {
  124.   
  125.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:128: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest$TestWeakRedGenerator.this$0`,dereference of pointer `this`.
  126.       @Override
  127.       public synchronized WeakReference<Object> getGenericWeakRef() {
  128. >       return weakObjectReference;
  129.       }
  130.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  126.     @Test
  127.     public void reset_when2ObjectsAreTrackedButResetIsCalled_ShouldResetEverything() {
  128. >     SingleInstanceTracker tracker =
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140. >     assertThat(tracker.requiresTracking()).isFalse();
  141.     }
  142.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130.       when(weakIntReference.get()).thenReturn(0);
  131. >     when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$54`.
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136. >     assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$76`.
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137. >     assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$89`.
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140.       assertThat(tracker.requiresTracking()).isFalse();
  141.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  128.       SingleInstanceTracker tracker =
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130. >     when(weakIntReference.get()).thenReturn(0);
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference2`,dereference of pointer `this`.
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130.       when(weakIntReference.get()).thenReturn(0);
  131. >     when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  128.       SingleInstanceTracker tracker =
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130. >     when(weakIntReference.get()).thenReturn(0);
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136. >     assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137. >     assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();
  138. >     tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140.       assertThat(tracker.requiresTracking()).isFalse();
  141.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140. >     assertThat(tracker.requiresTracking()).isFalse();
  141.     }
  142.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:132: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  130.       when(weakIntReference.get()).thenReturn(0);
  131.       when(weakIntReference2.get()).thenReturn(1);
  132. >     tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134. >     tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:149: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);
  149. >     verify(weakReferenceGenerator).getGenericWeakRef();
  150.   
  151.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:154: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:157: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157. >     verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:158: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();
  158. >     verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();
  160.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:155: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154.       verify(uLeakEventReporter).reportEvent(captor.capture());
  155. >     ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:157: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$108`.
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157. >     verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:141: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  139.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140.       createTracker(0.0);
  141. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:158: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$118`.
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();
  158. >     verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();
  160.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`,dereference of pointer `this`,dereference of pointer `this`.
  140.       createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`,dereference of pointer `this`,dereference of pointer `this`.
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  136.       Integer ref = 0;
  137.       Integer ref2 = 1;
  138. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  139.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140.       createTracker(0.0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`,dereference of pointer `this`.
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:146: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`,dereference of pointer `this`.
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  137.       Integer ref2 = 1;
  138.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  139. >     WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140.       createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:149: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);
  149. >     verify(weakReferenceGenerator).getGenericWeakRef();
  150.   
  151.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  140.       createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:148: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  146.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   
  148. >     activeTracker.flushAllQueuedReferences(queue);
  149.       verify(weakReferenceGenerator).getGenericWeakRef();
  150.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:151: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  149.       verify(weakReferenceGenerator).getGenericWeakRef();
  150.   
  151. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  157.       verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();
  159. >     testObserver.assertNoValues();
  160.     }
  161.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:146: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  138.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  139.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140. >     createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  154.       verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  141.     }
  142.   
  143. >   private class TestWeakRefGenerator extends WeakReferenceGenerator {
  144.   
  145.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  141.     }
  142.   
  143. >   private class TestWeakRefGenerator extends WeakReferenceGenerator {
  144.   
  145.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.SingleInstanceTrackerTest$TestWeakRefGenerator.this$0`,dereference of pointer `this`.
  146.       @Override
  147.       public synchronized WeakReference<Object> getGenericWeakRef() {
  148. >       return weakIntReference3;
  149.       }
  150.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:181: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);
  181. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   
  183.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:186: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:189: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189. >     verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:190: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();
  190. >     verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();
  192.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186.       verify(uLeakEventReporter).reportEvent(captor.capture());
  187. >     ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$122`.
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189. >     verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();
  190. >     verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();
  192.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:171: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170.       createTracker(0.0);
  171. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`,dereference of pointer `this`,dereference of pointer `this`.
  170.       createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`,dereference of pointer `this`,dereference of pointer `this`.
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`,dereference of pointer `this`.
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175. >     queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:167: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  165.       Integer ref2 = 1;
  166.       Integer ref3 = 2;
  167. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  168.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`,dereference of pointer `this`.
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:178: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`,dereference of pointer `this`.
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:168: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  166.       Integer ref3 = 2;
  167.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  168. >     WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170.       createTracker(0.0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);
  181. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   
  183.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$95`.
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:169: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  167.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  168.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169. >     WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170.       createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  170.       createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175. >     queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  178.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   
  180. >     activeTracker.flushAllQueuedReferences(queue);
  181.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  181.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   
  183. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:191: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  189.       verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();
  191. >     testObserver.assertNoValues();
  192.     }
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:178: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:170: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  168.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170. >     createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:188: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  186.       verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:209: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  207.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   
  209. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:210: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  208.   
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210. >     verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:211: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211. >     verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:212: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();
  214.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:218: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  216.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  217.   
  218. >     verify(weakReferenceGenerator).getGenericWeakRef();
  219.   
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:222: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:223: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222.       verify(uLeakEventReporter).reportEvent(captor.capture());
  223. >     ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  225.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:218: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  216.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  217.   
  218. >     verify(weakReferenceGenerator).getGenericWeakRef();
  219.   
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$131`.
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:198: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  196.     registerNewReference_whenWeak2SingletonWeakReferencesSameClass_shouldStartTrackingAndCauseReport() {
  197.       Integer ref = 0;
  198. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  199.       createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`,dereference of pointer `this`.
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`,dereference of pointer `this`.
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   
  206.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  207.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   
  209. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:200: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  198.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  199.       createTracker(0.0);
  200. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:210: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  208.   
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210. >     verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211. >     verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  199.       createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:212: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();
  214.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  199.       createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  204.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   
  206. >     activeTracker.flushAllQueuedReferences(queue);
  207.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:216: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  214.   
  215.       Integer ref2 = 1;
  216. >     activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  217.   
  218.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:207: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  205.   
  206.       activeTracker.flushAllQueuedReferences(queue);
  207. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  218.       verify(weakReferenceGenerator).getGenericWeakRef();
  219.   
  220. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:213: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  211.       verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213. >     testObserver.assertNoValues();
  214.   
  215.       Integer ref2 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   
  206.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:199: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  197.       Integer ref = 0;
  198.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  199. >     createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:224: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  222.       verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  225.     }
  226.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:243: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  241.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   
  243. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:244: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  242.   
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244. >     verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:245: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245. >     verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:246: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();
  248.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:252: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  250.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  251.   
  252. >     verify(weakReferenceGenerator).getGenericWeakRef();
  253.   
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:256: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:259: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259. >     verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();
  261.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:260: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();
  260. >     verify(random).nextDouble();
  261.       testObserver.assertNoValues();
  262.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:264: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:267: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267. >     verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:268: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();
  268. >     verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:272: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  270.       // Check to make sure nothing else happens.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:273: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273. >     verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:274: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274. >     verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();
  276.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:256: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:257: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256.       verify(uLeakEventReporter).reportEvent(captor.capture());
  257. >     ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:264: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:265: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265. >     uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:246: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$103`.
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();
  248.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$129`.
  250.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  251.   
  252. >     verify(weakReferenceGenerator).getGenericWeakRef();
  253.   
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:256: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$144`.
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:259: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$171`.
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259. >     verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();
  261.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:260: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$179`.
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();
  260. >     verify(random).nextDouble();
  261.       testObserver.assertNoValues();
  262.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:264: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$199`.
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:231: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  229.     registerNewReference_whenWeak2SingletonWeakReferencesSameClassExplicitGC_shouldStartTrackingAndCauseReport() {
  230.       Integer ref = 0;
  231. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  232.       createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:267: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$226`.
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267. >     verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:268: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$236`.
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();
  268. >     verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:236: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`,dereference of pointer `this`.
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:272: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$256`.
  270.       // Check to make sure nothing else happens.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:273: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$267`.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273. >     verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:274: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$277`.
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274. >     verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();
  276.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`,dereference of pointer `this`.
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);
  239.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:238: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238. >     when(random.nextDouble()).thenReturn(.5);
  239.   
  240.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:233: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  231.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  232.       createTracker(1.0);
  233. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:243: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  241.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   
  243. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:244: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$83`.
  242.   
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244. >     verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  232.       createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:245: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$93`.
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245. >     verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  232.       createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:240: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  238.       when(random.nextDouble()).thenReturn(.5);
  239.   
  240. >     activeTracker.flushAllQueuedReferences(queue);
  241.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:250: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  248.   
  249.       Integer ref2 = 1;
  250. >     activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  251.   
  252.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:238: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.random`,dereference of pointer `this`.
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238. >     when(random.nextDouble()).thenReturn(.5);
  239.   
  240.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:241: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  239.   
  240.       activeTracker.flushAllQueuedReferences(queue);
  241. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  252.       verify(weakReferenceGenerator).getGenericWeakRef();
  253.   
  254. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:263: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  261.       testObserver.assertNoValues();
  262.   
  263. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:271: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  269.       testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.
  271. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:247: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  245.       verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247. >     testObserver.assertNoValues();
  248.   
  249.       Integer ref2 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:261: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  259.       verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();
  261. >     testObserver.assertNoValues();
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  267.       verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();
  269. >     testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:275: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  273.       verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();
  275. >     testObserver.assertNoValues();
  276.     }
  277.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:236: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);
  239.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:232: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  230.       Integer ref = 0;
  231.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  232. >     createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  256.       verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:266: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  264.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266. >     assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:285: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:286: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286. >     verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:287: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287. >     verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:288: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();
  290.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:294: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  292.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  293.   
  294. >     verify(weakReferenceGenerator).getGenericWeakRef();
  295.   
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:298: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:298: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:299: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298.       verify(uLeakEventReporter).reportEvent(captor.capture());
  299. >     ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  301.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:298: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$103`.
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:283: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`,dereference of pointer `this`.
  281.   
  282.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:286: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286. >     verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287. >     verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:288: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();
  290.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`,dereference of pointer `this`.
  280.       createTracker(0.0);
  281.   
  282. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$88`.
  292.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  293.   
  294. >     verify(weakReferenceGenerator).getGenericWeakRef();
  295.   
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  290.   
  291.       Integer ref1 = 1;
  292. >     activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  293.   
  294.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:296: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  294.       verify(weakReferenceGenerator).getGenericWeakRef();
  295.   
  296. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  287.       verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289. >     testObserver.assertNoValues();
  290.   
  291.       Integer ref1 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  280.       createTracker(0.0);
  281.   
  282. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:283: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  281.   
  282.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:280: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  278.     @Test
  279.     public void registerNewReference_whenALifecycleWeakReference_shouldStartTrackingAndCauseReport() {
  280. >     createTracker(0.0);
  281.   
  282.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  298.       verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  301.     }
  302.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:312: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   
  312. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:313: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313. >     verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:314: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314. >     verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:315: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();
  317.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:321: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  319.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  320.   
  321. >     verify(weakReferenceGenerator).getGenericWeakRef();
  322.   
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:325: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:328: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328. >     verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();
  330.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:329: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();
  329. >     verify(random).nextDouble();
  330.       testObserver.assertNoValues();
  331.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:333: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:336: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336. >     verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:337: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();
  337. >     verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:341: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  339.       // Check to make sure nothing else happens.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:342: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342. >     verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:343: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343. >     verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();
  345.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:326: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325.       verify(uLeakEventReporter).reportEvent(captor.capture());
  326. >     ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:333: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:334: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334. >     uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:321: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  319.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  320.   
  321. >     verify(weakReferenceGenerator).getGenericWeakRef();
  322.   
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:328: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$143`.
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328. >     verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();
  330.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:329: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$151`.
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();
  329. >     verify(random).nextDouble();
  330.       testObserver.assertNoValues();
  331.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:333: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$171`.
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`,dereference of pointer `this`.
  307.   
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:336: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$198`.
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336. >     verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:337: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$208`.
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();
  337. >     verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:341: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$228`.
  339.       // Check to make sure nothing else happens.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:342: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$239`.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342. >     verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:343: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$249`.
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343. >     verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();
  345.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:310: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310. >     when(random.nextDouble()).thenReturn(.5);
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:312: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   
  312. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:313: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313. >     verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:314: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$65`.
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314. >     verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:315: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$75`.
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();
  317.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:308: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`,dereference of pointer `this`.
  306.       createTracker(1.0);
  307.   
  308. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  317.   
  318.       Integer ref1 = 1;
  319. >     activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  320.   
  321.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:310: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.random`,dereference of pointer `this`.
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310. >     when(random.nextDouble()).thenReturn(.5);
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:323: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  321.       verify(weakReferenceGenerator).getGenericWeakRef();
  322.   
  323. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:332: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  330.       testObserver.assertNoValues();
  331.   
  332. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:340: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  338.       testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.
  340. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  314.       verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316. >     testObserver.assertNoValues();
  317.   
  318.       Integer ref1 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:330: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  328.       verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();
  330. >     testObserver.assertNoValues();
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:338: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  336.       verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();
  338. >     testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:344: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  342.       verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();
  344. >     testObserver.assertNoValues();
  345.     }
  346.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:308: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  306.       createTracker(1.0);
  307.   
  308. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  307.   
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:306: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  304.     public void
  305.     registerNewReference_whenALifecycleWeakReferenceExplicitGC_shouldStartTrackingAndCauseReport() {
  306. >     createTracker(1.0);
  307.   
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:327: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  325.       verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:335: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  333.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335. >     assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:362: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  360.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   
  362. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:363: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  361.   
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363. >     verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:364: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364. >     verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:365: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();
  367.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:373: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  371.       activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);
  372.   
  373. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  374.   
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:377: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:380: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380. >     creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:381: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);
  381. >     creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378. >     assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:402: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  400.   
  401.       assertMultipleReporterEvents(
  402. >         captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404.           captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:404: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404. >         captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  405.     }
  406.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:380: warning: GRADUAL_DEREFERENCE
  method call on pointer `creationTimes`.
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380. >     creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:381: warning: GRADUAL_DEREFERENCE
  method call on pointer `creationTimes`.
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);
  381. >     creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:390: warning: GRADUAL_DEREFERENCE
  method call on pointer `ensureDifferentViolations`.
  388.   
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390. >     ensureDifferentViolations.add(
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:392: warning: GRADUAL_DEREFERENCE
  method call on pointer `ensureDifferentViolations`.
  390.       ensureDifferentViolations.add(
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392. >     ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:383: warning: GRADUAL_DEREFERENCE
  method call on pointer `instances`.
  381.       creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);
  383. >     instances.add(1);
  384.       instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:384: warning: GRADUAL_DEREFERENCE
  method call on pointer `instances`.
  382.       List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);
  384. >     instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTypes`.
  384.       instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);
  386. >     leakTypes.add(SINGLETON.name());
  387.       leakTypes.add(LIFECYCLE.name());
  388.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTypes`.
  385.       List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());
  387. >     leakTypes.add(LIFECYCLE.name());
  388.   
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  371.       activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);
  372.   
  373. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  374.   
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$149`.
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$161`.
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378. >     assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$168`.
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378. >     assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:379: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$174`.
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379. >     List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:382: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$192`.
  380.       creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);
  382. >     List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);
  384.       instances.add(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:351: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  349.     registerNewReference_when2SingletonAndALifecycleWeakReference_shouldTrackAndCause2Reports() {
  350.       Integer ref = 0;
  351. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  352.       createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:385: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$204`.
  383.       instances.add(1);
  384.       instances.add(2);
  385. >     List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());
  387.       leakTypes.add(LIFECYCLE.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$220`.
  387.       leakTypes.add(LIFECYCLE.name());
  388.   
  389. >     List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$224`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$227`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$231`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$241`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$244`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$248`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`,dereference of pointer `this`.
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$257`.
  396.       // not two copies
  397.       // of the same, so that the assertions below actually test the right thing.
  398. >     assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399.       assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:399: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$266`.
  397.       // of the same, so that the assertions below actually test the right thing.
  398.       assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399. >     assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   
  401.       assertMultipleReporterEvents(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:402: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$276`.
  400.   
  401.       assertMultipleReporterEvents(
  402. >         captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404.           captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:404: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$290`.
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404. >         captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  405.     }
  406.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:357: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`,dereference of pointer `this`.
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   
  359.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:362: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  360.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   
  362. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:353: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  351.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  352.       createTracker(0.0);
  353. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:363: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  361.   
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363. >     verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:364: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364. >     verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  352.       createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:365: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();
  367.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  352.       createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:359: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  357.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   
  359. >     activeTracker.flushAllQueuedReferences(queue);
  360.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:369: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  367.   
  368.       Integer ref2 = 1;
  369. >     activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  370.       Integer ref3 = 2;
  371.       activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:371: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  369.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  370.       Integer ref3 = 2;
  371. >     activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);
  372.   
  373.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:360: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  358.   
  359.       activeTracker.flushAllQueuedReferences(queue);
  360. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  373.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  374.   
  375. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:366: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  364.       verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366. >     testObserver.assertNoValues();
  367.   
  368.       Integer ref2 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:357: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   
  359.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:352: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  350.       Integer ref = 0;
  351.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  352. >     createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:401: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  399.       assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   
  401. >     assertMultipleReporterEvents(
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:403: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  401.       assertMultipleReporterEvents(
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403. >     assertMultipleReporterEvents(
  404.           captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  405.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.LIFECYCLE`.
  385.       List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());
  387. >     leakTypes.add(LIFECYCLE.name());
  388.   
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:399: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.LIFECYCLE`.
  397.       // of the same, so that the assertions below actually test the right thing.
  398.       assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399. >     assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   
  401.       assertMultipleReporterEvents(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.SINGLETON`.
  384.       instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);
  386. >     leakTypes.add(SINGLETON.name());
  387.       leakTypes.add(LIFECYCLE.name());
  388.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.SINGLETON`.
  396.       // not two copies
  397.       // of the same, so that the assertions below actually test the right thing.
  398. >     assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399.       assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:423: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);
  423. >     verify(weakReferenceGenerator).getGenericWeakRef();
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:426: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   
  426. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:427: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  425.   
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427. >     verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:428: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428. >     verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();
  430.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:426: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   
  426. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:427: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$114`.
  425.   
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427. >     verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:428: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$124`.
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428. >     verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();
  430.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:415: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:411: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  409.     flushQueue_whenWeak2WeakReferencesSameClassOneReferenceIsCollected_shouldStartTrackingButNoReporting() {
  410.       Integer ref = 0;
  411. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  412.       createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`,dereference of pointer `this`.
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  411.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  412.       createTracker(0.0);
  413. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`,dereference of pointer `this`.
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);
  423. >     verify(weakReferenceGenerator).getGenericWeakRef();
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:414: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  412.       createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:414: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  412.       createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:415: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:422: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  420.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   
  422. >     activeTracker.flushAllQueuedReferences(queue);
  423.       verify(weakReferenceGenerator).getGenericWeakRef();
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.genericWeakRef2`,dereference of pointer `this`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:424: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  422.       activeTracker.flushAllQueuedReferences(queue);
  423.       verify(weakReferenceGenerator).getGenericWeakRef();
  424. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:429: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  427.       verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();
  429. >     testObserver.assertNoValues();
  430.     }
  431.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:412: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  410.       Integer ref = 0;
  411.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  412. >     createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:449: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);
  449. >     verify(weakReferenceGenerator).getGenericWeakRef();
  450.   
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:453: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  452.   
  453. >     verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:455: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  453.       verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:458: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458. >     verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:459: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();
  459. >     verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:461: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:464: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:467: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467. >     verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:468: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();
  468. >     verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:470: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  471.     }
  472.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  453.       verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:456: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());
  456. >     ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:464: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:465: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465. >     uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  453.       verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:440: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  438.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439.       createTracker(1.0);
  440. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:458: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$127`.
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458. >     verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:441: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`,dereference of pointer `this`,dereference of pointer `this`.
  439.       createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:459: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$135`.
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();
  459. >     verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:461: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$149`.
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:464: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$165`.
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:467: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$192`.
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467. >     verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:468: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$202`.
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();
  468. >     verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:470: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$216`.
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  471.     }
  472.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:442: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`,dereference of pointer `this`,dereference of pointer `this`.
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:437: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  435.       Integer ref = 0;
  436.       Integer ref2 = 1;
  437. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  438.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439.       createTracker(1.0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`,dereference of pointer `this`.
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:445: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`,dereference of pointer `this`.
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);
  447.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:438: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  436.       Integer ref2 = 1;
  437.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  438. >     WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439.       createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446. >     when(random.nextDouble()).thenReturn(.5);
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$77`.
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);
  449. >     verify(weakReferenceGenerator).getGenericWeakRef();
  450.   
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:453: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$91`.
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  452.   
  453. >     verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:441: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  439.       createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:442: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:448: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  446.       when(random.nextDouble()).thenReturn(.5);
  447.   
  448. >     activeTracker.flushAllQueuedReferences(queue);
  449.       verify(weakReferenceGenerator).getGenericWeakRef();
  450.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.random`,dereference of pointer `this`.
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446. >     when(random.nextDouble()).thenReturn(.5);
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:451: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  449.       verify(weakReferenceGenerator).getGenericWeakRef();
  450.   
  451. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  452.   
  453.       verify(testRefGeneratorFactory).createGenerator();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:463: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   
  463. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:460: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  458.       verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();
  460. >     testObserver.assertNoValues();
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:469: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  467.       verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();
  469. >     testObserver.assertNoValues();
  470.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  471.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:445: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);
  447.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:439: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  437.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  438.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439. >     createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:457: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:466: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  464.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466. >     assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakType`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$103`.
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  478.         @NonNull final LeakType leakType) {
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$110`.
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$121`.
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$130`.
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$137`.
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:490: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$143`.
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);
  492.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:491: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$148`.
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491. >         .isEqualTo(lastCreatedReferenceTimeMs);
  492.     }
  493.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  478.         @NonNull final LeakType leakType) {
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`,dereference of pointer `this`.
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:482: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:482: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:479: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  477.         final long lastCreatedReferenceTimeMs,
  478.         @NonNull final LeakType leakType) {
  479. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:484: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:484: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$97`.
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:479: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  477.         final long lastCreatedReferenceTimeMs,
  478.         @NonNull final LeakType leakType) {
  479. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  478.         @NonNull final LeakType leakType) {
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:482: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:484: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:490: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);
  492.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$107`.
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  499.         @NonNull final List<String> leakType) {
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:509: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$113`.
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:509: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$118`.
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$125`.
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$138`.
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);
  513.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:512: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$143`.
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512. >         .isIn(lastCreatedReferenceTimeMs);
  513.     }
  514.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  499.         @NonNull final List<String> leakType) {
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`,dereference of pointer `this`.
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  498.         final List<Long> lastCreatedReferenceTimeMs,
  499.         @NonNull final List<String> leakType) {
  500. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:507: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$94`.
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  498.         final List<Long> lastCreatedReferenceTimeMs,
  499.         @NonNull final List<String> leakType) {
  500. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  499.         @NonNull final List<String> leakType) {
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:507: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:509: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);
  513.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:518: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  516.       ULeakConfiguration configuration =
  517.           new ULeakConfiguration(gcProbability, MINIMUM_CHECK_FREQUENCY_MS);
  518. >     activeTracker =
  519.           new ActiveTracker(
  520.               uLeakEventReporter,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:516: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  514.   
  515.     private void createTracker(double gcProbability) {
  516. >     ULeakConfiguration configuration =
  517.           new ULeakConfiguration(gcProbability, MINIMUM_CHECK_FREQUENCY_MS);
  518.       activeTracker =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:518: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  516.       ULeakConfiguration configuration =
  517.           new ULeakConfiguration(gcProbability, MINIMUM_CHECK_FREQUENCY_MS);
  518. >     activeTracker =
  519.           new ActiveTracker(
  520.               uLeakEventReporter,

Summary of the reports

  GRADUAL_DEREFERENCE: 696Found 696 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  21.   import org.junit.Test;
  22.   
  23. > public class ULeakConfigurationTest {
  24.   
  25.     @Test

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  30.           new ULeakConfiguration(
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  32.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34. >     assertThat(configuration.leakCheckFrequencyMs)
  35.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)
  35.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  27.     uleakConfiguration_whenConfigIsInitializedWithValidValues_ShouldReturnInitializedValues() {
  28.       double explicitGCProbability = .5d;
  29. >     ULeakConfiguration configuration =
  30.           new ULeakConfiguration(
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)
  35.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)
  35. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  36.     }
  37.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:32: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  30.           new ULeakConfiguration(
  31.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  32. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  33.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  34.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  26.   import org.mockito.MockitoAnnotations;
  27.   
  28. > public class TrackedReferencesTest {
  29.   
  30.     TrackedReferences references;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:40: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  38.     WeakReferenceGenerator weakReferenceGenerator;
  39.   
  40. >   private final long lifecycleEndTimeMs = 1234L;
  41.   
  42.     @SuppressWarnings("NullAway")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:31: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  29.   import java.lang.ref.WeakReference;
  30.   
  31. > public class LifecycleInstanceTrackerTest {
  32.   
  33.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.     WeakReferenceGenerator weakReferenceGenerator;
  41.   
  42. >   private final long timeCreatedMs = 1234L;
  43.     private final long timeCreated2Ms = 4321L;
  44.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:43: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  41.   
  42.     private final long timeCreatedMs = 1234L;
  43. >   private final long timeCreated2Ms = 4321L;
  44.   
  45.     @SuppressWarnings("NullAway")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:31: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  29.   import java.lang.ref.WeakReference;
  30.   
  31. > public class SingleInstanceTrackerTest {
  32.   
  33.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.     public void setup() {
  37.       MockitoAnnotations.initMocks(this);
  38. >     references = new TrackedReferences();
  39.     }
  40.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  36.     public void setup() {
  37.       MockitoAnnotations.initMocks(this);
  38. >     references = new TrackedReferences();
  39.     }
  40.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:43: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  41.       ULeakConfiguration configuration =
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43. >     assertThat(configuration.explicitGCProbability).isZero();
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:45: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  43.       assertThat(configuration.explicitGCProbability).isZero();
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45. >     assertThat(configuration.leakCheckFrequencyMs)
  46.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  47.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43.       assertThat(configuration.explicitGCProbability).isZero();
  44. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)
  46.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:41: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  39.     public void
  40.     uleakConfiguration_whenConfigIsInitializedWithBadProbability_ShouldReturnUpdatedValues() {
  41. >     ULeakConfiguration configuration =
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43.       assertThat(configuration.explicitGCProbability).isZero();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43.       assertThat(configuration.explicitGCProbability).isZero();
  44. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)
  46.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)
  46. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  47.     }
  48.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  41.       ULeakConfiguration configuration =
  42.           new ULeakConfiguration(-.1, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS + 10);
  43. >     assertThat(configuration.explicitGCProbability).isZero();
  44.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  45.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  41.     @Test
  42.     public void contains_whenMapIsEmpty_shouldReturnFalse() {
  43. >     assertThat(references.contains(Integer.class, SINGLETON)).isFalse();
  44.     }
  45.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  41.     @Test
  42.     public void contains_whenMapIsEmpty_shouldReturnFalse() {
  43. >     assertThat(references.contains(Integer.class, SINGLETON)).isFalse();
  44.     }
  45.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  47.     public void contains_whenParticularLeakTypeDoesNotExist_shouldReturnNull() {
  48.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  49. >     assertThat(references.contains(Integer.class, LIFECYCLE)).isFalse();
  50.     }
  51.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  47.     public void contains_whenParticularLeakTypeDoesNotExist_shouldReturnNull() {
  48.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  49. >     assertThat(references.contains(Integer.class, LIFECYCLE)).isFalse();
  50.     }
  51.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  46.     @Test
  47.     public void contains_whenParticularLeakTypeDoesNotExist_shouldReturnNull() {
  48. >     references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  49.       assertThat(references.contains(Integer.class, LIFECYCLE)).isFalse();
  50.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:50: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  48.     @Test
  49.     public void track_whenObjectIsTrackedButWeakReferenceReturnsNull_shouldNotBeAdded() {
  50. >     LifecycleInstanceTracker tracker =
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54. >     assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  52.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  53.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54. >     assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  54.       assertThat(tracker.requiresTracking()).isFalse();
  55.       // Nothing in allocations.
  56. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  50.       LifecycleInstanceTracker tracker =
  51.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  52. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  53.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  54.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:54: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  52.       ULeakConfiguration configuration =
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54. >     assertThat(configuration.explicitGCProbability).isZero();
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:56: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  54.       assertThat(configuration.explicitGCProbability).isZero();
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56. >     assertThat(configuration.leakCheckFrequencyMs)
  57.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54.       assertThat(configuration.explicitGCProbability).isZero();
  55. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)
  57.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  50.     public void
  51.     uleakConfiguration_whenConfigIsInitializedWithInvalidFrequency_ShouldReturnMinimumFrequency() {
  52. >     ULeakConfiguration configuration =
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54.       assertThat(configuration.explicitGCProbability).isZero();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54.       assertThat(configuration.explicitGCProbability).isZero();
  55. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)
  57.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)
  57. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  58.     }
  59.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  52.       ULeakConfiguration configuration =
  53.           new ULeakConfiguration(0.0d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  54. >     assertThat(configuration.explicitGCProbability).isZero();
  55.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  56.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  51.     @Test
  52.     public void getEventClass_whenObjectCreated_ShouldReturnSameClass() {
  53. >     SingleInstanceTracker tracker =
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56. >     assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }
  59.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  53.       SingleInstanceTracker tracker =
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55. >     assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  53.       SingleInstanceTracker tracker =
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55. >     assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  54.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56. >     assertThat(tracker.requiresTracking()).isFalse();
  57.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  55.       assertThat(tracker.getTrackedClass()).isEqualTo(Integer.class);
  56.       assertThat(tracker.requiresTracking()).isFalse();
  57. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0L);
  58.     }
  59.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  53.     public void contains_whenExists_shouldReturnTrue() {
  54.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  55. >     assertThat(references.contains(Integer.class, SINGLETON)).isTrue();
  56.     }
  57.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  53.     public void contains_whenExists_shouldReturnTrue() {
  54.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  55. >     assertThat(references.contains(Integer.class, SINGLETON)).isTrue();
  56.     }
  57.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  52.     @Test
  53.     public void contains_whenExists_shouldReturnTrue() {
  54. >     references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  55.       assertThat(references.contains(Integer.class, SINGLETON)).isTrue();
  56.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  78.     private ActiveTracker activeTracker;
  79.     private TestObserver<Throwable> testObserver;
  80. >   private long createdTimeMs1 = 1234L;
  81.     private long createdTimeMs2 = 4321L;
  82.     private long createdTimeMs3 = 4322L;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:81: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  79.     private TestObserver<Throwable> testObserver;
  80.     private long createdTimeMs1 = 1234L;
  81. >   private long createdTimeMs2 = 4321L;
  82.     private long createdTimeMs3 = 4322L;
  83.     private String className = "Integer";

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.     private long createdTimeMs1 = 1234L;
  81.     private long createdTimeMs2 = 4321L;
  82. >   private long createdTimeMs3 = 4322L;
  83.     private String className = "Integer";
  84.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:83: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  81.     private long createdTimeMs2 = 4321L;
  82.     private long createdTimeMs3 = 4322L;
  83. >   private String className = "Integer";
  84.   
  85.     @SuppressWarnings("NullAway")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:59: warning: GRADUAL_DEREFERENCE
  dereference of pointer `x0`.
  57.   import io.reactivex.subjects.PublishSubject;
  58.   
  59. > public class ActiveTrackerTest {
  60.   
  61.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  57.   import io.reactivex.subjects.PublishSubject;
  58.   
  59. > public class ActiveTrackerTest {
  60.   
  61.     @Mock

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62. >     assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }
  64.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62. >     assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }
  64.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`.
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62. >     assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }
  64.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  58.     @Test
  59.     public void getAllLeakTrackers_whenThereAreTwo_shouldReturnArrayListWithThoseTwoTrackers() {
  60. >     references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61.       references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62.       assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/TrackedReferencesTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.TrackedReferencesTest.references`,dereference of pointer `this`,dereference of pointer `this`.
  59.     public void getAllLeakTrackers_whenThereAreTwo_shouldReturnArrayListWithThoseTwoTrackers() {
  60.       references.getOrCreate(Integer.class, SINGLETON, "Integer", refGeneratorFactory);
  61. >     references.getOrCreate(String.class, LIFECYCLE, "String", refGeneratorFactory);
  62.       assertThat(references.getAllLeakTrackers().size()).isEqualTo(2);
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  59.     @Test
  60.     public void track_whenObjectIsTrackedButWeakReferenceTypesDontMatch_shouldNotBeAdded() {
  61. >     LifecycleInstanceTracker tracker =
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  63.       when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }
  69.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  61.       LifecycleInstanceTracker tracker =
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63. >     when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  61.       LifecycleInstanceTracker tracker =
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63. >     when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  63.       when(weakIntReference.get()).thenReturn(0);
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  64.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  68.     }
  69.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  62.           new LifecycleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  63.       when(weakIntReference.get()).thenReturn(0);
  64. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  60.     @Test
  61.     public void track_whenObjectIsTrackedButWeakReferenceReturnsNull_ShouldNotBeAdded() {
  62. >     SingleInstanceTracker tracker =
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  69.     }
  70.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  64.       tracker.track(weakIntReference, timeCreatedMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66. >     assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  66.       assertThat(tracker.requiresTracking()).isFalse();
  67.       // Nothing in allocations.
  68. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  69.     }
  70.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  62.       SingleInstanceTracker tracker =
  63.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  64. >     tracker.track(weakIntReference, timeCreatedMs);
  65.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  66.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:67: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  65.           new ULeakConfiguration(
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:69: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  67.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69. >     assertThat(configuration.leakCheckFrequencyMs)
  70.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  71.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)
  70.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  62.     uleakConfiguration_whenConfigIsInitializedWithInvalidFrequencybutValidP_ShouldReturnMinimumFrequency() {
  63.       double explicitGCProbability = .5d;
  64. >     ULeakConfiguration configuration =
  65.           new ULeakConfiguration(
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67.       assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68. >     assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)
  70.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)
  70. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  71.     }
  72.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  65.           new ULeakConfiguration(
  66.               explicitGCProbability, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  67. >     assertThat(configuration.explicitGCProbability).isEqualTo(explicitGCProbability);
  68.       assertThat(configuration.shouldUseExplicitGc()).isTrue();
  69.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:72: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  70.     @Test
  71.     public void track_whenObjectIsTracked_shouldBeAddedAndSizeShouldBeOne() {
  72. >     LifecycleInstanceTracker tracker =
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  74.       when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77. >     assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }
  80.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  72.       LifecycleInstanceTracker tracker =
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74. >     when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  72.       LifecycleInstanceTracker tracker =
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74. >     when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  74.       when(weakIntReference.get()).thenReturn(0);
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  75.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77. >     assertThat(tracker.requiresTracking()).isTrue();
  78.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();
  78. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  79.     }
  80.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  73.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  74.       when(weakIntReference.get()).thenReturn(0);
  75. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  76.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  77.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  71.     @Test
  72.     public void track_whenObjectIsTrackedButWeakReferenceTypesDontMatch_ShouldNotBeAdded() {
  73. >     SingleInstanceTracker tracker =
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  75.       when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78. >     assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  73.       SingleInstanceTracker tracker =
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75. >     when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  73.       SingleInstanceTracker tracker =
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75. >     when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  75.       when(weakIntReference.get()).thenReturn(0);
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  76.       tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78. >     assertThat(tracker.requiresTracking()).isFalse();
  79.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();
  79. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(0);
  80.     }
  81.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  74.           new SingleInstanceTracker(Object.class, weakReferenceGenerator, "Object");
  75.       when(weakIntReference.get()).thenReturn(0);
  76. >     tracker.track(weakIntReference, timeCreatedMs);
  77.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  78.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:78: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  76.       ULeakConfiguration configuration =
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78. >     assertThat(configuration.explicitGCProbability).isZero();
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `configuration`.
  78.       assertThat(configuration.explicitGCProbability).isZero();
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80. >     assertThat(configuration.leakCheckFrequencyMs)
  81.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `configuration`.
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78.       assertThat(configuration.explicitGCProbability).isZero();
  79. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)
  81.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  74.     public void
  75.     uleakConfiguration_whenConfigIsInitializedWithInvalidInputs_ShouldReturnDefaultValues() {
  76. >     ULeakConfiguration configuration =
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78.       assertThat(configuration.explicitGCProbability).isZero();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78.       assertThat(configuration.explicitGCProbability).isZero();
  79. >     assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)
  81.           .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:81: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)
  81. >         .isEqualTo(ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS);
  82.     }
  83.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ULeakConfigurationTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  76.       ULeakConfiguration configuration =
  77.           new ULeakConfiguration(-.1d, ULeakConfiguration.MINIMUM_CHECK_FREQUENCY_MS - 100);
  78. >     assertThat(configuration.explicitGCProbability).isZero();
  79.       assertThat(configuration.shouldUseExplicitGc()).isFalse();
  80.       assertThat(configuration.leakCheckFrequencyMs)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  81.     @Test
  82.     public void reset_when2ObjectsAreTrackedButResetIsCalled_shouldResetEverything() {
  83. >     LifecycleInstanceTracker tracker =
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:87: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  85.       when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88. >     assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89. >     assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$61`.
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92.       assertThat(tracker.requiresTracking()).isFalse();
  93.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92. >     assertThat(tracker.requiresTracking()).isFalse();
  93.     }
  94.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  83.       LifecycleInstanceTracker tracker =
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85. >     when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  83.       LifecycleInstanceTracker tracker =
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85. >     when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:87: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  85.       when(weakIntReference.get()).thenReturn(0);
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  86.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88. >     assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89. >     assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  88.       assertThat(tracker.requiresTracking()).isTrue();
  89.       assertThat(tracker.hasViolation()).isFalse();
  90. >     tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  89.       assertThat(tracker.hasViolation()).isFalse();
  90.       tracker.clearTrackingData();
  91. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92.       assertThat(tracker.requiresTracking()).isFalse();
  93.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  90.       tracker.clearTrackingData();
  91.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  92. >     assertThat(tracker.requiresTracking()).isFalse();
  93.     }
  94.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  84.           new LifecycleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  85.       when(weakIntReference.get()).thenReturn(0);
  86. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  87.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  88.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  82.     @Test
  83.     public void track_whenObjectIsTracked_ShouldBeAddedAndSizeShouldBeOne() {
  84. >     SingleInstanceTracker tracker =
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  86.       when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89. >     assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }
  92.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  84.       SingleInstanceTracker tracker =
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86. >     when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:86: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  84.       SingleInstanceTracker tracker =
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86. >     when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  86.       when(weakIntReference.get()).thenReturn(0);
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  87.       tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89. >     assertThat(tracker.requiresTracking()).isFalse();
  90.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();
  90. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreatedMs);
  91.     }
  92.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:87: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  85.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  86.       when(weakIntReference.get()).thenReturn(0);
  87. >     tracker.track(weakIntReference, timeCreatedMs);
  88.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  89.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  87.     public void setup() throws Exception {
  88.       MockitoAnnotations.initMocks(this);
  89. >     scheduler = new TestScheduler();
  90.       RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:96: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  94.         }
  95.       });
  96. >     errorRelay = PublishSubject.create();
  97.       testObserver = TestObserver.create();
  98.       errorRelay.subscribe(testObserver);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  95.       });
  96.       errorRelay = PublishSubject.create();
  97. >     testObserver = TestObserver.create();
  98.       errorRelay.subscribe(testObserver);
  99.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  87.     public void setup() throws Exception {
  88.       MockitoAnnotations.initMocks(this);
  89. >     scheduler = new TestScheduler();
  90.       RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.errorRelay`,dereference of pointer `this`,dereference of pointer `this`.
  96.       errorRelay = PublishSubject.create();
  97.       testObserver = TestObserver.create();
  98. >     errorRelay.subscribe(testObserver);
  99.     }
  100.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  88.       MockitoAnnotations.initMocks(this);
  89.       scheduler = new TestScheduler();
  90. >     RxJavaPlugins.setIoSchedulerHandler(new Function<Scheduler, Scheduler>() {
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:93: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.ActiveTrackerTest$1.this$0`,dereference of pointer `this`.
  91.         @Override
  92.         public Scheduler apply(Scheduler scheduler) throws Exception {
  93. >         return ActiveTrackerTest.this.scheduler;
  94.         }
  95.       });

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  94.     public void
  95.     hasViolation_when2ObjectsAreTrackedButGenericWeakRefStillHoldsRef_ShouldNotCauseViolation() {
  96. >     SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  96.       SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98. >     when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);
  99. >     when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  98.       when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100. >     when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  98.       when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100. >     when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  94.     public void
  95.     hasViolation_when2ObjectsAreTrackedButGenericWeakRefStillHoldsRef_ShouldNotCauseViolation() {
  96. >     SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$68`.
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference2`,dereference of pointer `this`.
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98.       when(weakIntReference.get()).thenReturn(0);
  99. >     when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference3`,dereference of pointer `this`.
  98.       when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100. >     when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  96.       SingleInstanceTracker tracker =
  97.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  98. >     when(weakIntReference.get()).thenReturn(0);
  99.       when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  103.       tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  99.       when(weakIntReference2.get()).thenReturn(1);
  100.       when(weakIntReference3.get()).thenReturn(new Object());
  101. >     tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103.       tracker.track(weakIntReference2, timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:103: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  101.       tracker.track(weakIntReference, timeCreatedMs);
  102.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  103. >     tracker.track(weakIntReference2, timeCreated2Ms);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  105.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  97.     public void
  98.     hasViolation_whenObjectIsTrackedButGenericWekRefStillHoldsRef_shouldNotCauseViolation() {
  99. >     LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  99.       LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101. >     when(weakIntReference.get()).thenReturn(0);
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);
  102. >     when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);
  102. >     when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  97.     public void
  98.     hasViolation_whenObjectIsTrackedButGenericWekRefStillHoldsRef_shouldNotCauseViolation() {
  99. >     LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$72`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  99.       LifecycleInstanceTracker tracker =
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101. >     when(weakIntReference.get()).thenReturn(0);
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakObjectReference`,dereference of pointer `this`.
  100.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  101.       when(weakIntReference.get()).thenReturn(0);
  102. >     when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  103.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105. >     assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106. >     assertThat(tracker.hasViolation()).isFalse();
  107.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  105.       assertThat(tracker.requiresTracking()).isTrue();
  106.       assertThat(tracker.hasViolation()).isFalse();
  107. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  108.     }
  109.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:103: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  101.       when(weakIntReference.get()).thenReturn(0);
  102.       when(weakObjectReference.get()).thenReturn(new Object());
  103. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  104.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  105.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();
  113. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  112.       scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114. >     verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115. >     verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();
  117.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116. >     verify(genericWeakRef1).get();
  117.     }
  118.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  107.     public void flushQueue_whenWeakReferenceReturnsNull_shouldDoNothing() {
  108.       createTracker(0.0);
  109. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();
  113. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  112.       scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114. >     verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  108.       createTracker(0.0);
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();
  115. >     verify(random, never()).nextDouble();
  116.       verify(genericWeakRef1).get();
  117.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$61`.
  114.       verify(gcCallWrapper, never()).callGC();
  115.       verify(random, never()).nextDouble();
  116. >     verify(genericWeakRef1).get();
  117.     }
  118.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  108.       createTracker(0.0);
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111. >     activeTracker.flushAllQueuedReferences(queue);
  112.       scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));
  111.       activeTracker.flushAllQueuedReferences(queue);
  112. >     scheduler.triggerActions();
  113.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  114.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  106.     @Test
  107.     public void flushQueue_whenWeakReferenceReturnsNull_shouldDoNothing() {
  108. >     createTracker(0.0);
  109.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  110.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef1, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  110.     @Test
  111.     public void hasViolation_when2ObjectsAreTrackedButGenericWeakRefIsGced_ShouldCauseViolation() {
  112. >     SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  112.       SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114. >     when(weakIntReference.get()).thenReturn(0);
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);
  115. >     when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  110.     @Test
  111.     public void hasViolation_when2ObjectsAreTrackedButGenericWeakRefIsGced_ShouldCauseViolation() {
  112. >     SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$68`.
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120. >     assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$78`.
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121. >     assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$86`.
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122. >     assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$96`.
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }
  125.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference2`,dereference of pointer `this`.
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114.       when(weakIntReference.get()).thenReturn(0);
  115. >     when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  112.       SingleInstanceTracker tracker =
  113.           new SingleInstanceTracker(Integer.class, new TestWeakRefGenerator(), "Integer");
  114. >     when(weakIntReference.get()).thenReturn(0);
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  115.       when(weakIntReference2.get()).thenReturn(1);
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  118.       tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120. >     assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121. >     assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  120.       assertThat(tracker.requiresTracking()).isTrue();
  121.       assertThat(tracker.hasViolation()).isTrue();
  122. >     assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  121.       assertThat(tracker.hasViolation()).isTrue();
  122.       assertThat(tracker.getTrackerName()).isEqualTo("Integer");
  123. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(timeCreated2Ms);
  124.     }
  125.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  114.       when(weakIntReference.get()).thenReturn(0);
  115.       when(weakIntReference2.get()).thenReturn(1);
  116. >     tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       tracker.track(weakIntReference2, timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  116.       tracker.track(weakIntReference, timeCreatedMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118. >     tracker.track(weakIntReference2, timeCreated2Ms);
  119.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  120.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  111.     @Test
  112.     public void hasViolation_whenObjectIsTrackedAndGenericWekRefSIsGCed_shouldCauseViolation() {
  113. >     LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  113.       LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115. >     when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  115.       when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  111.     @Test
  112.     public void hasViolation_whenObjectIsTrackedAndGenericWekRefSIsGCed_shouldCauseViolation() {
  113. >     LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118. >     assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119. >     assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }
  122.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  113.       LifecycleInstanceTracker tracker =
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115. >     when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  115.       when(weakIntReference.get()).thenReturn(0);
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  116.       tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118. >     assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119. >     assertThat(tracker.hasViolation()).isTrue();
  120.       assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  118.       assertThat(tracker.requiresTracking()).isTrue();
  119.       assertThat(tracker.hasViolation()).isTrue();
  120. >     assertThat(tracker.getLatestReferenceRegistrationTimeMs()).isEqualTo(lifecycleEndTimeMs);
  121.     }
  122.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  114.           new LifecycleInstanceTracker(Integer.class, new TestWeakRedGenerator(), "Integer");
  115.       when(weakIntReference.get()).thenReturn(0);
  116. >     tracker.track(weakIntReference, lifecycleEndTimeMs);
  117.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  118.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:129: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  127.       activeTracker.flushAllQueuedReferences(queue);
  128.       scheduler.triggerActions();
  129. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  128.       scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130. >     verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();
  132.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131. >     verify(random, never()).nextDouble();
  132.     }
  133.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  120.     public void flushQueue_whenWeakReferenceReturnsObject_shouldStillDoNothing() {
  121.       Integer ref = 0;
  122. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  123.       createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:129: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  127.       activeTracker.flushAllQueuedReferences(queue);
  128.       scheduler.triggerActions();
  129. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  128.       scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130. >     verify(gcCallWrapper, never()).callGC();
  131.       verify(random, never()).nextDouble();
  132.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();
  131. >     verify(random, never()).nextDouble();
  132.     }
  133.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  122.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  123.       createTracker(0.0);
  124. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  123.       createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   
  127.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  123.       createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   
  127.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:127: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  125.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  126.   
  127. >     activeTracker.flushAllQueuedReferences(queue);
  128.       scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  126.   
  127.       activeTracker.flushAllQueuedReferences(queue);
  128. >     scheduler.triggerActions();
  129.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  130.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  121.       Integer ref = 0;
  122.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  123. >     createTracker(0.0);
  124.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  125.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  121.     }
  122.   
  123. >   private class TestWeakRedGenerator extends WeakReferenceGenerator {
  124.   
  125.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  121.     }
  122.   
  123. >   private class TestWeakRedGenerator extends WeakReferenceGenerator {
  124.   
  125.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/LifecycleInstanceTrackerTest.java:128: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.LifecycleInstanceTrackerTest$TestWeakRedGenerator.this$0`,dereference of pointer `this`.
  126.       @Override
  127.       public synchronized WeakReference<Object> getGenericWeakRef() {
  128. >       return weakObjectReference;
  129.       }
  130.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  126.     @Test
  127.     public void reset_when2ObjectsAreTrackedButResetIsCalled_ShouldResetEverything() {
  128. >     SingleInstanceTracker tracker =
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130.       when(weakIntReference.get()).thenReturn(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140. >     assertThat(tracker.requiresTracking()).isFalse();
  141.     }
  142.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130.       when(weakIntReference.get()).thenReturn(0);
  131. >     when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$54`.
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136. >     assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$76`.
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137. >     assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$89`.
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140.       assertThat(tracker.requiresTracking()).isFalse();
  141.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  128.       SingleInstanceTracker tracker =
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130. >     when(weakIntReference.get()).thenReturn(0);
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference2`,dereference of pointer `this`.
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130.       when(weakIntReference.get()).thenReturn(0);
  131. >     when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.SingleInstanceTrackerTest.weakIntReference`,dereference of pointer `this`.
  128.       SingleInstanceTracker tracker =
  129.           new SingleInstanceTracker(Integer.class, weakReferenceGenerator, "Integer");
  130. >     when(weakIntReference.get()).thenReturn(0);
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  131.       when(weakIntReference2.get()).thenReturn(1);
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  134.       tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136. >     assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137. >     assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  136.       assertThat(tracker.requiresTracking()).isTrue();
  137.       assertThat(tracker.hasViolation()).isFalse();
  138. >     tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140.       assertThat(tracker.requiresTracking()).isFalse();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  137.       assertThat(tracker.hasViolation()).isFalse();
  138.       tracker.clearTrackingData();
  139. >     assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140.       assertThat(tracker.requiresTracking()).isFalse();
  141.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`.
  138.       tracker.clearTrackingData();
  139.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(0);
  140. >     assertThat(tracker.requiresTracking()).isFalse();
  141.     }
  142.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:132: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  130.       when(weakIntReference.get()).thenReturn(0);
  131.       when(weakIntReference2.get()).thenReturn(1);
  132. >     tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134.       tracker.track(weakIntReference2, timeCreated2Ms);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `tracker`,dereference of pointer `this`.
  132.       tracker.track(weakIntReference, timeCreatedMs);
  133.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(1);
  134. >     tracker.track(weakIntReference2, timeCreated2Ms);
  135.       assertThat(tracker.getCurrentNumInMemoryInstances()).isEqualTo(2);
  136.       assertThat(tracker.requiresTracking()).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:149: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);
  149. >     verify(weakReferenceGenerator).getGenericWeakRef();
  150.   
  151.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:154: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:157: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157. >     verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:158: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();
  158. >     verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();
  160.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:155: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154.       verify(uLeakEventReporter).reportEvent(captor.capture());
  155. >     ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:157: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$108`.
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157. >     verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:141: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  139.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140.       createTracker(0.0);
  141. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:158: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$118`.
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();
  158. >     verify(random, never()).nextDouble();
  159.       testObserver.assertNoValues();
  160.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`,dereference of pointer `this`,dereference of pointer `this`.
  140.       createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`,dereference of pointer `this`,dereference of pointer `this`.
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  136.       Integer ref = 0;
  137.       Integer ref2 = 1;
  138. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  139.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140.       createTracker(0.0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`,dereference of pointer `this`.
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:146: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`,dereference of pointer `this`.
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  137.       Integer ref2 = 1;
  138.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  139. >     WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140.       createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:149: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);
  149. >     verify(weakReferenceGenerator).getGenericWeakRef();
  150.   
  151.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:154: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  154. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  140.       createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  143. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:148: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  146.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   
  148. >     activeTracker.flushAllQueuedReferences(queue);
  149.       verify(weakReferenceGenerator).getGenericWeakRef();
  150.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:151: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  149.       verify(weakReferenceGenerator).getGenericWeakRef();
  150.   
  151. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  152.   
  153.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  157.       verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();
  159. >     testObserver.assertNoValues();
  160.     }
  161.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  143.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  144.   
  145. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:146: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  144.   
  145.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  146. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  147.   
  148.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  138.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  139.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  140. >     createTracker(0.0);
  141.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  142.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  154.       verify(uLeakEventReporter).reportEvent(captor.capture());
  155.       ULeakEvent uLeakEvent = captor.getValue();
  156. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  157.       verify(gcCallWrapper, never()).callGC();
  158.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  141.     }
  142.   
  143. >   private class TestWeakRefGenerator extends WeakReferenceGenerator {
  144.   
  145.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  141.     }
  142.   
  143. >   private class TestWeakRefGenerator extends WeakReferenceGenerator {
  144.   
  145.       @NonNull

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/SingleInstanceTrackerTest.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->com.uber.uleak.SingleInstanceTrackerTest$TestWeakRefGenerator.this$0`,dereference of pointer `this`.
  146.       @Override
  147.       public synchronized WeakReference<Object> getGenericWeakRef() {
  148. >       return weakIntReference3;
  149.       }
  150.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:181: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);
  181. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   
  183.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:186: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:189: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189. >     verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:190: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();
  190. >     verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();
  192.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186.       verify(uLeakEventReporter).reportEvent(captor.capture());
  187. >     ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$122`.
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189. >     verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();
  190. >     verify(random, never()).nextDouble();
  191.       testObserver.assertNoValues();
  192.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:171: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170.       createTracker(0.0);
  171. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`,dereference of pointer `this`,dereference of pointer `this`.
  170.       createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`,dereference of pointer `this`,dereference of pointer `this`.
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`,dereference of pointer `this`.
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175. >     queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:167: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  165.       Integer ref2 = 1;
  166.       Integer ref3 = 2;
  167. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  168.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`,dereference of pointer `this`.
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:178: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`,dereference of pointer `this`.
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:168: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  166.       Integer ref3 = 2;
  167.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  168. >     WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170.       createTracker(0.0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);
  181. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   
  183.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$95`.
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  186. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:169: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  167.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  168.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169. >     WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170.       createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  170.       createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  173. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  173.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  174.       long createdTimeMs3 = 9999L;
  175. >     queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  178.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   
  180. >     activeTracker.flushAllQueuedReferences(queue);
  181.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  181.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  182.   
  183. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  184.   
  185.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:191: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  189.       verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();
  191. >     testObserver.assertNoValues();
  192.     }
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  175.       queue.add(new ULeak.QueuedLeakEvent(weakReference3, className, createdTimeMs3));
  176.   
  177. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:178: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  176.   
  177.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  178. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  179.   
  180.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:170: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  168.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  169.       WeakReference<Object> weakReference3 = new WeakReference<>((Object) ref3);
  170. >     createTracker(0.0);
  171.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  172.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:188: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  186.       verify(uLeakEventReporter).reportEvent(captor.capture());
  187.       ULeakEvent uLeakEvent = captor.getValue();
  188. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 3, createdTimeMs3, SINGLETON);
  189.       verify(gcCallWrapper, never()).callGC();
  190.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:209: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  207.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   
  209. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:210: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  208.   
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210. >     verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:211: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211. >     verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:212: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();
  214.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:218: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  216.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  217.   
  218. >     verify(weakReferenceGenerator).getGenericWeakRef();
  219.   
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:222: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:223: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222.       verify(uLeakEventReporter).reportEvent(captor.capture());
  223. >     ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  225.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:218: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  216.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  217.   
  218. >     verify(weakReferenceGenerator).getGenericWeakRef();
  219.   
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$131`.
  220.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:198: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  196.     registerNewReference_whenWeak2SingletonWeakReferencesSameClass_shouldStartTrackingAndCauseReport() {
  197.       Integer ref = 0;
  198. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  199.       createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`,dereference of pointer `this`.
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`,dereference of pointer `this`.
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   
  206.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  207.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   
  209. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:200: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  198.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  199.       createTracker(0.0);
  200. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:210: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  208.   
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210. >     verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  210.       verify(gcCallWrapper, never()).callGC();
  211. >     verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  199.       createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:212: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  210.       verify(gcCallWrapper, never()).callGC();
  211.       verify(random, never()).nextDouble();
  212. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213.       testObserver.assertNoValues();
  214.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  199.       createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  204.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   
  206. >     activeTracker.flushAllQueuedReferences(queue);
  207.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:216: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  214.   
  215.       Integer ref2 = 1;
  216. >     activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  217.   
  218.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:207: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  205.   
  206.       activeTracker.flushAllQueuedReferences(queue);
  207. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  208.   
  209.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  218.       verify(weakReferenceGenerator).getGenericWeakRef();
  219.   
  220. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  221.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  222.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:213: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  211.       verify(random, never()).nextDouble();
  212.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  213. >     testObserver.assertNoValues();
  214.   
  215.       Integer ref2 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  202.   
  203. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  202.   
  203.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  204. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  205.   
  206.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:199: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  197.       Integer ref = 0;
  198.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  199. >     createTracker(0.0);
  200.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  201.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:224: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  222.       verify(uLeakEventReporter).reportEvent(captor.capture());
  223.       ULeakEvent uLeakEvent = captor.getValue();
  224. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  225.     }
  226.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:243: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  241.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   
  243. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:244: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  242.   
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244. >     verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:245: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245. >     verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:246: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();
  248.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:252: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  250.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  251.   
  252. >     verify(weakReferenceGenerator).getGenericWeakRef();
  253.   
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:256: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:259: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259. >     verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();
  261.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:260: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();
  260. >     verify(random).nextDouble();
  261.       testObserver.assertNoValues();
  262.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:264: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:267: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267. >     verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:268: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();
  268. >     verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:272: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  270.       // Check to make sure nothing else happens.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:273: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273. >     verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:274: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274. >     verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();
  276.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:256: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:257: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256.       verify(uLeakEventReporter).reportEvent(captor.capture());
  257. >     ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:264: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:265: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265. >     uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:246: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$103`.
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();
  248.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$129`.
  250.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  251.   
  252. >     verify(weakReferenceGenerator).getGenericWeakRef();
  253.   
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:256: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$144`.
  254.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:259: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$171`.
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259. >     verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();
  261.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:260: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$179`.
  258.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();
  260. >     verify(random).nextDouble();
  261.       testObserver.assertNoValues();
  262.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:264: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$199`.
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:231: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  229.     registerNewReference_whenWeak2SingletonWeakReferencesSameClassExplicitGC_shouldStartTrackingAndCauseReport() {
  230.       Integer ref = 0;
  231. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  232.       createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:267: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$226`.
  265.       uLeakEvent = captor.getValue();
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267. >     verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:268: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$236`.
  266.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();
  268. >     verify(random, times(2)).nextDouble();
  269.       testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:236: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`,dereference of pointer `this`.
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:272: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$256`.
  270.       // Check to make sure nothing else happens.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:273: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$267`.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273. >     verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:274: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$277`.
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();
  274. >     verify(random, times(2)).nextDouble();
  275.       testObserver.assertNoValues();
  276.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`,dereference of pointer `this`.
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);
  239.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:238: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238. >     when(random.nextDouble()).thenReturn(.5);
  239.   
  240.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:233: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  231.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  232.       createTracker(1.0);
  233. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:243: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  241.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   
  243. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:244: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$83`.
  242.   
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244. >     verify(gcCallWrapper, never()).callGC();
  245.       verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  232.       createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:245: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$93`.
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  244.       verify(gcCallWrapper, never()).callGC();
  245. >     verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  232.       createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:240: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  238.       when(random.nextDouble()).thenReturn(.5);
  239.   
  240. >     activeTracker.flushAllQueuedReferences(queue);
  241.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:250: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  248.   
  249.       Integer ref2 = 1;
  250. >     activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  251.   
  252.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:238: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.random`,dereference of pointer `this`.
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238. >     when(random.nextDouble()).thenReturn(.5);
  239.   
  240.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:241: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  239.   
  240.       activeTracker.flushAllQueuedReferences(queue);
  241. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  242.   
  243.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  252.       verify(weakReferenceGenerator).getGenericWeakRef();
  253.   
  254. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  255.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  256.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:263: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  261.       testObserver.assertNoValues();
  262.   
  263. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  264.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:271: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  269.       testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.
  271. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  272.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  273.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:247: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  245.       verify(random, never()).nextDouble();
  246.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  247. >     testObserver.assertNoValues();
  248.   
  249.       Integer ref2 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:261: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  259.       verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();
  261. >     testObserver.assertNoValues();
  262.   
  263.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  267.       verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();
  269. >     testObserver.assertNoValues();
  270.       // Check to make sure nothing else happens.
  271.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:275: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  273.       verify(gcCallWrapper).callGC();
  274.       verify(random, times(2)).nextDouble();
  275. >     testObserver.assertNoValues();
  276.     }
  277.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:236: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  235.   
  236. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  235.   
  236.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  237. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  238.       when(random.nextDouble()).thenReturn(.5);
  239.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:232: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  230.       Integer ref = 0;
  231.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  232. >     createTracker(1.0);
  233.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  234.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  256.       verify(uLeakEventReporter).reportEvent(captor.capture());
  257.       ULeakEvent uLeakEvent = captor.getValue();
  258. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  259.       verify(gcCallWrapper).callGC();
  260.       verify(random).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:266: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  264.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  265.       uLeakEvent = captor.getValue();
  266. >     assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  267.       verify(gcCallWrapper).callGC();
  268.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:285: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:286: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286. >     verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:287: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287. >     verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:288: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();
  290.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:294: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  292.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  293.   
  294. >     verify(weakReferenceGenerator).getGenericWeakRef();
  295.   
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:298: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:298: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:299: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298.       verify(uLeakEventReporter).reportEvent(captor.capture());
  299. >     ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  301.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:298: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$103`.
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:283: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`,dereference of pointer `this`.
  281.   
  282.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:286: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286. >     verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  286.       verify(gcCallWrapper, never()).callGC();
  287. >     verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:288: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  286.       verify(gcCallWrapper, never()).callGC();
  287.       verify(random, never()).nextDouble();
  288. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289.       testObserver.assertNoValues();
  290.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`,dereference of pointer `this`.
  280.       createTracker(0.0);
  281.   
  282. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$88`.
  292.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  293.   
  294. >     verify(weakReferenceGenerator).getGenericWeakRef();
  295.   
  296.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  290.   
  291.       Integer ref1 = 1;
  292. >     activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  293.   
  294.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:296: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  294.       verify(weakReferenceGenerator).getGenericWeakRef();
  295.   
  296. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  297.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  298.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  287.       verify(random, never()).nextDouble();
  288.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  289. >     testObserver.assertNoValues();
  290.   
  291.       Integer ref1 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  280.       createTracker(0.0);
  281.   
  282. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:283: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  281.   
  282.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  283. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  284.   
  285.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:280: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  278.     @Test
  279.     public void registerNewReference_whenALifecycleWeakReference_shouldStartTrackingAndCauseReport() {
  280. >     createTracker(0.0);
  281.   
  282.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  298.       verify(uLeakEventReporter).reportEvent(captor.capture());
  299.       ULeakEvent uLeakEvent = captor.getValue();
  300. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  301.     }
  302.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:312: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   
  312. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:313: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313. >     verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:314: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314. >     verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:315: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();
  317.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:321: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  319.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  320.   
  321. >     verify(weakReferenceGenerator).getGenericWeakRef();
  322.   
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:325: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:328: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328. >     verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();
  330.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:329: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();
  329. >     verify(random).nextDouble();
  330.       testObserver.assertNoValues();
  331.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:333: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:336: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336. >     verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:337: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();
  337. >     verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:341: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  339.       // Check to make sure nothing else happens.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:342: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342. >     verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:343: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343. >     verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();
  345.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:326: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325.       verify(uLeakEventReporter).reportEvent(captor.capture());
  326. >     ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:333: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:334: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334. >     uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:321: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  319.       activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  320.   
  321. >     verify(weakReferenceGenerator).getGenericWeakRef();
  322.   
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  323.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:328: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$143`.
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328. >     verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();
  330.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:329: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$151`.
  327.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();
  329. >     verify(random).nextDouble();
  330.       testObserver.assertNoValues();
  331.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:333: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$171`.
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`,dereference of pointer `this`.
  307.   
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:336: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$198`.
  334.       uLeakEvent = captor.getValue();
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336. >     verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:337: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$208`.
  335.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();
  337. >     verify(random, times(2)).nextDouble();
  338.       testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:341: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$228`.
  339.       // Check to make sure nothing else happens.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341. >     verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:342: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$239`.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342. >     verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:343: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$249`.
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();
  343. >     verify(random, times(2)).nextDouble();
  344.       testObserver.assertNoValues();
  345.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:310: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310. >     when(random.nextDouble()).thenReturn(.5);
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:312: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   
  312. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:313: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313. >     verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:314: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$65`.
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  313.       verify(gcCallWrapper, never()).callGC();
  314. >     verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:315: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$75`.
  313.       verify(gcCallWrapper, never()).callGC();
  314.       verify(random, never()).nextDouble();
  315. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316.       testObserver.assertNoValues();
  317.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:308: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`,dereference of pointer `this`.
  306.       createTracker(1.0);
  307.   
  308. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  317.   
  318.       Integer ref1 = 1;
  319. >     activeTracker.registerNewReference(ref1, className, createdTimeMs2, LIFECYCLE);
  320.   
  321.       verify(weakReferenceGenerator).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:310: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.random`,dereference of pointer `this`.
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310. >     when(random.nextDouble()).thenReturn(.5);
  311.   
  312.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:323: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  321.       verify(weakReferenceGenerator).getGenericWeakRef();
  322.   
  323. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  324.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  325.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:332: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  330.       testObserver.assertNoValues();
  331.   
  332. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  333.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:340: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  338.       testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.
  340. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  341.       verify(uLeakEventReporter, times(2)).reportEvent(any(ULeakEvent.class));
  342.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  314.       verify(random, never()).nextDouble();
  315.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  316. >     testObserver.assertNoValues();
  317.   
  318.       Integer ref1 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:330: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  328.       verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();
  330. >     testObserver.assertNoValues();
  331.   
  332.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:338: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  336.       verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();
  338. >     testObserver.assertNoValues();
  339.       // Check to make sure nothing else happens.
  340.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:344: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  342.       verify(gcCallWrapper).callGC();
  343.       verify(random, times(2)).nextDouble();
  344. >     testObserver.assertNoValues();
  345.     }
  346.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:308: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  306.       createTracker(1.0);
  307.   
  308. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  307.   
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  309. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  310.       when(random.nextDouble()).thenReturn(.5);
  311.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:306: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  304.     public void
  305.     registerNewReference_whenALifecycleWeakReferenceExplicitGC_shouldStartTrackingAndCauseReport() {
  306. >     createTracker(1.0);
  307.   
  308.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:327: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  325.       verify(uLeakEventReporter).reportEvent(captor.capture());
  326.       ULeakEvent uLeakEvent = captor.getValue();
  327. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  328.       verify(gcCallWrapper).callGC();
  329.       verify(random).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:335: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  333.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  334.       uLeakEvent = captor.getValue();
  335. >     assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 1, createdTimeMs2, LIFECYCLE);
  336.       verify(gcCallWrapper).callGC();
  337.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:362: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  360.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   
  362. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:363: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  361.   
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363. >     verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:364: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364. >     verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:365: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();
  367.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:373: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  371.       activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);
  372.   
  373. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  374.   
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:377: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:380: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380. >     creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:381: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);
  381. >     creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378. >     assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:402: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  400.   
  401.       assertMultipleReporterEvents(
  402. >         captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404.           captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:404: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404. >         captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  405.     }
  406.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:380: warning: GRADUAL_DEREFERENCE
  method call on pointer `creationTimes`.
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380. >     creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:381: warning: GRADUAL_DEREFERENCE
  method call on pointer `creationTimes`.
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);
  381. >     creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:390: warning: GRADUAL_DEREFERENCE
  method call on pointer `ensureDifferentViolations`.
  388.   
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390. >     ensureDifferentViolations.add(
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:392: warning: GRADUAL_DEREFERENCE
  method call on pointer `ensureDifferentViolations`.
  390.       ensureDifferentViolations.add(
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392. >     ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:383: warning: GRADUAL_DEREFERENCE
  method call on pointer `instances`.
  381.       creationTimes.add(createdTimeMs3);
  382.       List<Integer> instances = new ArrayList<>(2);
  383. >     instances.add(1);
  384.       instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:384: warning: GRADUAL_DEREFERENCE
  method call on pointer `instances`.
  382.       List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);
  384. >     instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTypes`.
  384.       instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);
  386. >     leakTypes.add(SINGLETON.name());
  387.       leakTypes.add(LIFECYCLE.name());
  388.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakTypes`.
  385.       List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());
  387. >     leakTypes.add(LIFECYCLE.name());
  388.   
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  371.       activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);
  372.   
  373. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  374.   
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$149`.
  375.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$161`.
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378. >     assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$168`.
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378. >     assertThat(captor.getAllValues().size()).isEqualTo(2);
  379.       List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:379: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$174`.
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  378.       assertThat(captor.getAllValues().size()).isEqualTo(2);
  379. >     List<Long> creationTimes = new ArrayList<>(2);
  380.       creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:382: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$192`.
  380.       creationTimes.add(createdTimeMs2);
  381.       creationTimes.add(createdTimeMs3);
  382. >     List<Integer> instances = new ArrayList<>(2);
  383.       instances.add(1);
  384.       instances.add(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:351: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  349.     registerNewReference_when2SingletonAndALifecycleWeakReference_shouldTrackAndCause2Reports() {
  350.       Integer ref = 0;
  351. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  352.       createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:385: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$204`.
  383.       instances.add(1);
  384.       instances.add(2);
  385. >     List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());
  387.       leakTypes.add(LIFECYCLE.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$220`.
  387.       leakTypes.add(LIFECYCLE.name());
  388.   
  389. >     List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$224`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$227`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$231`.
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);
  390.       ensureDifferentViolations.add(
  391. >         captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393.           captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$241`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$244`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$248`.
  391.           captor.getAllValues().get(0).getDimensions().get(LEAK_TYPE_KEY_NAME));
  392.       ensureDifferentViolations.add(
  393. >         captor.getAllValues().get(1).getDimensions().get(LEAK_TYPE_KEY_NAME));
  394.   
  395.       // additional assertions to verify that we are getting both the different type of violations,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`,dereference of pointer `this`.
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$257`.
  396.       // not two copies
  397.       // of the same, so that the assertions below actually test the right thing.
  398. >     assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399.       assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:399: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$266`.
  397.       // of the same, so that the assertions below actually test the right thing.
  398.       assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399. >     assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   
  401.       assertMultipleReporterEvents(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:402: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$276`.
  400.   
  401.       assertMultipleReporterEvents(
  402. >         captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404.           captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:404: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$290`.
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(
  404. >         captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  405.     }
  406.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:357: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`,dereference of pointer `this`.
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   
  359.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:362: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  360.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   
  362. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:353: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  351.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  352.       createTracker(0.0);
  353. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:363: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  361.   
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363. >     verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:364: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  363.       verify(gcCallWrapper, never()).callGC();
  364. >     verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  352.       createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:365: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  363.       verify(gcCallWrapper, never()).callGC();
  364.       verify(random, never()).nextDouble();
  365. >     verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366.       testObserver.assertNoValues();
  367.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  352.       createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:359: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  357.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   
  359. >     activeTracker.flushAllQueuedReferences(queue);
  360.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:369: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  367.   
  368.       Integer ref2 = 1;
  369. >     activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  370.       Integer ref3 = 2;
  371.       activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:371: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  369.       activeTracker.registerNewReference(ref2, className, createdTimeMs2, SINGLETON);
  370.       Integer ref3 = 2;
  371. >     activeTracker.registerNewReference(ref3, className, createdTimeMs3, LIFECYCLE);
  372.   
  373.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:360: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  358.   
  359.       activeTracker.flushAllQueuedReferences(queue);
  360. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  361.   
  362.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  373.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  374.   
  375. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  376.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  377.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:366: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  364.       verify(random, never()).nextDouble();
  365.       verify(weakReferenceGenerator, never()).getGenericWeakRef();
  366. >     testObserver.assertNoValues();
  367.   
  368.       Integer ref2 = 1;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  355.   
  356. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:357: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  355.   
  356.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  357. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  358.   
  359.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:352: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  350.       Integer ref = 0;
  351.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  352. >     createTracker(0.0);
  353.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  354.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:401: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  399.       assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   
  401. >     assertMultipleReporterEvents(
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403.       assertMultipleReporterEvents(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:403: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  401.       assertMultipleReporterEvents(
  402.           captor.getAllValues().get(0), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  403. >     assertMultipleReporterEvents(
  404.           captor.getAllValues().get(1), IMPLICIT_GC_VIOLATION, instances, creationTimes, leakTypes);
  405.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.LIFECYCLE`.
  385.       List<String> leakTypes = new ArrayList<>(2);
  386.       leakTypes.add(SINGLETON.name());
  387. >     leakTypes.add(LIFECYCLE.name());
  388.   
  389.       List<String> ensureDifferentViolations = new ArrayList<>(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:399: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.LIFECYCLE`.
  397.       // of the same, so that the assertions below actually test the right thing.
  398.       assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399. >     assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   
  401.       assertMultipleReporterEvents(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.SINGLETON`.
  384.       instances.add(2);
  385.       List<String> leakTypes = new ArrayList<>(2);
  386. >     leakTypes.add(SINGLETON.name());
  387.       leakTypes.add(LIFECYCLE.name());
  388.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `uleak.LeakType.com.uber.uleak.LeakType.SINGLETON`.
  396.       // not two copies
  397.       // of the same, so that the assertions below actually test the right thing.
  398. >     assertThat(ensureDifferentViolations).contains(SINGLETON.name());
  399.       assertThat(ensureDifferentViolations).contains(LIFECYCLE.name());
  400.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:423: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);
  423. >     verify(weakReferenceGenerator).getGenericWeakRef();
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:426: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   
  426. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:427: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  425.   
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427. >     verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:428: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428. >     verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();
  430.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:426: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   
  426. >     verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:427: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$114`.
  425.   
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427. >     verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:428: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$124`.
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));
  427.       verify(gcCallWrapper, never()).callGC();
  428. >     verify(random, never()).nextDouble();
  429.       testObserver.assertNoValues();
  430.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:415: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:411: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  409.     flushQueue_whenWeak2WeakReferencesSameClassOneReferenceIsCollected_shouldStartTrackingButNoReporting() {
  410.       Integer ref = 0;
  411. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  412.       createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`,dereference of pointer `this`.
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  411.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  412.       createTracker(0.0);
  413. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`,dereference of pointer `this`.
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);
  423. >     verify(weakReferenceGenerator).getGenericWeakRef();
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:414: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`,dereference of pointer `this`,dereference of pointer `this`.
  412.       createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:414: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  412.       createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:415: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  415. >     queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:422: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  420.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   
  422. >     activeTracker.flushAllQueuedReferences(queue);
  423.       verify(weakReferenceGenerator).getGenericWeakRef();
  424.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.genericWeakRef2`,dereference of pointer `this`.
  415.       queue.add(new ULeak.QueuedLeakEvent(genericWeakRef2, className, createdTimeMs2));
  416.   
  417. >     when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:424: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  422.       activeTracker.flushAllQueuedReferences(queue);
  423.       verify(weakReferenceGenerator).getGenericWeakRef();
  424. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  425.   
  426.       verify(uLeakEventReporter, never()).reportEvent(any(ULeakEvent.class));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:429: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  427.       verify(gcCallWrapper, never()).callGC();
  428.       verify(random, never()).nextDouble();
  429. >     testObserver.assertNoValues();
  430.     }
  431.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  417.       when(genericWeakRef2.get()).thenReturn(1).thenReturn(1).thenReturn(1).thenReturn(null);
  418.   
  419. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  418.   
  419.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  420. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef2);
  421.   
  422.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:412: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  410.       Integer ref = 0;
  411.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  412. >     createTracker(0.0);
  413.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  414.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:449: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);
  449. >     verify(weakReferenceGenerator).getGenericWeakRef();
  450.   
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:453: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  452.   
  453. >     verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:455: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  453.       verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:458: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458. >     verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:459: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();
  459. >     verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:461: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:464: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:467: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467. >     verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:468: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();
  468. >     verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:470: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  471.     }
  472.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  453.       verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:456: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());
  456. >     ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:464: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:465: warning: GRADUAL_DEREFERENCE
  method call on pointer `captor`.
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465. >     uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  453.       verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455. >     verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:440: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  438.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439.       createTracker(1.0);
  440. >     ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:458: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$127`.
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458. >     verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:441: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`,dereference of pointer `this`,dereference of pointer `this`.
  439.       createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:459: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$135`.
  457.       assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();
  459. >     verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:461: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$149`.
  459.       verify(random).nextDouble();
  460.       testObserver.assertNoValues();
  461. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:464: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$165`.
  462.   
  463.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464. >     verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:467: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$192`.
  465.       uLeakEvent = captor.getValue();
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467. >     verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:468: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$202`.
  466.       assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();
  468. >     verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:470: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$216`.
  468.       verify(random, times(2)).nextDouble();
  469.       testObserver.assertNoValues();
  470. >     verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  471.     }
  472.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:442: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`,dereference of pointer `this`,dereference of pointer `this`.
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:437: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  435.       Integer ref = 0;
  436.       Integer ref2 = 1;
  437. >     WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  438.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439.       createTracker(1.0);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`,dereference of pointer `this`.
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:445: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`,dereference of pointer `this`.
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);
  447.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:438: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  436.       Integer ref2 = 1;
  437.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  438. >     WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439.       createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446. >     when(random.nextDouble()).thenReturn(.5);
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$77`.
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);
  449. >     verify(weakReferenceGenerator).getGenericWeakRef();
  450.   
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:453: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$91`.
  451.       scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  452.   
  453. >     verify(testRefGeneratorFactory).createGenerator();
  454.       ArgumentCaptor<ULeakEvent> captor = ArgumentCaptor.forClass(ULeakEvent.class);
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:441: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  439.       createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441. >     queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:442: warning: GRADUAL_DEREFERENCE
  method call on pointer `queue`.
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));
  442. >     queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:448: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.activeTracker`,dereference of pointer `this`.
  446.       when(random.nextDouble()).thenReturn(.5);
  447.   
  448. >     activeTracker.flushAllQueuedReferences(queue);
  449.       verify(weakReferenceGenerator).getGenericWeakRef();
  450.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.random`,dereference of pointer `this`.
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446. >     when(random.nextDouble()).thenReturn(.5);
  447.   
  448.       activeTracker.flushAllQueuedReferences(queue);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:451: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  449.       verify(weakReferenceGenerator).getGenericWeakRef();
  450.   
  451. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  452.   
  453.       verify(testRefGeneratorFactory).createGenerator();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:463: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.scheduler`,dereference of pointer `this`.
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   
  463. >     scheduler.advanceTimeBy(MINIMUM_CHECK_FREQUENCY_MS, TimeUnit.MILLISECONDS);
  464.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:460: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  458.       verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();
  460. >     testObserver.assertNoValues();
  461.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  462.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:469: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testObserver`,dereference of pointer `this`.
  467.       verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();
  469. >     testObserver.assertNoValues();
  470.       verify(weakReferenceGenerator, times(2)).getGenericWeakRef();
  471.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.testRefGeneratorFactory`,dereference of pointer `this`.
  442.       queue.add(new ULeak.QueuedLeakEvent(weakReference2, className, createdTimeMs2));
  443.   
  444. >     when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445.       when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:445: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.uber.uleak.ActiveTrackerTest.weakReferenceGenerator`,dereference of pointer `this`.
  443.   
  444.       when(testRefGeneratorFactory.createGenerator()).thenReturn(weakReferenceGenerator);
  445. >     when(weakReferenceGenerator.getGenericWeakRef()).thenReturn(this.genericWeakRef1);
  446.       when(random.nextDouble()).thenReturn(.5);
  447.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:439: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  437.       WeakReference<Object> weakReference = new WeakReference<>((Object) ref);
  438.       WeakReference<Object> weakReference2 = new WeakReference<>((Object) ref2);
  439. >     createTracker(1.0);
  440.       ConcurrentLinkedQueue<ULeak.QueuedLeakEvent> queue = new ConcurrentLinkedQueue<>();
  441.       queue.add(new ULeak.QueuedLeakEvent(weakReference, className, createdTimeMs1));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:457: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  455.       verify(uLeakEventReporter).reportEvent(captor.capture());
  456.       ULeakEvent uLeakEvent = captor.getValue();
  457. >     assertReporterEvent(uLeakEvent, IMPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  458.       verify(gcCallWrapper).callGC();
  459.       verify(random).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:466: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`,dereference of pointer `this`.
  464.       verify(uLeakEventReporter, times(2)).reportEvent(captor.capture());
  465.       uLeakEvent = captor.getValue();
  466. >     assertReporterEvent(uLeakEvent, EXPLICIT_GC_VIOLATION, 2, createdTimeMs2, SINGLETON);
  467.       verify(gcCallWrapper).callGC();
  468.       verify(random, times(2)).nextDouble();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `leakType`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$103`.
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  478.         @NonNull final LeakType leakType) {
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$110`.
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$121`.
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$130`.
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$137`.
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:490: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$143`.
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);
  492.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:491: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$148`.
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491. >         .isEqualTo(lastCreatedReferenceTimeMs);
  492.     }
  493.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  478.         @NonNull final LeakType leakType) {
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`,dereference of pointer `this`.
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:482: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:482: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:479: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  477.         final long lastCreatedReferenceTimeMs,
  478.         @NonNull final LeakType leakType) {
  479. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:484: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:484: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$97`.
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:479: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  477.         final long lastCreatedReferenceTimeMs,
  478.         @NonNull final LeakType leakType) {
  479. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  478.         @NonNull final LeakType leakType) {
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  479.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:482: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  480.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  481.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:484: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  482.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  483.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  484.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  485.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isEqualTo(leakType.name());
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  486.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  487.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:490: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  488.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isEqualTo(instances);
  489.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  490. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  491.           .isEqualTo(lastCreatedReferenceTimeMs);
  492.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$107`.
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  499.         @NonNull final List<String> leakType) {
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:509: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$113`.
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:509: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$118`.
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$125`.
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$138`.
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);
  513.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:512: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$143`.
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512. >         .isIn(lastCreatedReferenceTimeMs);
  513.     }
  514.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  499.         @NonNull final List<String> leakType) {
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`,dereference of pointer `this`.
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  498.         final List<Long> lastCreatedReferenceTimeMs,
  499.         @NonNull final List<String> leakType) {
  500. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:507: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$94`.
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  498.         final List<Long> lastCreatedReferenceTimeMs,
  499.         @NonNull final List<String> leakType) {
  500. >     assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  499.         @NonNull final List<String> leakType) {
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501. >     assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  500.       assertThat(uLeakEvent.getDimensions()).hasSize(3);
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502. >     assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  501.       assertThat(uLeakEvent.getDimensions().containsKey(CLASS_DIMENSION_KEY_NAME)).isTrue();
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503. >     assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  502.       assertThat(uLeakEvent.getDimensions().get(CLASS_DIMENSION_KEY_NAME)).isEqualTo(className);
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504. >     assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  503.       assertThat(uLeakEvent.getDimensions().containsKey(GC_TYPE_DIMENSION_KEY_NAME)).isTrue();
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505. >     assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  504.       assertThat(uLeakEvent.getDimensions().get(GC_TYPE_DIMENSION_KEY_NAME)).isEqualTo(type.name());
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506. >     assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:507: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  505.       assertThat(uLeakEvent.getDimensions().containsKey(LEAK_TYPE_KEY_NAME)).isTrue();
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507. >     assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  506.       assertThat(uLeakEvent.getDimensions().get(LEAK_TYPE_KEY_NAME)).isIn(leakType);
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508. >     assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:509: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  507.       assertThat(uLeakEvent.getMetrics()).hasSize(2);
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509. >     assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  508.       assertThat(uLeakEvent.getMetrics().containsKey(INSTANCES_COUNT_METRIC_KEY_NAME)).isTrue();
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510. >     assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511.       assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `uLeakEvent`.
  509.       assertThat(uLeakEvent.getMetrics().get(INSTANCES_COUNT_METRIC_KEY_NAME)).isIn(instances);
  510.       assertThat(uLeakEvent.getMetrics().containsKey(LAST_LEAK_CREATED_TIME_MS)).isTrue();
  511. >     assertThat(uLeakEvent.getMetrics().get(LAST_LEAK_CREATED_TIME_MS))
  512.           .isIn(lastCreatedReferenceTimeMs);
  513.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:518: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  516.       ULeakConfiguration configuration =
  517.           new ULeakConfiguration(gcProbability, MINIMUM_CHECK_FREQUENCY_MS);
  518. >     activeTracker =
  519.           new ActiveTracker(
  520.               uLeakEventReporter,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:516: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  514.   
  515.     private void createTracker(double gcProbability) {
  516. >     ULeakConfiguration configuration =
  517.           new ULeakConfiguration(gcProbability, MINIMUM_CHECK_FREQUENCY_MS);
  518.       activeTracker =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/uLeak/uleak/src/test/java/com/uber/uleak/ActiveTrackerTest.java:518: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  516.       ULeakConfiguration configuration =
  517.           new ULeakConfiguration(gcProbability, MINIMUM_CHECK_FREQUENCY_MS);
  518. >     activeTracker =
  519.           new ActiveTracker(
  520.               uLeakEventReporter,

Summary of the reports

  GRADUAL_DEREFERENCE: 696