Found 3588 issues

butterknife-annotations/src/main/java/butterknife/internal/Constants.java:5: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  3.   public class Constants {
  4.   
  5. >   private Constants() { }
  6.   
  7.     public static final int NO_RES_ID = -1;

butterknife-integration-test/build/generated/source/buildConfig/reflect/release/com/example/butterknife/BuildConfig.java:6: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  4.   package com.example.butterknife;
  5.   
  6. > public final class BuildConfig {
  7.     public static final boolean DEBUG = false;
  8.     public static final String APPLICATION_ID = "com.example.butterknife";

butterknife-integration-test/src/main/java/com/example/butterknife/SimpleApp.java:6: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  4.   import butterknife.ButterKnife;
  5.   
  6. > public class SimpleApp extends Application {
  7.     @Override public void onCreate() {
  8.       super.onCreate();

butterknife-reflect/src/main/java/butterknife/EmptyTextWatcher.java:6: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  4.   import android.text.TextWatcher;
  5.   
  6. > class EmptyTextWatcher implements TextWatcher {
  7.     @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  8.     }

butterknife-runtime/src/test/java/butterknife/TestStubs.java:6: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  4.   import javax.tools.JavaFileObject;
  5.   
  6. > final class TestStubs {
  7.     static final JavaFileObject ANDROIDX_CONTEXT_COMPAT =
  8.         JavaFileObjects.forSourceString("androidx.core.content.ContextCompat", ""

butterknife-lint/src/test/java/butterknife/lint/LintRegistryTest.java:7: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  5.   import static com.google.common.truth.Truth.assertThat;
  6.   
  7. > public final class LintRegistryTest {
  8.     @Test public void issues() {
  9.       assertThat(new LintRegistry().getIssues()).contains(InvalidR2UsageDetector.ISSUE);

butterknife-integration-test/src/main/java/com/example/butterknife/SimpleApp.java:8: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  6.   public class SimpleApp extends Application {
  7.     @Override public void onCreate() {
  8. >     super.onCreate();
  9.       ButterKnife.setDebug(BuildConfig.DEBUG);
  10.     }

butterknife-lint/src/test/java/butterknife/lint/LintRegistryTest.java:9: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  7.   public final class LintRegistryTest {
  8.     @Test public void issues() {
  9. >     assertThat(new LintRegistry().getIssues()).contains(InvalidR2UsageDetector.ISSUE);
  10.     }
  11.   }

butterknife-lint/src/test/java/butterknife/lint/LintRegistryTest.java:9: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  7.   public final class LintRegistryTest {
  8.     @Test public void issues() {
  9. >     assertThat(new LintRegistry().getIssues()).contains(InvalidR2UsageDetector.ISSUE);
  10.     }
  11.   }

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:9: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  7.   import static com.android.tools.lint.checks.infrastructure.TestLintTask.lint;
  8.   
  9. > public final class InvalidR2UsageDetectorTest {
  10.     private static final TestFile BIND_TEST = java(""
  11.         + "package sample.r2;\n"

butterknife-runtime/src/main/java/butterknife/internal/DebouncingOnClickListener.java:9: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  7.    * same frame. A click on one button disables all buttons for that frame.
  8.    */
  9. > public abstract class DebouncingOnClickListener implements View.OnClickListener {
  10.     static boolean enabled = true;
  11.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   import static java.util.Collections.singletonList;
  9.   
  10. > public class BindingSetTest {
  11.     @Test public void humanDescriptionJoinWorks() {
  12.       MemberViewBinding one = new TestViewBinding("one");

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   package com.example.butterknife;
  9.   
  10. > public final class R {
  11.       public static final class attr {
  12.           /**  Alpha multiplier applied to the base color. 

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.       public static final class attr {

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.       public static final class attr {

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.       public static final class attr {

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:11: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  9.   
  10.     CompositeUnbinder(@NonNull List<Unbinder> unbinders) {
  11. >     this.unbinders = unbinders;
  12.     }
  13.   

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.     private @Nullable List<Unbinder> unbinders;
  9.   
  10. >   CompositeUnbinder(@NonNull List<Unbinder> unbinders) {
  11.       this.unbinders = unbinders;
  12.     }

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.       public static final class attr {

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/lifecycle/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.   }

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/versionedparcelable/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.   }

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.       public static final class attr {

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:10: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  8.   
  9.   public final class R {
  10. >     private R() {}
  11.   
  12.       public static final class attr {

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:12: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  10.   
  11.     FieldAnimationBinding(Id id, String name) {
  12. >     this.id = id;
  13.       this.name = name;
  14.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  11.     FieldAnimationBinding(Id id, String name) {
  12.       this.id = id;
  13. >     this.name = name;
  14.     }
  15.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.     private final String name;
  10.   
  11. >   FieldAnimationBinding(Id id, String name) {
  12.       this.id = id;
  13.       this.name = name;

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$15`.
  17.       assertThat(result1).isEqualTo("one");
  18.   
  19. >     String result2 = asHumanDescription(asList(one, two));
  20.       assertThat(result2).isEqualTo("one and two");
  21.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$29`.
  20.       assertThat(result2).isEqualTo("one and two");
  21.   
  22. >     String result3 = asHumanDescription(asList(one, two, three));
  23.       assertThat(result3).isEqualTo("one, two, and three");
  24.     }

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  10.   public class BindingSetTest {
  11.     @Test public void humanDescriptionJoinWorks() {
  12. >     MemberViewBinding one = new TestViewBinding("one");
  13.       MemberViewBinding two = new TestViewBinding("two");
  14.       MemberViewBinding three = new TestViewBinding("three");

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  15.   
  16.       String result1 = asHumanDescription(singletonList(one));
  17. >     assertThat(result1).isEqualTo("one");
  18.   
  19.       String result2 = asHumanDescription(asList(one, two));

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:20: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  18.   
  19.       String result2 = asHumanDescription(asList(one, two));
  20. >     assertThat(result2).isEqualTo("one and two");
  21.   
  22.       String result3 = asHumanDescription(asList(one, two, three));

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  11.     @Test public void humanDescriptionJoinWorks() {
  12.       MemberViewBinding one = new TestViewBinding("one");
  13. >     MemberViewBinding two = new TestViewBinding("two");
  14.       MemberViewBinding three = new TestViewBinding("three");
  15.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  21.   
  22.       String result3 = asHumanDescription(asList(one, two, three));
  23. >     assertThat(result3).isEqualTo("one, two, and three");
  24.     }
  25.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  12.       MemberViewBinding one = new TestViewBinding("one");
  13.       MemberViewBinding two = new TestViewBinding("two");
  14. >     MemberViewBinding three = new TestViewBinding("three");
  15.   
  16.       String result1 = asHumanDescription(singletonList(one));

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   
  10.   public final class R {
  11. >     public static final class attr {
  12.           /**  Alpha multiplier applied to the base color. 
  13.            <p>Must be a floating point value, such as "<code>1.2</code>".

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/D_ViewBinding.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  13.   
  14.       Context context = source.getContext();
  15. >     target.grayColor = ContextCompat.getColor(context, android.R.color.darker_gray);
  16.     }
  17.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/D_ViewBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  12.       super(target, source);
  13.   
  14. >     Context context = source.getContext();
  15.       target.grayColor = ContextCompat.getColor(context, android.R.color.darker_gray);
  16.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/D_ViewBinding.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.     @UiThread
  11.     public D_ViewBinding(D target, View source) {
  12. >     super(target, source);
  13.   
  14.       Context context = source.getContext();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/E_ViewBinding.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  13.   
  14.       Context context = source.getContext();
  15. >     target.backgroundDarkColor = ContextCompat.getColor(context, android.R.color.background_dark);
  16.     }
  17.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/E_ViewBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  12.       super(target, source);
  13.   
  14. >     Context context = source.getContext();
  15.       target.backgroundDarkColor = ContextCompat.getColor(context, android.R.color.background_dark);
  16.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/E_ViewBinding.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.     @UiThread
  11.     public E_ViewBinding(E target, View source) {
  12. >     super(target, source);
  13.   
  14.       Context context = source.getContext();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/F_ViewBinding.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  13.   
  14.       Context context = source.getContext();
  15. >     target.backgroundLightColor = ContextCompat.getColor(context, android.R.color.background_light);
  16.     }
  17.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/F_ViewBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  12.       super(target, source);
  13.   
  14. >     Context context = source.getContext();
  15.       target.backgroundLightColor = ContextCompat.getColor(context, android.R.color.background_light);
  16.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/F_ViewBinding.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.     @UiThread
  11.     public F_ViewBinding(F target, View source) {
  12. >     super(target, source);
  13.   
  14.       Context context = source.getContext();

butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:12: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  10.   
  11.     FieldUnbinder(Object target, Field field) {
  12. >     this.target = target;
  13.       this.field = field;
  14.     }

butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  11.     FieldUnbinder(Object target, Field field) {
  12.       this.target = target;
  13. >     this.field = field;
  14.     }
  15.   

butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.     private final Field field;
  10.   
  11. >   FieldUnbinder(Object target, Field field) {
  12.       this.target = target;
  13.       this.field = field;

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:12: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  10.   
  11.     ListenerUnbinder(List<V> targets, Setter<V, L> setter) {
  12. >     this.targets = targets;
  13.       this.setter = setter;
  14.       this.listener = null;

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  11.     ListenerUnbinder(List<V> targets, Setter<V, L> setter) {
  12.       this.targets = targets;
  13. >     this.setter = setter;
  14.       this.listener = null;
  15.     }

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  12.       this.targets = targets;
  13.       this.setter = setter;
  14. >     this.listener = null;
  15.     }
  16.   

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.     private final L listener;
  10.   
  11. >   ListenerUnbinder(List<V> targets, Setter<V, L> setter) {
  12.       this.targets = targets;
  13.       this.setter = setter;

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindArrayTest {
  12.     @Test public void typedArray() throws Exception {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindBitmapTest {
  12.     @Test public void typeMustBeBitmap() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindBoolTest {
  12.     @Test public void typeMustBeBoolean() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindColorTest {
  12.     @Test public void simpleIntSdk23() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindDimenTest {
  12.     @Test public void typeMustBeIntOrFloat() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindDrawableTest {
  12.     @Test public void simpleSdk21() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindFloatTest {
  12.     @Test public void typeMustBeFloat() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class BindFontTest {
  12.     @Test public void simpleIntSdk26() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindIntTest {
  12.     @Test public void typeMustBeInt() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public final class BindStringTest {
  12.     @Test public void typeMustBeString() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class ExtendActivityTest {
  12.     @Test public void onlyResources() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class ExtendDialogTest {
  12.     @Test public void onlyResources() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class ExtendViewTest {
  12.     @Test public void onlyResources() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class OnClickTest {
  12.     @Test public void findOnlyCalledOnce() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class OnEditorActionTest {
  12.     @Test public void editorAction() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class OnFocusChangeTest {
  12.     @Test public void focusChange() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class OnItemLongClickTest {
  12.     @Test public void itemLongClick() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class OnTextChangedTest {
  12.     @Test public void textChanged() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  10.   
  11. > public class OnTouchTest {
  12.     @Test public void touch() {
  13.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:11: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  9.   import static org.junit.Assert.fail;
  10.   
  11. > public final class UtilsTest {
  12.     @Test public void listOfFiltersNull() {
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `compiler.FieldCollectionViewBinding$Kind.butterknife.compiler.FieldCollectionViewBinding$Kind.$VALUES`.
  10.   
  11.   final class FieldCollectionViewBinding {
  12. >   enum Kind {
  13.       ARRAY("arrayFilteringNull"),
  14.       LIST("listFilteringNull");

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  11.   
  12.     FieldViewBinding(String name, TypeName type, boolean required) {
  13. >     this.name = name;
  14.       this.type = type;
  15.       this.required = required;

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  12.     FieldViewBinding(String name, TypeName type, boolean required) {
  13.       this.name = name;
  14. >     this.type = type;
  15.       this.required = required;
  16.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  13.       this.name = name;
  14.       this.type = type;
  15. >     this.required = required;
  16.     }
  17.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.     private final boolean required;
  11.   
  12. >   FieldViewBinding(String name, TypeName type, boolean required) {
  13.       this.name = name;
  14.       this.type = type;

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  11.   
  12.     Parameter(int listenerPosition, TypeName type) {
  13. >     this.listenerPosition = listenerPosition;
  14.       this.type = type;
  15.     }

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  12.     Parameter(int listenerPosition, TypeName type) {
  13.       this.listenerPosition = listenerPosition;
  14. >     this.type = type;
  15.     }
  16.   

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.     private final TypeName type;
  11.   
  12. >   Parameter(int listenerPosition, TypeName type) {
  13.       this.listenerPosition = listenerPosition;
  14.       this.type = type;

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.     @BindColor(android.R.color.black) @ColorInt int blackColor;
  11.   
  12. >   public A(View view) {
  13.       ButterKnife.bind(this, view);
  14.     }

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.     public B(View view) {
  13. >     super(view);
  14.       ButterKnife.bind(this, view);
  15.     }

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.     public D(View view) {
  13. >     super(view);
  14.       ButterKnife.bind(this, view);
  15.     }

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.     public E(View view) {
  13. >     super(view);
  14.       ButterKnife.bind(this, view);
  15.     }

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.     public F(View view) {
  13. >     super(view);
  14.       ButterKnife.bind(this, view);
  15.     }

butterknife-lint/src/main/java/butterknife/lint/LintRegistry.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.    * Contains references to all custom lint checks for butterknife.
  11.    */
  12. > public class LintRegistry extends IssueRegistry {
  13.   
  14.     @Override public List<Issue> getIssues() {

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  55.       );
  56.   
  57. >     assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  57.       assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing")
  59. >         .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()
  61.           .and()

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  56.   
  57.       assertAbout(javaSource()).that(source)
  58. >         .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  58.           .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())
  60. >         .compilesWithoutWarnings()
  61.           .and()
  62.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()
  61. >         .and()
  62.           .generatesSources(bindingSource);
  63.     }

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  60.           .compilesWithoutWarnings()
  61.           .and()
  62. >         .generatesSources(bindingSource);
  63.     }
  64.   

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  55.       );
  56.   
  57. >     assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  56.   
  57.       assertAbout(javaSource()).that(source)
  58. >         .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  21.       assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23. >         .failsToCompile()
  24.           .withErrorContaining("@BindBitmap field type must be 'Bitmap'. (test.Test.one)")
  25.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24. >         .withErrorContaining("@BindBitmap field type must be 'Bitmap'. (test.Test.one)")
  25.           .in(source).onLine(4);
  26.     }

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindBitmap field type must be 'Bitmap'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindBitmap field type must be 'Bitmap'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  20.   
  21.       assertAbout(javaSource()).that(source)
  22. >         .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindBitmap field type must be 'Bitmap'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindBitmapTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  21.       assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23. >         .failsToCompile()
  24.           .withErrorContaining("@BindBool field type must be 'boolean'. (test.Test.one)")
  25.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24. >         .withErrorContaining("@BindBool field type must be 'boolean'. (test.Test.one)")
  25.           .in(source).onLine(4);
  26.     }

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindBool field type must be 'boolean'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindBool field type must be 'boolean'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  20.   
  21.       assertAbout(javaSource()).that(source)
  22. >         .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindBool field type must be 'boolean'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindBoolTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:54: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  52.       );
  53.   
  54. >     assertAbout(javaSource()).that(source)
  55.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  56.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  54.       assertAbout(javaSource()).that(source)
  55.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  56. >         .processedWith(new ButterKnifeProcessor())
  57.           .compilesWithoutWarnings()
  58.           .and()

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  53.   
  54.       assertAbout(javaSource()).that(source)
  55. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  56.           .processedWith(new ButterKnifeProcessor())
  57.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  55.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  56.           .processedWith(new ButterKnifeProcessor())
  57. >         .compilesWithoutWarnings()
  58.           .and()
  59.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  56.           .processedWith(new ButterKnifeProcessor())
  57.           .compilesWithoutWarnings()
  58. >         .and()
  59.           .generatesSources(bindingSource);
  60.     }

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  57.           .compilesWithoutWarnings()
  58.           .and()
  59. >         .generatesSources(bindingSource);
  60.     }
  61.   

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  52.       );
  53.   
  54. >     assertAbout(javaSource()).that(source)
  55.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  56.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  53.   
  54.       assertAbout(javaSource()).that(source)
  55. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  56.           .processedWith(new ButterKnifeProcessor())
  57.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  21.       assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23. >         .failsToCompile()
  24.           .withErrorContaining("@BindDimen field type must be 'int' or 'float'. (test.Test.one)")
  25.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24. >         .withErrorContaining("@BindDimen field type must be 'int' or 'float'. (test.Test.one)")
  25.           .in(source).onLine(4);
  26.     }

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindDimen field type must be 'int' or 'float'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindDimen field type must be 'int' or 'float'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  20.   
  21.       assertAbout(javaSource()).that(source)
  22. >         .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindDimen field type must be 'int' or 'float'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindDimenTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  53.       );
  54.   
  55. >     assertAbout(javaSource()).that(source)
  56.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=21")
  57.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  55.       assertAbout(javaSource()).that(source)
  56.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=21")
  57. >         .processedWith(new ButterKnifeProcessor())
  58.           .compilesWithoutWarnings()
  59.           .and()

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  54.   
  55.       assertAbout(javaSource()).that(source)
  56. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=21")
  57.           .processedWith(new ButterKnifeProcessor())
  58.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  56.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=21")
  57.           .processedWith(new ButterKnifeProcessor())
  58. >         .compilesWithoutWarnings()
  59.           .and()
  60.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  57.           .processedWith(new ButterKnifeProcessor())
  58.           .compilesWithoutWarnings()
  59. >         .and()
  60.           .generatesSources(bindingSource);
  61.     }

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  58.           .compilesWithoutWarnings()
  59.           .and()
  60. >         .generatesSources(bindingSource);
  61.     }
  62.   

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  53.       );
  54.   
  55. >     assertAbout(javaSource()).that(source)
  56.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=21")
  57.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  54.   
  55.       assertAbout(javaSource()).that(source)
  56. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=21")
  57.           .processedWith(new ButterKnifeProcessor())
  58.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  21.       assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23. >         .failsToCompile()
  24.           .withErrorContaining("@BindFloat field type must be 'float'. (test.Test.one)")
  25.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24. >         .withErrorContaining("@BindFloat field type must be 'float'. (test.Test.one)")
  25.           .in(source).onLine(4);
  26.     }

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindFloat field type must be 'float'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindFloat field type must be 'float'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  20.   
  21.       assertAbout(javaSource()).that(source)
  22. >         .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindFloat field type must be 'float'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindFloatTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  55.       );
  56.   
  57. >     assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  59.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  57.       assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  59. >         .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()
  61.           .and()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  56.   
  57.       assertAbout(javaSource()).that(source)
  58. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  58.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  59.           .processedWith(new ButterKnifeProcessor())
  60. >         .compilesWithoutWarnings()
  61.           .and()
  62.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()
  61. >         .and()
  62.           .generatesSources(bindingSource);
  63.     }

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  60.           .compilesWithoutWarnings()
  61.           .and()
  62. >         .generatesSources(bindingSource);
  63.     }
  64.   

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  55.       );
  56.   
  57. >     assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  59.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  56.   
  57.       assertAbout(javaSource()).that(source)
  58. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  21.       assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23. >         .failsToCompile()
  24.           .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")
  25.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24. >         .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")
  25.           .in(source).onLine(4);
  26.     }

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  20.   
  21.       assertAbout(javaSource()).that(source)
  22. >         .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindIntTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  21.       assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23. >         .failsToCompile()
  24.           .withErrorContaining("@BindString field type must be 'String'. (test.Test.one)")
  25.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24. >         .withErrorContaining("@BindString field type must be 'String'. (test.Test.one)")
  25.           .in(source).onLine(4);
  26.     }

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindString field type must be 'String'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindString field type must be 'String'. (test.Test.one)")
  25. >         .in(source).onLine(4);
  26.     }
  27.   }

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  20.   
  21.       assertAbout(javaSource()).that(source)
  22. >         .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()
  24.           .withErrorContaining("@BindString field type must be 'String'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindStringTest.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  19.       );
  20.   
  21. >     assertAbout(javaSource()).that(source)
  22.           .processedWith(new ButterKnifeProcessor())
  23.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:62: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  60.       );
  61.   
  62. >     assertAbout(javaSource()).that(source)
  63.           .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  62.       assertAbout(javaSource()).that(source)
  63.           .withCompilerOptions("-Xlint:-processing")
  64. >         .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()
  66.           .and()

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  61.   
  62.       assertAbout(javaSource()).that(source)
  63. >         .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  63.           .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())
  65. >         .compilesWithoutWarnings()
  66.           .and()
  67.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  64.           .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()
  66. >         .and()
  67.           .generatesSources(bindingSource);
  68.     }

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  65.           .compilesWithoutWarnings()
  66.           .and()
  67. >         .generatesSources(bindingSource);
  68.     }
  69.   

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  60.       );
  61.   
  62. >     assertAbout(javaSource()).that(source)
  63.           .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  61.   
  62.       assertAbout(javaSource()).that(source)
  63. >         .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:65: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  63.       );
  64.   
  65. >     assertAbout(javaSource()).that(source)
  66.           .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  65.       assertAbout(javaSource()).that(source)
  66.           .withCompilerOptions("-Xlint:-processing")
  67. >         .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()
  69.           .and()

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  64.   
  65.       assertAbout(javaSource()).that(source)
  66. >         .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  66.           .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())
  68. >         .compilesWithoutWarnings()
  69.           .and()
  70.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  67.           .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()
  69. >         .and()
  70.           .generatesSources(bindingSource);
  71.     }

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  68.           .compilesWithoutWarnings()
  69.           .and()
  70. >         .generatesSources(bindingSource);
  71.     }
  72.   

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  63.       );
  64.   
  65. >     assertAbout(javaSource()).that(source)
  66.           .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  64.   
  65.       assertAbout(javaSource()).that(source)
  66. >         .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:65: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  63.       );
  64.   
  65. >     assertAbout(javaSource()).that(source)
  66.           .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  65.       assertAbout(javaSource()).that(source)
  66.           .withCompilerOptions("-Xlint:-processing")
  67. >         .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()
  69.           .and()

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  64.   
  65.       assertAbout(javaSource()).that(source)
  66. >         .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  66.           .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())
  68. >         .compilesWithoutWarnings()
  69.           .and()
  70.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  67.           .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()
  69. >         .and()
  70.           .generatesSources(bindingSource);
  71.     }

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  68.           .compilesWithoutWarnings()
  69.           .and()
  70. >         .generatesSources(bindingSource);
  71.     }
  72.   

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  63.       );
  64.   
  65. >     assertAbout(javaSource()).that(source)
  66.           .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  64.   
  65.       assertAbout(javaSource()).that(source)
  66. >         .withCompilerOptions("-Xlint:-processing")
  67.           .processedWith(new ButterKnifeProcessor())
  68.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:64: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  62.       );
  63.   
  64. >     assertAbout(javaSource()).that(source)
  65.           .withCompilerOptions("-Xlint:-processing")
  66.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  64.       assertAbout(javaSource()).that(source)
  65.           .withCompilerOptions("-Xlint:-processing")
  66. >         .processedWith(new ButterKnifeProcessor())
  67.           .compilesWithoutWarnings()
  68.           .and()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  63.   
  64.       assertAbout(javaSource()).that(source)
  65. >         .withCompilerOptions("-Xlint:-processing")
  66.           .processedWith(new ButterKnifeProcessor())
  67.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  65.           .withCompilerOptions("-Xlint:-processing")
  66.           .processedWith(new ButterKnifeProcessor())
  67. >         .compilesWithoutWarnings()
  68.           .and()
  69.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  66.           .processedWith(new ButterKnifeProcessor())
  67.           .compilesWithoutWarnings()
  68. >         .and()
  69.           .generatesSources(bindingSource);
  70.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  67.           .compilesWithoutWarnings()
  68.           .and()
  69. >         .generatesSources(bindingSource);
  70.     }
  71.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  62.       );
  63.   
  64. >     assertAbout(javaSource()).that(source)
  65.           .withCompilerOptions("-Xlint:-processing")
  66.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  63.   
  64.       assertAbout(javaSource()).that(source)
  65. >         .withCompilerOptions("-Xlint:-processing")
  66.           .processedWith(new ButterKnifeProcessor())
  67.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:59: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  57.       );
  58.   
  59. >     assertAbout(javaSource()).that(source)
  60.           .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  59.       assertAbout(javaSource()).that(source)
  60.           .withCompilerOptions("-Xlint:-processing")
  61. >         .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()
  63.           .and()

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  58.   
  59.       assertAbout(javaSource()).that(source)
  60. >         .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  60.           .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())
  62. >         .compilesWithoutWarnings()
  63.           .and()
  64.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  61.           .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()
  63. >         .and()
  64.           .generatesSources(bindingSource);
  65.     }

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  62.           .compilesWithoutWarnings()
  63.           .and()
  64. >         .generatesSources(bindingSource);
  65.     }
  66.   

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  57.       );
  58.   
  59. >     assertAbout(javaSource()).that(source)
  60.           .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  58.   
  59.       assertAbout(javaSource()).that(source)
  60. >         .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  55.       );
  56.   
  57. >     assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  57.       assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing")
  59. >         .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()
  61.           .and()

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  56.   
  57.       assertAbout(javaSource()).that(source)
  58. >         .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  58.           .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())
  60. >         .compilesWithoutWarnings()
  61.           .and()
  62.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()
  61. >         .and()
  62.           .generatesSources(bindingSource);
  63.     }

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  60.           .compilesWithoutWarnings()
  61.           .and()
  62. >         .generatesSources(bindingSource);
  63.     }
  64.   }

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  55.       );
  56.   
  57. >     assertAbout(javaSource()).that(source)
  58.           .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  56.   
  57.       assertAbout(javaSource()).that(source)
  58. >         .withCompilerOptions("-Xlint:-processing")
  59.           .processedWith(new ButterKnifeProcessor())
  60.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.   
  11.   /** This augments {@link OnClickTest} with tests that exercise callbacks with parameters. */
  12. > public class OnItemClickTest {
  13.     @Test public void onItemClickBinding() {
  14.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:58: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  56.       );
  57.   
  58. >     assertAbout(javaSource()).that(source)
  59.           .withCompilerOptions("-Xlint:-processing")
  60.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  58.       assertAbout(javaSource()).that(source)
  59.           .withCompilerOptions("-Xlint:-processing")
  60. >         .processedWith(new ButterKnifeProcessor())
  61.           .compilesWithoutWarnings()
  62.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  57.   
  58.       assertAbout(javaSource()).that(source)
  59. >         .withCompilerOptions("-Xlint:-processing")
  60.           .processedWith(new ButterKnifeProcessor())
  61.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  59.           .withCompilerOptions("-Xlint:-processing")
  60.           .processedWith(new ButterKnifeProcessor())
  61. >         .compilesWithoutWarnings()
  62.           .and()
  63.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  60.           .processedWith(new ButterKnifeProcessor())
  61.           .compilesWithoutWarnings()
  62. >         .and()
  63.           .generatesSources(bindingSource);
  64.     }

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  61.           .compilesWithoutWarnings()
  62.           .and()
  63. >         .generatesSources(bindingSource);
  64.     }
  65.   

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  56.       );
  57.   
  58. >     assertAbout(javaSource()).that(source)
  59.           .withCompilerOptions("-Xlint:-processing")
  60.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  57.   
  58.       assertAbout(javaSource()).that(source)
  59. >         .withCompilerOptions("-Xlint:-processing")
  60.           .processedWith(new ButterKnifeProcessor())
  61.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.   
  11.   /** This augments {@link OnClickTest} with tests that exercise callbacks with multiple methods. */
  12. > public class OnItemSelectedTest {
  13.     @Test public void defaultMethod() {
  14.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:70: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  68.       );
  69.   
  70. >     assertAbout(javaSource()).that(source)
  71.           .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:72: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  70.       assertAbout(javaSource()).that(source)
  71.           .withCompilerOptions("-Xlint:-processing")
  72. >         .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()
  74.           .and()

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  69.   
  70.       assertAbout(javaSource()).that(source)
  71. >         .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  71.           .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())
  73. >         .compilesWithoutWarnings()
  74.           .and()
  75.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  72.           .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()
  74. >         .and()
  75.           .generatesSources(bindingSource);
  76.     }

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  73.           .compilesWithoutWarnings()
  74.           .and()
  75. >         .generatesSources(bindingSource);
  76.     }
  77.   

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  68.       );
  69.   
  70. >     assertAbout(javaSource()).that(source)
  71.           .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  69.   
  70.       assertAbout(javaSource()).that(source)
  71. >         .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:60: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  58.       );
  59.   
  60. >     assertAbout(javaSource()).that(source)
  61.           .withCompilerOptions("-Xlint:-processing")
  62.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  60.       assertAbout(javaSource()).that(source)
  61.           .withCompilerOptions("-Xlint:-processing")
  62. >         .processedWith(new ButterKnifeProcessor())
  63.           .compilesWithoutWarnings()
  64.           .and()

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  59.   
  60.       assertAbout(javaSource()).that(source)
  61. >         .withCompilerOptions("-Xlint:-processing")
  62.           .processedWith(new ButterKnifeProcessor())
  63.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  61.           .withCompilerOptions("-Xlint:-processing")
  62.           .processedWith(new ButterKnifeProcessor())
  63. >         .compilesWithoutWarnings()
  64.           .and()
  65.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  62.           .processedWith(new ButterKnifeProcessor())
  63.           .compilesWithoutWarnings()
  64. >         .and()
  65.           .generatesSources(bindingSource);
  66.     }

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  63.           .compilesWithoutWarnings()
  64.           .and()
  65. >         .generatesSources(bindingSource);
  66.     }
  67.   

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  58.       );
  59.   
  60. >     assertAbout(javaSource()).that(source)
  61.           .withCompilerOptions("-Xlint:-processing")
  62.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  59.   
  60.       assertAbout(javaSource()).that(source)
  61. >         .withCompilerOptions("-Xlint:-processing")
  62.           .processedWith(new ButterKnifeProcessor())
  63.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:12: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  10.   import static java.util.Arrays.asList;
  11.   
  12. > public class RClassTest {
  13.   
  14.     private static final JavaFileObject NON_FINAL_R = JavaFileObjects.forSourceString("test.R", ""

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  11.   public final class UtilsTest {
  12.     @Test public void listOfFiltersNull() {
  13. >     assertThat(listFilteringNull(null, null, null)).isEmpty();
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:20: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$106`.
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20. >     assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");
  21.     }
  22.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  12.     @Test public void listOfFiltersNull() {
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();
  14. >     assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$19`.
  12.     @Test public void listOfFiltersNull() {
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();
  14. >     assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15. >     assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$33`.
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15. >     assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:16: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16. >     assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:16: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$47`.
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16. >     assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$53`.
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17. >     assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$61`.
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17. >     assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$68`.
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18. >     assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20.       assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$76`.
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18. >     assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20.       assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$83`.
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19. >     assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20.       assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");
  21.     }

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$91`.
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19. >     assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20.       assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");
  21.     }

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:20: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$98`.
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20. >     assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");
  21.     }
  22.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:20: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$105`.
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20. >     assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");
  21.     }
  22.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  12.     @Test public void listOfFiltersNull() {
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();
  14. >     assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  13.       assertThat(listFilteringNull(null, null, null)).isEmpty();
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15. >     assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16. >     assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17. >     assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$75`.
  16.       assertThat(listFilteringNull(null, null, "One")).containsExactly("One");
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18. >     assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19.       assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20.       assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  11.   public final class UtilsTest {
  12.     @Test public void listOfFiltersNull() {
  13. >     assertThat(listFilteringNull(null, null, null)).isEmpty();
  14.       assertThat(listFilteringNull("One", null, null)).containsExactly("One");
  15.       assertThat(listFilteringNull(null, "One", null)).containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:19: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  17.       assertThat(listFilteringNull("One", "Two", null)).containsExactly("One", "Two");
  18.       assertThat(listFilteringNull("One", null, "Two")).containsExactly("One", "Two");
  19. >     assertThat(listFilteringNull(null, "One", "Two")).containsExactly("One", "Two");
  20.       assertThat(listFilteringNull("One", "Two", "Three")).containsExactly("One", "Two", "Three");
  21.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:12: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  10.   
  11.   final class FieldCollectionViewBinding {
  12. >   enum Kind {
  13.       ARRAY("arrayFilteringNull"),
  14.       LIST("listFilteringNull");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  11.   final class FieldCollectionViewBinding {
  12.     enum Kind {
  13. >     ARRAY("arrayFilteringNull"),
  14.       LIST("listFilteringNull");
  15.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  12.     enum Kind {
  13.       ARRAY("arrayFilteringNull"),
  14. >     LIST("listFilteringNull");
  15.   
  16.       final String factoryName;

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `compiler.FieldResourceBinding$Type.butterknife.compiler.FieldResourceBinding$Type.$VALUES`.
  11.   
  12.   final class FieldResourceBinding implements ResourceBinding {
  13. >   enum Type {
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `compiler.FieldTypefaceBinding$TypefaceStyles.butterknife.compiler.FieldTypefaceBinding$TypefaceStyles.$VALUES`.
  11.   
  12.     /** Keep in sync with {@link android.graphics.Typeface} constants. */
  13. >   enum TypefaceStyles {
  14.       NORMAL(0),
  15.       BOLD(1),

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  13.     MethodViewBinding(String name, List<Parameter> parameters, boolean required,
  14.         boolean hasReturnValue) {
  15. >     this.name = name;
  16.       this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  17.       this.required = required;

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:16: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  14.         boolean hasReturnValue) {
  15.       this.name = name;
  16. >     this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  17.       this.required = required;
  18.       this.hasReturnValue = hasReturnValue;

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  15.       this.name = name;
  16.       this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  17. >     this.required = required;
  18.       this.hasReturnValue = hasReturnValue;
  19.     }

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  16.       this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  17.       this.required = required;
  18. >     this.hasReturnValue = hasReturnValue;
  19.     }
  20.   

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  14.         boolean hasReturnValue) {
  15.       this.name = name;
  16. >     this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  17.       this.required = required;
  18.       this.hasReturnValue = hasReturnValue;

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  12.   
  13.     MethodViewBinding(String name, List<Parameter> parameters, boolean required,
  14. >       boolean hasReturnValue) {
  15.       this.name = name;
  16.       this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.       public static final class attr {
  13. >         private attr() {}
  14.   
  15.           public static int alpha = 0x7f040001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.       public static final class attr {
  13. >         private attr() {}
  14.   
  15.           public static int alpha = 0x7f040001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.       public static final class attr {
  13. >         private attr() {}
  14.   
  15.           public static int alpha = 0x7f040001;

butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  12.   
  13.     ImmutableList(T[] views) {
  14. >     this.views = views;
  15.     }
  16.   

butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.     private final T[] views;
  12.   
  13. >   ImmutableList(T[] views) {
  14.       this.views = views;
  15.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:59: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  57.       );
  58.   
  59. >     assertAbout(javaSource()).that(source)
  60.           .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  59.       assertAbout(javaSource()).that(source)
  60.           .withCompilerOptions("-Xlint:-processing")
  61. >         .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()
  63.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  58.   
  59.       assertAbout(javaSource()).that(source)
  60. >         .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  60.           .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())
  62. >         .compilesWithoutWarnings()
  63.           .and()
  64.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  61.           .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()
  63. >         .and()
  64.           .generatesSources(bindingSource);
  65.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  62.           .compilesWithoutWarnings()
  63.           .and()
  64. >         .generatesSources(bindingSource);
  65.     }
  66.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  57.       );
  58.   
  59. >     assertAbout(javaSource()).that(source)
  60.           .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  58.   
  59.       assertAbout(javaSource()).that(source)
  60. >         .withCompilerOptions("-Xlint:-processing")
  61.           .processedWith(new ButterKnifeProcessor())
  62.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:62: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  60.       );
  61.   
  62. >     assertAbout(javaSource()).that(source)
  63.           .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  62.       assertAbout(javaSource()).that(source)
  63.           .withCompilerOptions("-Xlint:-processing")
  64. >         .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()
  66.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  61.   
  62.       assertAbout(javaSource()).that(source)
  63. >         .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  63.           .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())
  65. >         .compilesWithoutWarnings()
  66.           .and()
  67.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  64.           .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()
  66. >         .and()
  67.           .generatesSources(bindingSource);
  68.     }

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  65.           .compilesWithoutWarnings()
  66.           .and()
  67. >         .generatesSources(bindingSource);
  68.     }
  69.   

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  60.       );
  61.   
  62. >     assertAbout(javaSource()).that(source)
  63.           .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  61.   
  62.       assertAbout(javaSource()).that(source)
  63. >         .withCompilerOptions("-Xlint:-processing")
  64.           .processedWith(new ButterKnifeProcessor())
  65.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   import static java.util.Arrays.asList;
  12.   
  13. > public class OnPageChangeTest {
  14.     @Test public void pageChange() {
  15.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   import static java.util.Arrays.asList;
  12.   
  13. > public class UnbinderTest {
  14.     @Test public void multipleBindings() {
  15.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.       public static final class attr {
  13. >         private attr() {}
  14.   
  15.           public static int alpha = 0x7f040001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.       public static final class attr {
  13. >         private attr() {}
  14.   
  15.           public static int alpha = 0x7f040001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:13: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  11.   
  12.       public static final class attr {
  13. >         private attr() {}
  14.   
  15.           public static int alpha = 0x7f040001;

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  13.   
  14.     FieldDrawableBinding(Id id, String name, Id tintAttributeId) {
  15. >     this.id = id;
  16.       this.name = name;
  17.       this.tintAttributeId = tintAttributeId;

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:16: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  14.     FieldDrawableBinding(Id id, String name, Id tintAttributeId) {
  15.       this.id = id;
  16. >     this.name = name;
  17.       this.tintAttributeId = tintAttributeId;
  18.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  15.       this.id = id;
  16.       this.name = name;
  17. >     this.tintAttributeId = tintAttributeId;
  18.     }
  19.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  12.     private final Id tintAttributeId;
  13.   
  14. >   FieldDrawableBinding(Id id, String name, Id tintAttributeId) {
  15.       this.id = id;
  16.       this.name = name;

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:14: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  12.   final class FieldResourceBinding implements ResourceBinding {
  13.     enum Type {
  14. >     BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:16: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16. >     COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18.       COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$27`.
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18. >     COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,
  19.           "getColorStateList", false, 1),
  20.           new ResourceMethod(null, "getColorStateList", false, 23)),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:23: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$47`.
  21.       DIMEN_AS_INT("getDimensionPixelSize"),
  22.       DIMEN_AS_FLOAT("getDimension"),
  23. >     FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),
  24.       INT("getInteger"),
  25.       INT_ARRAY("getIntArray"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$75`.
  11.   
  12.   final class FieldResourceBinding implements ResourceBinding {
  13. >   enum Type {
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  13.     enum Type {
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15. >     BOOL("getBoolean"),
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16. >     COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18.       COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16. >     COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18.       COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  12.   final class FieldResourceBinding implements ResourceBinding {
  13.     enum Type {
  14. >     BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16. >     COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18.       COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18. >     COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,
  19.           "getColorStateList", false, 1),
  20.           new ResourceMethod(null, "getColorStateList", false, 23)),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18. >     COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,
  19.           "getColorStateList", false, 1),
  20.           new ResourceMethod(null, "getColorStateList", false, 23)),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18. >     COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,
  19.           "getColorStateList", false, 1),
  20.           new ResourceMethod(null, "getColorStateList", false, 23)),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  19.           "getColorStateList", false, 1),
  20.           new ResourceMethod(null, "getColorStateList", false, 23)),
  21. >     DIMEN_AS_INT("getDimensionPixelSize"),
  22.       DIMEN_AS_FLOAT("getDimension"),
  23.       FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:22: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  20.           new ResourceMethod(null, "getColorStateList", false, 23)),
  21.       DIMEN_AS_INT("getDimensionPixelSize"),
  22. >     DIMEN_AS_FLOAT("getDimension"),
  23.       FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),
  24.       INT("getInteger"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  21.       DIMEN_AS_INT("getDimensionPixelSize"),
  22.       DIMEN_AS_FLOAT("getDimension"),
  23. >     FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),
  24.       INT("getInteger"),
  25.       INT_ARRAY("getIntArray"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  21.       DIMEN_AS_INT("getDimensionPixelSize"),
  22.       DIMEN_AS_FLOAT("getDimension"),
  23. >     FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),
  24.       INT("getInteger"),
  25.       INT_ARRAY("getIntArray"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  22.       DIMEN_AS_FLOAT("getDimension"),
  23.       FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),
  24. >     INT("getInteger"),
  25.       INT_ARRAY("getIntArray"),
  26.       STRING("getString"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  23.       FLOAT(new ResourceMethod(BindingSet.UTILS, "getFloat", false, 1)),
  24.       INT("getInteger"),
  25. >     INT_ARRAY("getIntArray"),
  26.       STRING("getString"),
  27.       STRING_ARRAY("getStringArray"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  24.       INT("getInteger"),
  25.       INT_ARRAY("getIntArray"),
  26. >     STRING("getString"),
  27.       STRING_ARRAY("getStringArray"),
  28.       TEXT_ARRAY("getTextArray"),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  25.       INT_ARRAY("getIntArray"),
  26.       STRING("getString"),
  27. >     STRING_ARRAY("getStringArray"),
  28.       TEXT_ARRAY("getTextArray"),
  29.       TYPED_ARRAY("obtainTypedArray");

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$69`.
  26.       STRING("getString"),
  27.       STRING_ARRAY("getStringArray"),
  28. >     TEXT_ARRAY("getTextArray"),
  29.       TYPED_ARRAY("obtainTypedArray");
  30.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  12.   final class FieldResourceBinding implements ResourceBinding {
  13.     enum Type {
  14. >     BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$72`.
  27.       STRING_ARRAY("getStringArray"),
  28.       TEXT_ARRAY("getTextArray"),
  29. >     TYPED_ARRAY("obtainTypedArray");
  30.   
  31.       private final ImmutableList<ResourceMethod> methods;

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:13: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$12`.
  11.   
  12.     /** Keep in sync with {@link android.graphics.Typeface} constants. */
  13. >   enum TypefaceStyles {
  14.       NORMAL(0),
  15.       BOLD(1),

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  12.     /** Keep in sync with {@link android.graphics.Typeface} constants. */
  13.     enum TypefaceStyles {
  14. >     NORMAL(0),
  15.       BOLD(1),
  16.       ITALIC(2),

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  13.     enum TypefaceStyles {
  14.       NORMAL(0),
  15. >     BOLD(1),
  16.       ITALIC(2),
  17.       BOLD_ITALIC(3);

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  14.       NORMAL(0),
  15.       BOLD(1),
  16. >     ITALIC(2),
  17.       BOLD_ITALIC(3);
  18.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  15.       BOLD(1),
  16.       ITALIC(2),
  17. >     BOLD_ITALIC(3);
  18.   
  19.       final int value;

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  13.   
  14.     public C(View view) {
  15. >     super(view);
  16.       ButterKnife.bind(this, view);
  17.     }

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  13.   
  14.     public H(View view) {
  15. >     super(view);
  16.       ButterKnife.bind(this, view);
  17.     }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `actions`.
  15.         @NonNull Action<? super T>... actions) {
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17. >       for (Action<? super T> action : actions) {
  18.           action.apply(list.get(i), i);
  19.         }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `action`.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  14.     @SafeVarargs public static <T extends View> void run(@NonNull List<T> list,
  15.         @NonNull Action<? super T>... actions) {
  16. >     for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18.           action.apply(list.get(i), i);

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

butterknife-runtime/src/main/java/butterknife/internal/DebouncingOnClickListener.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  16.         enabled = false;
  17.         v.post(ENABLE_AGAIN);
  18. >       doClick(v);
  19.       }
  20.     }

butterknife-runtime/src/main/java/butterknife/internal/DebouncingOnClickListener.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `v`.
  15.       if (enabled) {
  16.         enabled = false;
  17. >       v.post(ENABLE_AGAIN);
  18.         doClick(v);
  19.       }

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:14: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  12.   import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
  13.   
  14. > public class BindAnimTest {
  15.     @Test public void typeMustBeAnimation() {
  16.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:70: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$16`.
  68.   
  69.       assertAbout(javaSources())
  70. >         .that(asList(source, ANDROIDX_VIEW_PAGER))
  71.           .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:69: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  67.       );
  68.   
  69. >     assertAbout(javaSources())
  70.           .that(asList(source, ANDROIDX_VIEW_PAGER))
  71.           .withCompilerOptions("-Xlint:-processing")

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  69.       assertAbout(javaSources())
  70.           .that(asList(source, ANDROIDX_VIEW_PAGER))
  71. >         .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:72: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  70.           .that(asList(source, ANDROIDX_VIEW_PAGER))
  71.           .withCompilerOptions("-Xlint:-processing")
  72. >         .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()
  74.           .and()

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  69.       assertAbout(javaSources())
  70.           .that(asList(source, ANDROIDX_VIEW_PAGER))
  71. >         .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  71.           .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())
  73. >         .compilesWithoutWarnings()
  74.           .and()
  75.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  72.           .processedWith(new ButterKnifeProcessor())
  73.           .compilesWithoutWarnings()
  74. >         .and()
  75.           .generatesSources(bindingSource);
  76.     }

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  73.           .compilesWithoutWarnings()
  74.           .and()
  75. >         .generatesSources(bindingSource);
  76.     }
  77.   }

butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  68.   
  69.       assertAbout(javaSources())
  70. >         .that(asList(source, ANDROIDX_VIEW_PAGER))
  71.           .withCompilerOptions("-Xlint:-processing")
  72.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:78: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  76.       );
  77.   
  78. >     assertAbout(javaSource()).that(source)
  79.           .withCompilerOptions("-Xlint:-processing")
  80.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  78.       assertAbout(javaSource()).that(source)
  79.           .withCompilerOptions("-Xlint:-processing")
  80. >         .processedWith(new ButterKnifeProcessor())
  81.           .compilesWithoutWarnings()
  82.           .and()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  77.   
  78.       assertAbout(javaSource()).that(source)
  79. >         .withCompilerOptions("-Xlint:-processing")
  80.           .processedWith(new ButterKnifeProcessor())
  81.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:81: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  79.           .withCompilerOptions("-Xlint:-processing")
  80.           .processedWith(new ButterKnifeProcessor())
  81. >         .compilesWithoutWarnings()
  82.           .and()
  83.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:82: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  80.           .processedWith(new ButterKnifeProcessor())
  81.           .compilesWithoutWarnings()
  82. >         .and()
  83.           .generatesSources(bindingSource);
  84.     }

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  81.           .compilesWithoutWarnings()
  82.           .and()
  83. >         .generatesSources(bindingSource);
  84.     }
  85.   

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  76.       );
  77.   
  78. >     assertAbout(javaSource()).that(source)
  79.           .withCompilerOptions("-Xlint:-processing")
  80.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  77.   
  78.       assertAbout(javaSource()).that(source)
  79. >         .withCompilerOptions("-Xlint:-processing")
  80.           .processedWith(new ButterKnifeProcessor())
  81.           .compilesWithoutWarnings()

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  13.   import java.util.Locale;
  14.   
  15. > public class SimpleAdapter extends BaseAdapter {
  16.     private static final String[] CONTENTS = "The quick brown fox jumps over the lazy dog".split(" ");
  17.   

butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  14.   
  15.     public G(View view) {
  16. >     super(view);
  17.       ButterKnife.bind(this, view);
  18.     }

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:15: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  13.   
  14.     @Override public void unbind() {
  15. >     if (unbinders == null) {
  16.         throw new IllegalStateException("Bindings already cleared.");
  17.       }

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  19.         unbinder.unbind();
  20.       }
  21. >     unbinders = null;
  22.     }
  23.   }

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  14.     @Override public void unbind() {
  15.       if (unbinders == null) {
  16. >       throw new IllegalStateException("Bindings already cleared.");
  17.       }
  18.       for (Unbinder unbinder : unbinders) {

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  16.         throw new IllegalStateException("Bindings already cleared.");
  17.       }
  18. >     for (Unbinder unbinder : unbinders) {
  19.         unbinder.unbind();
  20.       }

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.CompositeUnbinder.unbinders`,dereference of pointer `this`.
  16.         throw new IllegalStateException("Bindings already cleared.");
  17.       }
  18. >     for (Unbinder unbinder : unbinders) {
  19.         unbinder.unbind();
  20.       }

butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:19: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbinder`.
  17.       }
  18.       for (Unbinder unbinder : unbinders) {
  19. >       unbinder.unbind();
  20.       }
  21.       unbinders = null;

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  24.       assertAbout(javaSource()).that(source)
  25.           .processedWith(new ButterKnifeProcessor())
  26. >         .failsToCompile()
  27.           .withErrorContaining("@BindAnim field type must be 'Animation'. (test.Test.one)")
  28.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  25.           .processedWith(new ButterKnifeProcessor())
  26.           .failsToCompile()
  27. >         .withErrorContaining("@BindAnim field type must be 'Animation'. (test.Test.one)")
  28.           .in(source).onLine(4);
  29.     }

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  26.           .failsToCompile()
  27.           .withErrorContaining("@BindAnim field type must be 'Animation'. (test.Test.one)")
  28. >         .in(source).onLine(4);
  29.     }
  30.   }

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  26.           .failsToCompile()
  27.           .withErrorContaining("@BindAnim field type must be 'Animation'. (test.Test.one)")
  28. >         .in(source).onLine(4);
  29.     }
  30.   }

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  22.       );
  23.   
  24. >     assertAbout(javaSource()).that(source)
  25.           .processedWith(new ButterKnifeProcessor())
  26.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  23.   
  24.       assertAbout(javaSource()).that(source)
  25. >         .processedWith(new ButterKnifeProcessor())
  26.           .failsToCompile()
  27.           .withErrorContaining("@BindAnim field type must be 'Animation'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindAnimTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  22.       );
  23.   
  24. >     assertAbout(javaSource()).that(source)
  25.           .processedWith(new ButterKnifeProcessor())
  26.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  13.   import static java.util.Arrays.asList;
  14.   
  15. > public class BindViewTest {
  16.     @Test public void bindingViewNonDebuggable() {
  17.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:15: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  13.   import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
  14.   
  15. > public class BindViewsTest {
  16.     @Test public void bindingArrayWithGenerics() {
  17.       JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  19.       this.target = target;
  20.   
  21. >     target.button1 = Utils.findRequiredView(source, android.R.id.button1, "field 'button1'");
  22.   
  23.       Context context = source.getContext();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:24: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  22.   
  23.       Context context = source.getContext();
  24. >     target.transparentColor = ContextCompat.getColor(context, android.R.color.transparent);
  25.     }
  26.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  17.       super(target, source.getContext());
  18.   
  19. >     this.target = target;
  20.   
  21.       target.button1 = Utils.findRequiredView(source, android.R.id.button1, "field 'button1'");

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  15.     @UiThread
  16.     public C_ViewBinding(C target, View source) {
  17. >     super(target, source.getContext());
  18.   
  19.       this.target = target;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  21.       target.button1 = Utils.findRequiredView(source, android.R.id.button1, "field 'button1'");
  22.   
  23. >     Context context = source.getContext();
  24.       target.transparentColor = ContextCompat.getColor(context, android.R.color.transparent);
  25.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  15.     @UiThread
  16.     public C_ViewBinding(C target, View source) {
  17. >     super(target, source.getContext());
  18.   
  19.       this.target = target;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  19.       this.target = target;
  20.   
  21. >     target.button3 = Utils.findRequiredView(source, android.R.id.button3, "field 'button3'");
  22.   
  23.       Context context = source.getContext();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:24: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  22.   
  23.       Context context = source.getContext();
  24. >     target.holoGreenDark = ContextCompat.getColor(context, android.R.color.holo_green_dark);
  25.     }
  26.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  17.       super(target, source);
  18.   
  19. >     this.target = target;
  20.   
  21.       target.button3 = Utils.findRequiredView(source, android.R.id.button3, "field 'button3'");

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  21.       target.button3 = Utils.findRequiredView(source, android.R.id.button3, "field 'button3'");
  22.   
  23. >     Context context = source.getContext();
  24.       target.holoGreenDark = ContextCompat.getColor(context, android.R.color.holo_green_dark);
  25.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  15.     @UiThread
  16.     public H_ViewBinding(H target, View source) {
  17. >     super(target, source);
  18.   
  19.       this.target = target;

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:16: warning: GRADUAL_DEREFERENCE
  method call on pointer `"The quick brown fox jumps over the lazy dog"`.
  14.   
  15.   public class SimpleAdapter extends BaseAdapter {
  16. >   private static final String[] CONTENTS = "The quick brown fox jumps over the lazy dog".split(" ");
  17.   
  18.     private final LayoutInflater inflater;

butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  15.   
  16.     @Override public void unbind() {
  17. >     trySet(field, target, null);
  18.     }
  19.   }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:52: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  50.       );
  51.   
  52. >     assertAbout(javaSource()).that(source)
  53.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  54.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  52.       assertAbout(javaSource()).that(source)
  53.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  54. >         .processedWith(new ButterKnifeProcessor())
  55.           .compilesWithoutWarnings()
  56.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  51.   
  52.       assertAbout(javaSource()).that(source)
  53. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  54.           .processedWith(new ButterKnifeProcessor())
  55.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  53.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  54.           .processedWith(new ButterKnifeProcessor())
  55. >         .compilesWithoutWarnings()
  56.           .and()
  57.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  54.           .processedWith(new ButterKnifeProcessor())
  55.           .compilesWithoutWarnings()
  56. >         .and()
  57.           .generatesSources(bindingSource);
  58.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  55.           .compilesWithoutWarnings()
  56.           .and()
  57. >         .generatesSources(bindingSource);
  58.     }
  59.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  50.       );
  51.   
  52. >     assertAbout(javaSource()).that(source)
  53.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  54.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  51.   
  52.       assertAbout(javaSource()).that(source)
  53. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  54.           .processedWith(new ButterKnifeProcessor())
  55.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:56: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  54.       );
  55.   
  56. >     assertAbout(javaSource()).that(source)
  57.           .withCompilerOptions("-Xlint:-processing")
  58.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  56.       assertAbout(javaSource()).that(source)
  57.           .withCompilerOptions("-Xlint:-processing")
  58. >         .processedWith(new ButterKnifeProcessor())
  59.           // found raw type: test.Test
  60.           //   missing type arguments for generic class test.Test<T>

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  55.   
  56.       assertAbout(javaSource()).that(source)
  57. >         .withCompilerOptions("-Xlint:-processing")
  58.           .processedWith(new ButterKnifeProcessor())
  59.           // found raw type: test.Test

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:61: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  59.           // found raw type: test.Test
  60.           //   missing type arguments for generic class test.Test<T>
  61. >         .compilesWithoutError()
  62.           .and()
  63.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  60.           //   missing type arguments for generic class test.Test<T>
  61.           .compilesWithoutError()
  62. >         .and()
  63.           .generatesSources(bindingSource);
  64.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  61.           .compilesWithoutError()
  62.           .and()
  63. >         .generatesSources(bindingSource);
  64.     }
  65.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  54.       );
  55.   
  56. >     assertAbout(javaSource()).that(source)
  57.           .withCompilerOptions("-Xlint:-processing")
  58.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  55.   
  56.       assertAbout(javaSource()).that(source)
  57. >         .withCompilerOptions("-Xlint:-processing")
  58.           .processedWith(new ButterKnifeProcessor())
  59.           // found raw type: test.Test

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:17: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  15.   
  16.     @Override public Id id() {
  17. >     return id;
  18.     }
  19.   

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  16.   
  17.     int getListenerPosition() {
  18. >     return listenerPosition;
  19.     }
  20.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:20: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  18.       this.target = target;
  19.   
  20. >     target.word = Utils.findRequiredViewAsType(source, R.id.word, "field 'word'", TextView.class);
  21.       target.length = Utils.findRequiredViewAsType(source, R.id.length, "field 'length'", TextView.class);
  22.       target.position = Utils.findRequiredViewAsType(source, R.id.position, "field 'position'", TextView.class);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  19.   
  20.       target.word = Utils.findRequiredViewAsType(source, R.id.word, "field 'word'", TextView.class);
  21. >     target.length = Utils.findRequiredViewAsType(source, R.id.length, "field 'length'", TextView.class);
  22.       target.position = Utils.findRequiredViewAsType(source, R.id.position, "field 'position'", TextView.class);
  23.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  20.       target.word = Utils.findRequiredViewAsType(source, R.id.word, "field 'word'", TextView.class);
  21.       target.length = Utils.findRequiredViewAsType(source, R.id.length, "field 'length'", TextView.class);
  22. >     target.position = Utils.findRequiredViewAsType(source, R.id.position, "field 'position'", TextView.class);
  23.     }
  24.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  16.     @UiThread
  17.     public SimpleAdapter$ViewHolder_ViewBinding(SimpleAdapter.ViewHolder target, View source) {
  18. >     this.target = target;
  19.   
  20.       target.word = Utils.findRequiredViewAsType(source, R.id.word, "field 'word'", TextView.class);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  15.   
  16.     @UiThread
  17. >   public SimpleAdapter$ViewHolder_ViewBinding(SimpleAdapter.ViewHolder target, View source) {
  18.       this.target = target;
  19.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/B_ViewBinding.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  16.     @UiThread
  17.     public B_ViewBinding(B target, View source) {
  18. >     this(target, source.getContext());
  19.     }
  20.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/B_ViewBinding.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  16.     @UiThread
  17.     public B_ViewBinding(B target, View source) {
  18. >     this(target, source.getContext());
  19.     }
  20.   

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  16.   
  17.     ListenerUnbinder(List<V> targets, Setter<V, L> setter, L listener) {
  18. >     this.targets = targets;
  19.       this.setter = setter;
  20.       this.listener = listener;

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  17.     ListenerUnbinder(List<V> targets, Setter<V, L> setter, L listener) {
  18.       this.targets = targets;
  19. >     this.setter = setter;
  20.       this.listener = listener;
  21.     }

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:20: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  18.       this.targets = targets;
  19.       this.setter = setter;
  20. >     this.listener = listener;
  21.     }
  22.   

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:17: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  15.     }
  16.   
  17. >   ListenerUnbinder(List<V> targets, Setter<V, L> setter, L listener) {
  18.       this.targets = targets;
  19.       this.setter = setter;

butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:18: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->butterknife.internal.ImmutableList.views`,dereference of pointer `this`.
  16.   
  17.     @Override public T get(int index) {
  18. >     return views[index];
  19.     }
  20.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  17.   
  18.       Kind(String factoryName) {
  19. >       this.factoryName = factoryName;
  20.       }
  21.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:18: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  16.       final String factoryName;
  17.   
  18. >     Kind(String factoryName) {
  19.         this.factoryName = factoryName;
  20.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:19: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  17.   
  18.     public String getName() {
  19. >     return name;
  20.     }
  21.   

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:20: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  18.   
  19.     Id(int value) {
  20. >     this(value, null);
  21.     }
  22.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:20: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  18.     ViewBinding(Id id, Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> methodBindings,
  19.         @Nullable FieldViewBinding fieldBinding) {
  20. >     this.id = id;
  21.       this.methodBindings = methodBindings;
  22.       this.fieldBinding = fieldBinding;

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  19.         @Nullable FieldViewBinding fieldBinding) {
  20.       this.id = id;
  21. >     this.methodBindings = methodBindings;
  22.       this.fieldBinding = fieldBinding;
  23.     }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  20.       this.id = id;
  21.       this.methodBindings = methodBindings;
  22. >     this.fieldBinding = fieldBinding;
  23.     }
  24.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:19: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  17.   
  18.     ViewBinding(Id id, Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> methodBindings,
  19. >       @Nullable FieldViewBinding fieldBinding) {
  20.       this.id = id;
  21.       this.methodBindings = methodBindings;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  23.   
  24.       View view;
  25. >     target.button2 = Utils.findRequiredView(source, android.R.id.button2, "field 'button2'");
  26.       view = Utils.findRequiredView(source, android.R.id.content, "method 'onClick'");
  27.       view1020002 = view;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  34.   
  35.       Context context = source.getContext();
  36. >     target.grayColor = ContextCompat.getColor(context, android.R.color.darker_gray);
  37.     }
  38.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  20.       super(target, source);
  21.   
  22. >     this.target = target;
  23.   
  24.       View view;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  25.       target.button2 = Utils.findRequiredView(source, android.R.id.button2, "field 'button2'");
  26.       view = Utils.findRequiredView(source, android.R.id.content, "method 'onClick'");
  27. >     view1020002 = view;
  28.       view.setOnClickListener(new DebouncingOnClickListener() {
  29.         @Override

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  26.       view = Utils.findRequiredView(source, android.R.id.content, "method 'onClick'");
  27.       view1020002 = view;
  28. >     view.setOnClickListener(new DebouncingOnClickListener() {
  29.         @Override
  30.         public void doClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  33.       });
  34.   
  35. >     Context context = source.getContext();
  36.       target.grayColor = ContextCompat.getColor(context, android.R.color.darker_gray);
  37.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:20: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  18.     @UiThread
  19.     public G_ViewBinding(final G target, View source) {
  20. >     super(target, source);
  21.   
  22.       this.target = target;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  26.       view = Utils.findRequiredView(source, android.R.id.content, "method 'onClick'");
  27.       view1020002 = view;
  28. >     view.setOnClickListener(new DebouncingOnClickListener() {
  29.         @Override
  30.         public void doClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/A_ViewBinding.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  19.     @UiThread
  20.     public A_ViewBinding(A target, View source) {
  21. >     this(target, source.getContext());
  22.     }
  23.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/A_ViewBinding.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  19.     @UiThread
  20.     public A_ViewBinding(A target, View source) {
  21. >     this(target, source.getContext());
  22.     }
  23.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  19.   
  20.     public SimpleAdapter(Context context) {
  21. >     inflater = LayoutInflater.from(context);
  22.     }
  23.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:20: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  18.     private final LayoutInflater inflater;
  19.   
  20. >   public SimpleAdapter(Context context) {
  21.       inflater = LayoutInflater.from(context);
  22.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:20: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  18.   @SuppressWarnings("WeakerAccess") // Used by generated code.
  19.   public final class Utils {
  20. >   private static final TypedValue VALUE = new TypedValue();
  21.   
  22.     @UiThread // Implicit synchronization for use of shared resource VALUE.

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:21: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  19.   
  20.     @Override public Id id() {
  21. >     return id;
  22.     }
  23.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  20.   
  21.       TypefaceStyles(int value) {
  22. >       this.value = value;
  23.       }
  24.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:21: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  19.       final int value;
  20.   
  21. >     TypefaceStyles(int value) {
  22.         this.value = value;
  23.       }

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  20.   
  21.     public String getName() {
  22. >     return name;
  23.     }
  24.   

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  20.   
  21.     TypeName getType() {
  22. >     return type;
  23.     }
  24.   

butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:22: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  20.   
  21.     @Override public int size() {
  22. >     return views.length;
  23.     }
  24.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:23: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  21.   
  22.     public TypeName getType() {
  23. >     return type;
  24.     }
  25.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/B_ViewBinding.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  23.       super(target, context);
  24.   
  25. >     target.whiteColor = ContextCompat.getColor(context, android.R.color.white);
  26.     }
  27.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/B_ViewBinding.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  21.     @UiThread
  22.     public B_ViewBinding(B target, Context context) {
  23. >     super(target, context);
  24.   
  25.       target.whiteColor = ContextCompat.getColor(context, android.R.color.white);

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `$T1_108`.
  30.         this.code = className.topLevelClassName().equals(ANDROID_R)
  31.           ? CodeBlock.of("$L.$N", className, resourceName)
  32. >         : CodeBlock.of("$T.$N", className, resourceName);
  33.         this.qualifed = true;
  34.       } else {

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  25.       if (rSymbol != null) {
  26.         ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27. >           rSymbol.enclClass().name.toString());
  28.         String resourceName = rSymbol.name.toString();
  29.   

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$40`.
  28.         String resourceName = rSymbol.name.toString();
  29.   
  30. >       this.code = className.topLevelClassName().equals(ANDROID_R)
  31.           ? CodeBlock.of("$L.$N", className, resourceName)
  32.           : CodeBlock.of("$T.$N", className, resourceName);

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$49`.
  29.   
  30.         this.code = className.topLevelClassName().equals(ANDROID_R)
  31. >         ? CodeBlock.of("$L.$N", className, resourceName)
  32.           : CodeBlock.of("$T.$N", className, resourceName);
  33.         this.qualifed = true;

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:35: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$61`.
  33.         this.qualifed = true;
  34.       } else {
  35. >       this.code = CodeBlock.of("$L", value);
  36.         this.qualifed = false;
  37.       }

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:24: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  22.   
  23.     Id(int value, @Nullable Symbol rSymbol) {
  24. >     this.value = value;
  25.       if (rSymbol != null) {
  26.         ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  31.           ? CodeBlock.of("$L.$N", className, resourceName)
  32.           : CodeBlock.of("$T.$N", className, resourceName);
  33. >       this.qualifed = true;
  34.       } else {
  35.         this.code = CodeBlock.of("$L", value);

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:35: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  33.         this.qualifed = true;
  34.       } else {
  35. >       this.code = CodeBlock.of("$L", value);
  36.         this.qualifed = false;
  37.       }

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.       } else {
  35.         this.code = CodeBlock.of("$L", value);
  36. >       this.qualifed = false;
  37.       }
  38.     }

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `className`.
  28.         String resourceName = rSymbol.name.toString();
  29.   
  30. >       this.code = className.topLevelClassName().equals(ANDROID_R)
  31.           ? CodeBlock.of("$L.$N", className, resourceName)
  32.           : CodeBlock.of("$T.$N", className, resourceName);

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  24.       this.value = value;
  25.       if (rSymbol != null) {
  26. >       ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27.             rSymbol.enclClass().name.toString());
  28.         String resourceName = rSymbol.name.toString();

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17->com.sun.tools.javac.code.Symbol.name`,dereference of pointer `n$17`.
  25.       if (rSymbol != null) {
  26.         ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27. >           rSymbol.enclClass().name.toString());
  28.         String resourceName = rSymbol.name.toString();
  29.   

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  28.         String resourceName = rSymbol.name.toString();
  29.   
  30. >       this.code = className.topLevelClassName().equals(ANDROID_R)
  31.           ? CodeBlock.of("$L.$N", className, resourceName)
  32.           : CodeBlock.of("$T.$N", className, resourceName);

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  24.       this.value = value;
  25.       if (rSymbol != null) {
  26. >       ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27.             rSymbol.enclClass().name.toString());
  28.         String resourceName = rSymbol.name.toString();

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `rSymbol->com.sun.tools.javac.code.Symbol.name`,dereference of pointer `rSymbol`.
  26.         ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27.             rSymbol.enclClass().name.toString());
  28. >       String resourceName = rSymbol.name.toString();
  29.   
  30.         this.code = className.topLevelClassName().equals(ANDROID_R)

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `rSymbol`.
  24.       this.value = value;
  25.       if (rSymbol != null) {
  26. >       ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27.             rSymbol.enclClass().name.toString());
  28.         String resourceName = rSymbol.name.toString();

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `rSymbol`.
  25.       if (rSymbol != null) {
  26.         ClassName className = ClassName.get(rSymbol.packge().getQualifiedName().toString(), R,
  27. >           rSymbol.enclClass().name.toString());
  28.         String resourceName = rSymbol.name.toString();
  29.   

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:23: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  21.     }
  22.   
  23. >   Id(int value, @Nullable Symbol rSymbol) {
  24.       this.value = value;
  25.       if (rSymbol != null) {

butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:24: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  22.   
  23.     @Override public void unbind() {
  24. >     ViewCollections.set(targets, setter, listener);
  25.     }
  26.   }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `internal.Utils.butterknife.internal.Utils.VALUE`.
  34.       Drawable drawable = ContextCompat.getDrawable(context, id);
  35.       drawable = DrawableCompat.wrap(drawable.mutate());
  36. >     int color = ContextCompat.getColor(context, VALUE.resourceId);
  37.       DrawableCompat.setTint(drawable, color);
  38.       return drawable;

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  23.     public static Drawable getTintedDrawable(Context context,
  24.         @DrawableRes int id, @AttrRes int tintAttrId) {
  25. >     boolean attributeFound = context.getTheme().resolveAttribute(tintAttrId, VALUE, true);
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `drawable`.
  33.   
  34.       Drawable drawable = ContextCompat.getDrawable(context, id);
  35. >     drawable = DrawableCompat.wrap(drawable.mutate());
  36.       int color = ContextCompat.getColor(context, VALUE.resourceId);
  37.       DrawableCompat.setTint(drawable, color);

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  23.     public static Drawable getTintedDrawable(Context context,
  24.         @DrawableRes int id, @AttrRes int tintAttrId) {
  25. >     boolean attributeFound = context.getTheme().resolveAttribute(tintAttrId, VALUE, true);
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  26.       if (!attributeFound) {
  27.         throw new Resources.NotFoundException("Required tint color attribute with name "
  28. >           + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "
  30.             + tintAttrId

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  25.       boolean attributeFound = context.getTheme().resolveAttribute(tintAttrId, VALUE, true);
  26.       if (!attributeFound) {
  27. >       throw new Resources.NotFoundException("Required tint color attribute with name "
  28.             + context.getResources().getResourceEntryName(tintAttrId)
  29.             + " and attribute ID "

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:24: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  22.   
  23.     @Test public void arrayFilteringNullRemovesNulls() {
  24. >     assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$109`.
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30. >     assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }
  32.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  23.     @Test public void arrayFilteringNullRemovesNulls() {
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25. >     assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$22`.
  23.     @Test public void arrayFilteringNullRemovesNulls() {
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25. >     assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$28`.
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26. >     assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26. >     assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`.
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27. >     assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$56`.
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27. >     assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$62`.
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28. >     assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$73`.
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28. >     assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$80`.
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29. >     assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$91`.
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29. >     assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$98`.
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30. >     assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }
  32.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$105`.
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30. >     assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }
  32.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$108`.
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30. >     assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }
  32.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  23.     @Test public void arrayFilteringNullRemovesNulls() {
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25. >     assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  23.     @Test public void arrayFilteringNullRemovesNulls() {
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25. >     assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26. >     assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  24.       assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26. >     assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27. >     assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27. >     assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$69`.
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28. >     assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$72`.
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28. >     assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29.       assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:24: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  22.   
  23.     @Test public void arrayFilteringNullRemovesNulls() {
  24. >     assertThat(arrayFilteringNull(null, null, null)).isEmpty();
  25.       assertThat(arrayFilteringNull("One", null, null)).asList().containsExactly("One");
  26.       assertThat(arrayFilteringNull(null, "One", null)).asList().containsExactly("One");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$87`.
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29. >     assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  27.       assertThat(arrayFilteringNull(null, null, "One")).asList().containsExactly("One");
  28.       assertThat(arrayFilteringNull("One", "Two", null)).asList().containsExactly("One", "Two");
  29. >     assertThat(arrayFilteringNull("One", null, "Two")).asList().containsExactly("One", "Two");
  30.       assertThat(arrayFilteringNull(null, "One", "Two")).asList().containsExactly("One", "Two");
  31.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  23.   
  24.     @Override public CodeBlock render(int sdk) {
  25. >     return CodeBlock.of("target.$L = $T.loadAnimation(context, $L)", name, ANIMATION_UTILS,
  26.               id.code);
  27.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`,dereference of pointer `this->butterknife.compiler.FieldAnimationBinding.id`,dereference of pointer `this`.
  23.   
  24.     @Override public CodeBlock render(int sdk) {
  25. >     return CodeBlock.of("target.$L = $T.loadAnimation(context, $L)", name, ANIMATION_UTILS,
  26.               id.code);
  27.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:25: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`,dereference of pointer `this`.
  23.   
  24.     @Override public CodeBlock render(int sdk) {
  25. >     return CodeBlock.of("target.$L = $T.loadAnimation(context, $L)", name, ANIMATION_UTILS,
  26.               id.code);
  27.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  24.   
  25.       @Nullable static TypefaceStyles fromValue(int value) {
  26. >       for (TypefaceStyles style : values()) {
  27.           if (style.value == value) {
  28.             return style;

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `style`.
  25.       @Nullable static TypefaceStyles fromValue(int value) {
  26.         for (TypefaceStyles style : values()) {
  27. >         if (style.value == value) {
  28.             return style;
  29.           }

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  24.   
  25.     public List<Parameter> getParameters() {
  26. >     return parameters;
  27.     }
  28.   

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  24.   
  25.     public boolean requiresCast(String toType) {
  26. >     return !type.toString().equals(toType);
  27.     }
  28.   }

butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.Parameter.type`,dereference of pointer `this`.
  24.   
  25.     public boolean requiresCast(String toType) {
  26. >     return !type.toString().equals(toType);
  27.     }
  28.   }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  24.   
  25.     public Id getId() {
  26. >     return id;
  27.     }
  28.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/A_ViewBinding.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  24.     @UiThread
  25.     public A_ViewBinding(A target, Context context) {
  26. >     target.blackColor = ContextCompat.getColor(context, android.R.color.black);
  27.     }
  28.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/A_ViewBinding.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  23.   
  24.     @UiThread
  25. >   public A_ViewBinding(A target, Context context) {
  26.       target.blackColor = ContextCompat.getColor(context, android.R.color.black);
  27.     }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:25: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  23.   import static android.widget.Toast.LENGTH_SHORT;
  24.   
  25. > public class SimpleActivity extends Activity {
  26.     private static final Action<View> ALPHA_FADE = (view, index) -> {
  27.       AlphaAnimation alphaAnimation = new AlphaAnimation(0, 1);

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `actions`.
  26.         @NonNull Action<? super T>... actions) {
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28. >       for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);
  30.         }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `action`,dereference of pointer `array`.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->butterknife.internal.ImmutableList.views`,dereference of pointer `this`.
  24.   
  25.     @Override public boolean contains(Object o) {
  26. >     for (T view : views) {
  27.         if (view == o) {
  28.           return true;

butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:26: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  24.   
  25.     @Override public boolean contains(Object o) {
  26. >     for (T view : views) {
  27.         if (view == o) {
  28.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->butterknife.compiler.FieldViewBinding.type`,dereference of pointer `this`.
  26.     public ClassName getRawType() {
  27.       if (type instanceof ParameterizedTypeName) {
  28. >       return ((ParameterizedTypeName) type).rawType;
  29.       }
  30.       return (ClassName) type;

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  25.   
  26.     public ClassName getRawType() {
  27. >     if (type instanceof ParameterizedTypeName) {
  28.         return ((ParameterizedTypeName) type).rawType;
  29.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  28.         return ((ParameterizedTypeName) type).rawType;
  29.       }
  30. >     return (ClassName) type;
  31.     }
  32.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:26: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  24.     }
  25.   
  26. >   private static class TestViewBinding implements MemberViewBinding {
  27.       private final String description;
  28.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  29.       this.target = null;
  30.   
  31. >     target.word = null;
  32.       target.length = null;
  33.       target.position = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  30.   
  31.       target.word = null;
  32. >     target.length = null;
  33.       target.position = null;
  34.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  31.       target.word = null;
  32.       target.length = null;
  33. >     target.position = null;
  34.     }
  35.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:27: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  25.     @Override
  26.     public void unbind() {
  27. >     SimpleAdapter.ViewHolder target = this.target;
  28.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  29.       this.target = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  27.       SimpleAdapter.ViewHolder target = this.target;
  28.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  29. >     this.target = null;
  30.   
  31.       target.word = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleAdapter$ViewHolder_ViewBinding.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  26.     public void unbind() {
  27.       SimpleAdapter.ViewHolder target = this.target;
  28. >     if (target == null) throw new IllegalStateException("Bindings already cleared.");
  29.       this.target = null;
  30.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:28: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  26.       view = Utils.findRequiredView(source, android.R.id.content, "method 'onClick'");
  27.       view1020002 = view;
  28. >     view.setOnClickListener(new DebouncingOnClickListener() {
  29.         @Override
  30.         public void doClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  26.       view = Utils.findRequiredView(source, android.R.id.content, "method 'onClick'");
  27.       view1020002 = view;
  28. >     view.setOnClickListener(new DebouncingOnClickListener() {
  29.         @Override
  30.         public void doClick(View p0) {

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `alphaAnimation`.
  26.     private static final Action<View> ALPHA_FADE = (view, index) -> {
  27.       AlphaAnimation alphaAnimation = new AlphaAnimation(0, 1);
  28. >     alphaAnimation.setFillBefore(true);
  29.       alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `alphaAnimation`.
  27.       AlphaAnimation alphaAnimation = new AlphaAnimation(0, 1);
  28.       alphaAnimation.setFillBefore(true);
  29. >     alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);
  31.       view.startAnimation(alphaAnimation);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `alphaAnimation`.
  28.       alphaAnimation.setFillBefore(true);
  29.       alphaAnimation.setDuration(500);
  30. >     alphaAnimation.setStartOffset(index * 100);
  31.       view.startAnimation(alphaAnimation);
  32.     };

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:27: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  25.   public class SimpleActivity extends Activity {
  26.     private static final Action<View> ALPHA_FADE = (view, index) -> {
  27. >     AlphaAnimation alphaAnimation = new AlphaAnimation(0, 1);
  28.       alphaAnimation.setFillBefore(true);
  29.       alphaAnimation.setDuration(500);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:31: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  29.       alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);
  31. >     view.startAnimation(alphaAnimation);
  32.     };
  33.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$21`,dereference of pointer `this->butterknife.compiler.FieldDrawableBinding.id`,dereference of pointer `this`.
  32.       }
  33.       if (sdk >= 21) {
  34. >       return CodeBlock.of("target.$L = context.getDrawable($L)", name, id.code);
  35.       }
  36.       return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name, CONTEXT_COMPAT, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$21`,dereference of pointer `this`.
  32.       }
  33.       if (sdk >= 21) {
  34. >       return CodeBlock.of("target.$L = context.getDrawable($L)", name, id.code);
  35.       }
  36.       return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name, CONTEXT_COMPAT, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$32`.
  34.         return CodeBlock.of("target.$L = context.getDrawable($L)", name, id.code);
  35.       }
  36. >     return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name, CONTEXT_COMPAT, id.code);
  37.     }
  38.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$32`,dereference of pointer `this->butterknife.compiler.FieldDrawableBinding.id`,dereference of pointer `this`.
  34.         return CodeBlock.of("target.$L = context.getDrawable($L)", name, id.code);
  35.       }
  36. >     return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name, CONTEXT_COMPAT, id.code);
  37.     }
  38.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$32`,dereference of pointer `this`.
  34.         return CodeBlock.of("target.$L = context.getDrawable($L)", name, id.code);
  35.       }
  36. >     return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name, CONTEXT_COMPAT, id.code);
  37.     }
  38.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$3`.
  28.     @Override public CodeBlock render(int sdk) {
  29.       if (tintAttributeId.value != NO_RES_ID) {
  30. >       return CodeBlock.of("target.$L = $T.getTintedDrawable(context, $L, $L)", name, UTILS, id.code,
  31.             tintAttributeId.code);
  32.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$3`,dereference of pointer `this->butterknife.compiler.FieldDrawableBinding.id`,dereference of pointer `this`.
  28.     @Override public CodeBlock render(int sdk) {
  29.       if (tintAttributeId.value != NO_RES_ID) {
  30. >       return CodeBlock.of("target.$L = $T.getTintedDrawable(context, $L, $L)", name, UTILS, id.code,
  31.             tintAttributeId.code);
  32.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$3`,dereference of pointer `this->butterknife.compiler.FieldDrawableBinding.tintAttributeId`,dereference of pointer `this`.
  28.     @Override public CodeBlock render(int sdk) {
  29.       if (tintAttributeId.value != NO_RES_ID) {
  30. >       return CodeBlock.of("target.$L = $T.getTintedDrawable(context, $L, $L)", name, UTILS, id.code,
  31.             tintAttributeId.code);
  32.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$3`,dereference of pointer `this`.
  28.     @Override public CodeBlock render(int sdk) {
  29.       if (tintAttributeId.value != NO_RES_ID) {
  30. >       return CodeBlock.of("target.$L = $T.getTintedDrawable(context, $L, $L)", name, UTILS, id.code,
  31.             tintAttributeId.code);
  32.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->butterknife.compiler.FieldDrawableBinding.tintAttributeId`,dereference of pointer `this`.
  27.   
  28.     @Override public CodeBlock render(int sdk) {
  29. >     if (tintAttributeId.value != NO_RES_ID) {
  30.         return CodeBlock.of("target.$L = $T.getTintedDrawable(context, $L, $L)", name, UTILS, id.code,
  31.             tintAttributeId.code);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  27.     @UiThread
  28.     public SimpleActivity_ViewBinding(SimpleActivity target) {
  29. >     this(target, target.getWindow().getDecorView());
  30.     }
  31.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `target`.
  27.     @UiThread
  28.     public SimpleActivity_ViewBinding(SimpleActivity target) {
  29. >     this(target, target.getWindow().getDecorView());
  30.     }
  31.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.     @UiThread
  28.     public SimpleActivity_ViewBinding(SimpleActivity target) {
  29. >     this(target, target.getWindow().getDecorView());
  30.     }
  31.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  31.       this.target = null;
  32.   
  33. >     target.button1 = null;
  34.   
  35.       super.unbind();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  27.     @Override
  28.     public void unbind() {
  29. >     C target = this.target;
  30.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  31.       this.target = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  29.       C target = this.target;
  30.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  31. >     this.target = null;
  32.   
  33.       target.button1 = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  28.     public void unbind() {
  29.       C target = this.target;
  30. >     if (target == null) throw new IllegalStateException("Bindings already cleared.");
  31.       this.target = null;
  32.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/C_ViewBinding.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  33.       target.button1 = null;
  34.   
  35. >     super.unbind();
  36.     }
  37.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  31.       this.target = null;
  32.   
  33. >     target.button3 = null;
  34.   
  35.       super.unbind();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  27.     @Override
  28.     public void unbind() {
  29. >     H target = this.target;
  30.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  31.       this.target = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  29.       H target = this.target;
  30.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  31. >     this.target = null;
  32.   
  33.       target.button3 = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  28.     public void unbind() {
  29.       H target = this.target;
  30. >     if (target == null) throw new IllegalStateException("Bindings already cleared.");
  31.       this.target = null;
  32.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/H_ViewBinding.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  33.       target.button3 = null;
  34.   
  35. >     super.unbind();
  36.     }
  37.   }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:29: warning: GRADUAL_DEREFERENCE
  dereference of pointer `library.SimpleAdapter.com.example.butterknife.library.SimpleAdapter.CONTENTS`.
  27.   
  28.     @Override public String getItem(int position) {
  29. >     return CONTENTS[position];
  30.     }
  31.   

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:28: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  26.    * Custom lint rule to make sure that generated R2 is not referenced outside annotations.
  27.    */
  28. > public class InvalidR2UsageDetector extends Detector implements Detector.UastScanner {
  29.     private static final String LINT_ERROR_BODY = "R2 should only be used inside annotations";
  30.     private static final String LINT_ERROR_TITLE = "Invalid usage of R2";

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:31: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  29.     FieldCollectionViewBinding(String name, TypeName type, Kind kind, List<Id> ids,
  30.         boolean required) {
  31. >     this.name = name;
  32.       this.type = type;
  33.       this.kind = kind;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  30.         boolean required) {
  31.       this.name = name;
  32. >     this.type = type;
  33.       this.kind = kind;
  34.       this.ids = ids;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:33: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  31.       this.name = name;
  32.       this.type = type;
  33. >     this.kind = kind;
  34.       this.ids = ids;
  35.       this.required = required;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  32.       this.type = type;
  33.       this.kind = kind;
  34. >     this.ids = ids;
  35.       this.required = required;
  36.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:35: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  33.       this.kind = kind;
  34.       this.ids = ids;
  35. >     this.required = required;
  36.     }
  37.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  28.   
  29.     FieldCollectionViewBinding(String name, TypeName type, Kind kind, List<Id> ids,
  30. >       boolean required) {
  31.       this.name = name;
  32.       this.type = type;

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  28.   
  29.     @Override public String getDescription() {
  30. >     return "method '" + name + "'";
  31.     }
  32.   

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  28.   
  29.     @Override public String getDescription() {
  30. >     return "method '" + name + "'";
  31.     }
  32.   

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`,dereference of pointer `this`.
  28.   
  29.     @Override public String getDescription() {
  30. >     return "method '" + name + "'";
  31.     }
  32.   

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  28.   
  29.     @Override public String getDescription() {
  30. >     return "method '" + name + "'";
  31.     }
  32.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  28.   
  29.     public @Nullable FieldViewBinding getFieldBinding() {
  30. >     return fieldBinding;
  31.     }
  32.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:30: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  28.   
  29.       private TestViewBinding(String description) {
  30. >       this.description = description;
  31.       }
  32.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       private final String description;
  28.   
  29. >     private TestViewBinding(String description) {
  30.         this.description = description;
  31.       }

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       }
  28.       public static final class color {
  29. >         private color() {}
  30.   
  31.           public static int notification_action_color_filter = 0x7f060001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       }
  28.       public static final class color {
  29. >         private color() {}
  30.   
  31.           public static int notification_action_color_filter = 0x7f060001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       }
  28.       public static final class color {
  29. >         private color() {}
  30.   
  31.           public static int notification_action_color_filter = 0x7f060001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       }
  28.       public static final class color {
  29. >         private color() {}
  30.   
  31.           public static int notification_action_color_filter = 0x7f060001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       }
  28.       public static final class color {
  29. >         private color() {}
  30.   
  31.           public static int notification_action_color_filter = 0x7f060001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:29: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  27.       }
  28.       public static final class color {
  29. >         private color() {}
  30.   
  31.           public static int notification_action_color_filter = 0x7f060001;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:31: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.unbinder.G_ViewBinding$1.val$target`,dereference of pointer `this`.
  29.         @Override
  30.         public void doClick(View p0) {
  31. >         target.onClick();
  32.         }
  33.       });

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:32: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  30.     private static final String LINT_ERROR_TITLE = "Invalid usage of R2";
  31.     private static final String ISSUE_ID = "InvalidR2Usage";
  32. >   private static final Set<String> SUPPORTED_TYPES =
  33.         ImmutableSet.of("array", "attr", "bool", "color", "dimen", "drawable", "id", "integer",
  34.             "string");

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:36: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  34.             "string");
  35.   
  36. >   static final Issue ISSUE =
  37.         Issue.create(ISSUE_ID, LINT_ERROR_TITLE, LINT_ERROR_BODY, Category.CORRECTNESS, 6,
  38.             Severity.ERROR, new Implementation(InvalidR2UsageDetector.class, Scope.JAVA_FILE_SCOPE));

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.         Collections.sort(methodList);
  37.         Collections.reverse(methodList);
  38. >       this.methods = ImmutableList.copyOf(methodList);
  39.       }
  40.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  32.   
  33.       Type(ResourceMethod... methods) {
  34. >       List<ResourceMethod> methodList = new ArrayList<>(methods.length);
  35.         Collections.addAll(methodList, methods);
  36.         Collections.sort(methodList);

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  31.       private final ImmutableList<ResourceMethod> methods;
  32.   
  33. >     Type(ResourceMethod... methods) {
  34.         List<ResourceMethod> methodList = new ArrayList<>(methods.length);
  35.         Collections.addAll(methodList, methods);

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  32.   
  33.     @Override public String getDescription() {
  34. >     return "field '" + name + "'";
  35.     }
  36.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  32.   
  33.     @Override public String getDescription() {
  34. >     return "field '" + name + "'";
  35.     }
  36.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`,dereference of pointer `this`.
  32.   
  33.     @Override public String getDescription() {
  34. >     return "field '" + name + "'";
  35.     }
  36.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  32.   
  33.     @Override public String getDescription() {
  34. >     return "field '" + name + "'";
  35.     }
  36.   

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  32.   
  33.     public boolean isRequired() {
  34. >     return required;
  35.     }
  36.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  32.   
  33.     public Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> getMethodBindings() {
  34. >     return methodBindings;
  35.     }
  36.   

butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  32.   
  33.       @Override public String getDescription() {
  34. >       return description;
  35.       }
  36.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:65: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$62`.
  63.       target.footer = Utils.findRequiredViewAsType(source, R.id.footer, "field 'footer'", TextView.class);
  64.       target.headerViews = Utils.listFilteringNull(
  65. >         Utils.findRequiredView(source, R.id.title, "field 'headerViews'"), 
  66.           Utils.findRequiredView(source, R.id.subtitle, "field 'headerViews'"), 
  67.           Utils.findRequiredView(source, R.id.hello, "field 'headerViews'"));

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:66: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$62`.
  64.       target.headerViews = Utils.listFilteringNull(
  65.           Utils.findRequiredView(source, R.id.title, "field 'headerViews'"), 
  66. >         Utils.findRequiredView(source, R.id.subtitle, "field 'headerViews'"), 
  67.           Utils.findRequiredView(source, R.id.hello, "field 'headerViews'"));
  68.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:67: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$62`.
  65.           Utils.findRequiredView(source, R.id.title, "field 'headerViews'"), 
  66.           Utils.findRequiredView(source, R.id.subtitle, "field 'headerViews'"), 
  67. >         Utils.findRequiredView(source, R.id.hello, "field 'headerViews'"));
  68.   
  69.       Context context = source.getContext();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:37: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  35.   
  36.       View view;
  37. >     target.title = Utils.findRequiredViewAsType(source, R.id.title, "field 'title'", TextView.class);
  38.       target.subtitle = Utils.findRequiredViewAsType(source, R.id.subtitle, "field 'subtitle'", TextView.class);
  39.       view = Utils.findRequiredView(source, R.id.hello, "field 'hello', method 'sayHello', and method 'sayGetOffMe'");

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  36.       View view;
  37.       target.title = Utils.findRequiredViewAsType(source, R.id.title, "field 'title'", TextView.class);
  38. >     target.subtitle = Utils.findRequiredViewAsType(source, R.id.subtitle, "field 'subtitle'", TextView.class);
  39.       view = Utils.findRequiredView(source, R.id.hello, "field 'hello', method 'sayHello', and method 'sayGetOffMe'");
  40.       target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:40: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  38.       target.subtitle = Utils.findRequiredViewAsType(source, R.id.subtitle, "field 'subtitle'", TextView.class);
  39.       view = Utils.findRequiredView(source, R.id.hello, "field 'hello', method 'sayHello', and method 'sayGetOffMe'");
  40. >     target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);
  41.       view7f08001d = view;
  42.       view.setOnClickListener(new DebouncingOnClickListener() {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  53.       });
  54.       view = Utils.findRequiredView(source, R.id.list_of_things, "field 'listOfThings' and method 'onItemClick'");
  55. >     target.listOfThings = Utils.castView(view, R.id.list_of_things, "field 'listOfThings'", ListView.class);
  56.       view7f08001e = view;
  57.       ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:63: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  61.         }
  62.       });
  63. >     target.footer = Utils.findRequiredViewAsType(source, R.id.footer, "field 'footer'", TextView.class);
  64.       target.headerViews = Utils.listFilteringNull(
  65.           Utils.findRequiredView(source, R.id.title, "field 'headerViews'"), 

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:64: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  62.       });
  63.       target.footer = Utils.findRequiredViewAsType(source, R.id.footer, "field 'footer'", TextView.class);
  64. >     target.headerViews = Utils.listFilteringNull(
  65.           Utils.findRequiredView(source, R.id.title, "field 'headerViews'"), 
  66.           Utils.findRequiredView(source, R.id.subtitle, "field 'headerViews'"), 

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:71: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  69.       Context context = source.getContext();
  70.       Resources res = context.getResources();
  71. >     target.butterKnife = res.getString(R.string.app_name);
  72.       target.fieldMethod = res.getString(R.string.field_method);
  73.       target.byJakeWharton = res.getString(R.string.by_jake_wharton);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:72: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  70.       Resources res = context.getResources();
  71.       target.butterKnife = res.getString(R.string.app_name);
  72. >     target.fieldMethod = res.getString(R.string.field_method);
  73.       target.byJakeWharton = res.getString(R.string.by_jake_wharton);
  74.       target.sayHello = res.getString(R.string.say_hello);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:73: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  71.       target.butterKnife = res.getString(R.string.app_name);
  72.       target.fieldMethod = res.getString(R.string.field_method);
  73. >     target.byJakeWharton = res.getString(R.string.by_jake_wharton);
  74.       target.sayHello = res.getString(R.string.say_hello);
  75.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:74: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  72.       target.fieldMethod = res.getString(R.string.field_method);
  73.       target.byJakeWharton = res.getString(R.string.by_jake_wharton);
  74. >     target.sayHello = res.getString(R.string.say_hello);
  75.     }
  76.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  32.     @UiThread
  33.     public SimpleActivity_ViewBinding(final SimpleActivity target, View source) {
  34. >     this.target = target;
  35.   
  36.       View view;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:41: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  39.       view = Utils.findRequiredView(source, R.id.hello, "field 'hello', method 'sayHello', and method 'sayGetOffMe'");
  40.       target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);
  41. >     view7f08001d = view;
  42.       view.setOnClickListener(new DebouncingOnClickListener() {
  43.         @Override

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:56: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  54.       view = Utils.findRequiredView(source, R.id.list_of_things, "field 'listOfThings' and method 'onItemClick'");
  55.       target.listOfThings = Utils.castView(view, R.id.list_of_things, "field 'listOfThings'", ListView.class);
  56. >     view7f08001e = view;
  57.       ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {
  58.         @Override

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  68.   
  69.       Context context = source.getContext();
  70. >     Resources res = context.getResources();
  71.       target.butterKnife = res.getString(R.string.app_name);
  72.       target.fieldMethod = res.getString(R.string.field_method);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  40.       target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);
  41.       view7f08001d = view;
  42. >     view.setOnClickListener(new DebouncingOnClickListener() {
  43.         @Override
  44.         public void doClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  46.         }
  47.       });
  48. >     view.setOnLongClickListener(new View.OnLongClickListener() {
  49.         @Override
  50.         public boolean onLongClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  55.       target.listOfThings = Utils.castView(view, R.id.list_of_things, "field 'listOfThings'", ListView.class);
  56.       view7f08001e = view;
  57. >     ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {
  58.         @Override
  59.         public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `res`.
  69.       Context context = source.getContext();
  70.       Resources res = context.getResources();
  71. >     target.butterKnife = res.getString(R.string.app_name);
  72.       target.fieldMethod = res.getString(R.string.field_method);
  73.       target.byJakeWharton = res.getString(R.string.by_jake_wharton);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:72: warning: GRADUAL_DEREFERENCE
  method call on pointer `res`.
  70.       Resources res = context.getResources();
  71.       target.butterKnife = res.getString(R.string.app_name);
  72. >     target.fieldMethod = res.getString(R.string.field_method);
  73.       target.byJakeWharton = res.getString(R.string.by_jake_wharton);
  74.       target.sayHello = res.getString(R.string.say_hello);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `res`.
  71.       target.butterKnife = res.getString(R.string.app_name);
  72.       target.fieldMethod = res.getString(R.string.field_method);
  73. >     target.byJakeWharton = res.getString(R.string.by_jake_wharton);
  74.       target.sayHello = res.getString(R.string.say_hello);
  75.     }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `res`.
  72.       target.fieldMethod = res.getString(R.string.field_method);
  73.       target.byJakeWharton = res.getString(R.string.by_jake_wharton);
  74. >     target.sayHello = res.getString(R.string.say_hello);
  75.     }
  76.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  67.           Utils.findRequiredView(source, R.id.hello, "field 'headerViews'"));
  68.   
  69. >     Context context = source.getContext();
  70.       Resources res = context.getResources();
  71.       target.butterKnife = res.getString(R.string.app_name);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:33: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  31.   
  32.     @UiThread
  33. >   public SimpleActivity_ViewBinding(final SimpleActivity target, View source) {
  34.       this.target = target;
  35.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  40.       target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);
  41.       view7f08001d = view;
  42. >     view.setOnClickListener(new DebouncingOnClickListener() {
  43.         @Override
  44.         public void doClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  46.         }
  47.       });
  48. >     view.setOnLongClickListener(new View.OnLongClickListener() {
  49.         @Override
  50.         public boolean onLongClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  55.       target.listOfThings = Utils.castView(view, R.id.list_of_things, "field 'listOfThings'", ListView.class);
  56.       view7f08001e = view;
  57. >     ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {
  58.         @Override
  59.         public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:34: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  32.   
  33.     @Test public void arrayFilteringNullReturnsOriginalWhenNoNulls() {
  34. >     String[] input = { "One", "Two", "Three" };
  35.       String[] actual = arrayFilteringNull(input);
  36.       assertThat(actual).isSameAs(input);

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$20`.
  36.       assertThat(actual).isSameAs(input);
  37.       // Even though we got the same reference back check to ensure its contents weren't mutated.
  38. >     assertThat(actual).asList().containsExactly("One", "Two", "Three");
  39.     }
  40.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:36: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  34.       String[] input = { "One", "Two", "Three" };
  35.       String[] actual = arrayFilteringNull(input);
  36. >     assertThat(actual).isSameAs(input);
  37.       // Even though we got the same reference back check to ensure its contents weren't mutated.
  38.       assertThat(actual).asList().containsExactly("One", "Two", "Three");

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  36.       assertThat(actual).isSameAs(input);
  37.       // Even though we got the same reference back check to ensure its contents weren't mutated.
  38. >     assertThat(actual).asList().containsExactly("One", "Two", "Three");
  39.     }
  40.   

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  36.       assertThat(actual).isSameAs(input);
  37.       // Even though we got the same reference back check to ensure its contents weren't mutated.
  38. >     assertThat(actual).asList().containsExactly("One", "Two", "Three");
  39.     }
  40.   

butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `internal.ListenerClass$NONE.butterknife.internal.ListenerClass$NONE.$VALUES`.
  33.   
  34.     /** Default value for {@link #callbacks()}. */
  35. >   enum NONE { }
  36.   }

butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  33.   
  34.     /** Default value for {@link #callbacks()}. */
  35. >   enum NONE { }
  36.   }

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:36: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  34.   
  35.     TestGeneratingProcessor(String generatedClassName, String... source) {
  36. >     this.generatedClassName = generatedClassName;
  37.       this.generatedSource = Joiner.on("\n").join(source);
  38.     }

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:37: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  35.     TestGeneratingProcessor(String generatedClassName, String... source) {
  36.       this.generatedClassName = generatedClassName;
  37. >     this.generatedSource = Joiner.on("\n").join(source);
  38.     }
  39.   

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  35.     TestGeneratingProcessor(String generatedClassName, String... source) {
  36.       this.generatedClassName = generatedClassName;
  37. >     this.generatedSource = Joiner.on("\n").join(source);
  38.     }
  39.   

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:35: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  33.     private boolean processed;
  34.   
  35. >   TestGeneratingProcessor(String generatedClassName, String... source) {
  36.       this.generatedClassName = generatedClassName;
  37.       this.generatedSource = Joiner.on("\n").join(source);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:47: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  45.   
  46.       String word = getItem(position);
  47. >     holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48.       holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49.       holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:48: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$38`.
  46.       String word = getItem(position);
  47.       holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48. >     holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49.       holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));
  50.       // Note: don't actually do string concatenation like this in an adapter's getView.

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:49: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$56`.
  47.       holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48.       holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49. >     holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));
  50.       // Note: don't actually do string concatenation like this in an adapter's getView.
  51.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `holder->com.example.butterknife.library.SimpleAdapter$ViewHolder.length`,dereference of pointer `holder`.
  46.       String word = getItem(position);
  47.       holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48. >     holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49.       holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));
  50.       // Note: don't actually do string concatenation like this in an adapter's getView.

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `holder->com.example.butterknife.library.SimpleAdapter$ViewHolder.position`,dereference of pointer `holder`.
  47.       holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48.       holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49. >     holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));
  50.       // Note: don't actually do string concatenation like this in an adapter's getView.
  51.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `holder->com.example.butterknife.library.SimpleAdapter$ViewHolder.word`,dereference of pointer `holder`.
  45.   
  46.       String word = getItem(position);
  47. >     holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48.       holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49.       holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  40.       } else {
  41.         view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42. >       holder = new ViewHolder(view);
  43.         view.setTag(holder);
  44.       }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:41: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleAdapter.inflater`,dereference of pointer `this`.
  39.         holder = (ViewHolder) view.getTag();
  40.       } else {
  41. >       view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42.         holder = new ViewHolder(view);
  43.         view.setTag(holder);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  44.       }
  45.   
  46. >     String word = getItem(position);
  47.       holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48.       holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  37.       ViewHolder holder;
  38.       if (view != null) {
  39. >       holder = (ViewHolder) view.getTag();
  40.       } else {
  41.         view = inflater.inflate(R.layout.simple_list_item, parent, false);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  41.         view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42.         holder = new ViewHolder(view);
  43. >       view.setTag(holder);
  44.       }
  45.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `word`.
  46.       String word = getItem(position);
  47.       holder.word.setText(String.format(Locale.getDefault(), "Word: %s", word));
  48. >     holder.length.setText(String.format(Locale.getDefault(), "Length: %d", word.length()));
  49.       holder.position.setText(String.format(Locale.getDefault(), "Position: %d", position));
  50.       // Note: don't actually do string concatenation like this in an adapter's getView.

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `action`.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  36.     public static <T extends View> void run(@NonNull List<T> list,
  37.         @NonNull Action<? super T> action) {
  38. >     for (int i = 0, count = list.size(); i < count; i++) {
  39.         action.apply(list.get(i), i);
  40.       }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.   
  37.     public boolean isRequired() {
  38. >     return required;
  39.     }
  40.   }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:39: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  37.     public List<MemberViewBinding> getRequiredBindings() {
  38.       List<MemberViewBinding> requiredBindings = new ArrayList<>();
  39. >     if (fieldBinding != null && fieldBinding.isRequired()) {
  40.         requiredBindings.add(fieldBinding);
  41.       }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:45: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {
  45. >           if (binding.isRequired()) {
  46.               requiredBindings.add(binding);
  47.             }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodBinding`.
  41.       }
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43. >       for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:38: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  36.   
  37.     public List<MemberViewBinding> getRequiredBindings() {
  38. >     List<MemberViewBinding> requiredBindings = new ArrayList<>();
  39.       if (fieldBinding != null && fieldBinding.isRequired()) {
  40.         requiredBindings.add(fieldBinding);

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  40.         requiredBindings.add(fieldBinding);
  41.       }
  42. >     for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  40.         requiredBindings.add(fieldBinding);
  41.       }
  42. >     for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  41.       }
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43. >       for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  41.       }
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43. >       for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$47`.
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44. >         for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {
  46.               requiredBindings.add(binding);

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `requiredBindings`.
  44.           for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {
  46. >             requiredBindings.add(binding);
  47.             }
  48.           }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `requiredBindings`,dereference of pointer `this`.
  38.       List<MemberViewBinding> requiredBindings = new ArrayList<>();
  39.       if (fieldBinding != null && fieldBinding.isRequired()) {
  40. >       requiredBindings.add(fieldBinding);
  41.       }
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `set`.
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44. >         for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {
  46.               requiredBindings.add(binding);

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ViewBinding.fieldBinding`,dereference of pointer `this`.
  37.     public List<MemberViewBinding> getRequiredBindings() {
  38.       List<MemberViewBinding> requiredBindings = new ArrayList<>();
  39. >     if (fieldBinding != null && fieldBinding.isRequired()) {
  40.         requiredBindings.add(fieldBinding);
  41.       }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ViewBinding.methodBindings`,dereference of pointer `this`.
  40.         requiredBindings.add(fieldBinding);
  41.       }
  42. >     for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  35.       }
  36.       public static final class dimen {
  37. >         private dimen() {}
  38.   
  39.           public static int compat_button_inset_horizontal_material = 0x7f080001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  35.       }
  36.       public static final class dimen {
  37. >         private dimen() {}
  38.   
  39.           public static int compat_button_inset_horizontal_material = 0x7f080001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  35.       }
  36.       public static final class dimen {
  37. >         private dimen() {}
  38.   
  39.           public static int compat_button_inset_horizontal_material = 0x7f080001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  35.       }
  36.       public static final class dimen {
  37. >         private dimen() {}
  38.   
  39.           public static int compat_button_inset_horizontal_material = 0x7f080001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  35.       }
  36.       public static final class dimen {
  37. >         private dimen() {}
  38.   
  39.           public static int compat_button_inset_horizontal_material = 0x7f080001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:37: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  35.       }
  36.       public static final class dimen {
  37. >         private dimen() {}
  38.   
  39.           public static int compat_button_inset_horizontal_material = 0x7f080001;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:68: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$115`.
  66.               rawType = ((ParameterizedTypeName) rawType).rawType;
  67.             }
  68. >           builder.add(", $T.class", rawType);
  69.           }
  70.           builder.add(")");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:39: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  37.   
  38.     CodeBlock render(boolean debuggable) {
  39. >     CodeBlock.Builder builder = CodeBlock.builder()
  40.           .add("target.$L = $T.$L(", name, UTILS, kind.factoryName);
  41.       for (int i = 0; i < ids.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:39: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`,dereference of pointer `this->butterknife.compiler.FieldCollectionViewBinding.kind`,dereference of pointer `this`.
  37.   
  38.     CodeBlock render(boolean debuggable) {
  39. >     CodeBlock.Builder builder = CodeBlock.builder()
  40.           .add("target.$L = $T.$L(", name, UTILS, kind.factoryName);
  41.       for (int i = 0; i < ids.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:39: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`,dereference of pointer `this`.
  37.   
  38.     CodeBlock render(boolean debuggable) {
  39. >     CodeBlock.Builder builder = CodeBlock.builder()
  40.           .add("target.$L = $T.$L(", name, UTILS, kind.factoryName);
  41.       for (int i = 0; i < ids.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:51: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`,dereference of pointer `this`.
  49.         if (!debuggable) {
  50.           if (requiresCast) {
  51. >           builder.add("($T) ", type);
  52.           }
  53.           builder.add("source.findViewById($L)", id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:53: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$53`,dereference of pointer `id`.
  51.             builder.add("($T) ", type);
  52.           }
  53. >         builder.add("source.findViewById($L)", id.code);
  54.         } else if (!requiresCast && !required) {
  55.           builder.add("source.findViewById($L)", id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$64`,dereference of pointer `id`.
  53.           builder.add("source.findViewById($L)", id.code);
  54.         } else if (!requiresCast && !required) {
  55. >         builder.add("source.findViewById($L)", id.code);
  56.         } else {
  57.           builder.add("$T.find", UTILS);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$72`.
  55.           builder.add("source.findViewById($L)", id.code);
  56.         } else {
  57. >         builder.add("$T.find", UTILS);
  58.           builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:62: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$96`,dereference of pointer `id`.
  60.             builder.add("AsType");
  61.           }
  62. >         builder.add("(source, $L, \"field '$L'\"", id.code, name);
  63.           if (requiresCast) {
  64.             TypeName rawType = type;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:62: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$96`,dereference of pointer `this`.
  60.             builder.add("AsType");
  61.           }
  62. >         builder.add("(source, $L, \"field '$L'\"", id.code, name);
  63.           if (requiresCast) {
  64.             TypeName rawType = type;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:66: warning: GRADUAL_DEREFERENCE
  dereference of pointer `rawType`.
  64.             TypeName rawType = type;
  65.             if (rawType instanceof ParameterizedTypeName) {
  66. >             rawType = ((ParameterizedTypeName) rawType).rawType;
  67.             }
  68.             builder.add(", $T.class", rawType);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:48: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  46.   
  47.         Id id = ids.get(i);
  48. >       boolean requiresCast = requiresCast(type);
  49.         if (!debuggable) {
  50.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:54: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  52.           }
  53.           builder.add("source.findViewById($L)", id.code);
  54. >       } else if (!requiresCast && !required) {
  55.           builder.add("source.findViewById($L)", id.code);
  56.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:58: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  56.         } else {
  57.           builder.add("$T.find", UTILS);
  58. >         builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {
  60.             builder.add("AsType");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:64: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  62.           builder.add("(source, $L, \"field '$L'\"", id.code, name);
  63.           if (requiresCast) {
  64. >           TypeName rawType = type;
  65.             if (rawType instanceof ParameterizedTypeName) {
  66.               rawType = ((ParameterizedTypeName) rawType).rawType;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:58: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T1_216`.
  56.         } else {
  57.           builder.add("$T.find", UTILS);
  58. >         builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {
  60.             builder.add("AsType");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:43: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  41.       for (int i = 0; i < ids.size(); i++) {
  42.         if (i > 0) {
  43. >         builder.add(", ");
  44.         }
  45.         builder.add("\n");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:45: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  43.           builder.add(", ");
  44.         }
  45. >       builder.add("\n");
  46.   
  47.         Id id = ids.get(i);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  49.         if (!debuggable) {
  50.           if (requiresCast) {
  51. >           builder.add("($T) ", type);
  52.           }
  53.           builder.add("source.findViewById($L)", id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  51.             builder.add("($T) ", type);
  52.           }
  53. >         builder.add("source.findViewById($L)", id.code);
  54.         } else if (!requiresCast && !required) {
  55.           builder.add("source.findViewById($L)", id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  53.           builder.add("source.findViewById($L)", id.code);
  54.         } else if (!requiresCast && !required) {
  55. >         builder.add("source.findViewById($L)", id.code);
  56.         } else {
  57.           builder.add("$T.find", UTILS);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  55.           builder.add("source.findViewById($L)", id.code);
  56.         } else {
  57. >         builder.add("$T.find", UTILS);
  58.           builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  58.           builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {
  60. >           builder.add("AsType");
  61.           }
  62.           builder.add("(source, $L, \"field '$L'\"", id.code, name);

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  60.             builder.add("AsType");
  61.           }
  62. >         builder.add("(source, $L, \"field '$L'\"", id.code, name);
  63.           if (requiresCast) {
  64.             TypeName rawType = type;

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  66.               rawType = ((ParameterizedTypeName) rawType).rawType;
  67.             }
  68. >           builder.add(", $T.class", rawType);
  69.           }
  70.           builder.add(")");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  68.             builder.add(", $T.class", rawType);
  69.           }
  70. >         builder.add(")");
  71.         }
  72.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  71.         }
  72.       }
  73. >     return builder.add(")").build();
  74.     }
  75.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:40: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  38.     CodeBlock render(boolean debuggable) {
  39.       CodeBlock.Builder builder = CodeBlock.builder()
  40. >         .add("target.$L = $T.$L(", name, UTILS, kind.factoryName);
  41.       for (int i = 0; i < ids.size(); i++) {
  42.         if (i > 0) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  71.         }
  72.       }
  73. >     return builder.add(")").build();
  74.     }
  75.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:41: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.FieldCollectionViewBinding.ids`,dereference of pointer `this`.
  39.       CodeBlock.Builder builder = CodeBlock.builder()
  40.           .add("target.$L = $T.$L(", name, UTILS, kind.factoryName);
  41. >     for (int i = 0; i < ids.size(); i++) {
  42.         if (i > 0) {
  43.           builder.add(", ");

butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.FieldCollectionViewBinding.ids`,dereference of pointer `this`.
  45.         builder.add("\n");
  46.   
  47. >       Id id = ids.get(i);
  48.         boolean requiresCast = requiresCast(type);
  49.         if (!debuggable) {

butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:38: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  36.   
  37.     public boolean hasReturnValue() {
  38. >     return hasReturnValue;
  39.     }
  40.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:40: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  38.   
  39.     FieldTypefaceBinding(Id id, String name, TypefaceStyles style) {
  40. >     this.id = id;
  41.       this.name = name;
  42.       this.style = style;

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:41: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  39.     FieldTypefaceBinding(Id id, String name, TypefaceStyles style) {
  40.       this.id = id;
  41. >     this.name = name;
  42.       this.style = style;
  43.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.       this.id = id;
  41.       this.name = name;
  42. >     this.style = style;
  43.     }
  44.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:39: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  37.     private final TypefaceStyles style;
  38.   
  39. >   FieldTypefaceBinding(Id id, String name, TypefaceStyles style) {
  40.       this.id = id;
  41.       this.name = name;

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:41: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `o`.
  39.   
  40.     @Override public boolean equals(Object o) {
  41. >     return o instanceof Id && value == ((Id) o).value;
  42.     }
  43.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:45: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  43.       this.target = null;
  44.   
  45. >     target.button2 = null;
  46.   
  47.       view1020002.setOnClickListener(null);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:41: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  39.     @Override
  40.     public void unbind() {
  41. >     G target = this.target;
  42.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  43.       this.target = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:43: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  41.       G target = this.target;
  42.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  43. >     this.target = null;
  44.   
  45.       target.button2 = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:48: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  46.   
  47.       view1020002.setOnClickListener(null);
  48. >     view1020002 = null;
  49.   
  50.       super.unbind();

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  40.     public void unbind() {
  41.       G target = this.target;
  42. >     if (target == null) throw new IllegalStateException("Bindings already cleared.");
  43.       this.target = null;
  44.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.unbinder.G_ViewBinding.view1020002`,dereference of pointer `this`.
  45.       target.button2 = null;
  46.   
  47. >     view1020002.setOnClickListener(null);
  48.       view1020002 = null;
  49.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/unbinder/G_ViewBinding.java:50: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  48.       view1020002 = null;
  49.   
  50. >     super.unbind();
  51.     }
  52.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.   
  41.       Type(String methodName) {
  42. >       methods = ImmutableList.of(new ResourceMethod(null, methodName, true, 1));
  43.       }
  44.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  40.   
  41.       Type(String methodName) {
  42. >       methods = ImmutableList.of(new ResourceMethod(null, methodName, true, 1));
  43.       }
  44.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:41: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  39.       }
  40.   
  41. >     Type(String methodName) {
  42.         methods = ImmutableList.of(new ResourceMethod(null, methodName, true, 1));
  43.       }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  40.       target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);
  41.       view7f08001d = view;
  42. >     view.setOnClickListener(new DebouncingOnClickListener() {
  43.         @Override
  44.         public void doClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  40.       target.hello = Utils.castView(view, R.id.hello, "field 'hello'", Button.class);
  41.       view7f08001d = view;
  42. >     view.setOnClickListener(new DebouncingOnClickListener() {
  43.         @Override
  44.         public void doClick(View p0) {

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `ise`.
  44.         fail();
  45.       } catch (IllegalStateException ise) {
  46. >       assertThat(ise.getMessage()).isEqualTo(
  47.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");
  48.       }

butterknife-runtime/src/test/java/butterknife/UtilsTest.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  44.         fail();
  45.       } catch (IllegalStateException ise) {
  46. >       assertThat(ise.getMessage()).isEqualTo(
  47.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");
  48.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:42: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  40.   
  41.   /** A set of all the bindings requested by a single type. */
  42. > final class BindingSet {
  43.     static final ClassName UTILS = ClassName.get("butterknife.internal", "Utils");
  44.     private static final ClassName VIEW = ClassName.get("android.view", "View");

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:45: warning: GRADUAL_DEREFERENCE
  dereference of pointer `value`.
  43.       TypedValue value = VALUE;
  44.       context.getResources().getValue(id, value, true);
  45. >     if (value.type == TypedValue.TYPE_FLOAT) {
  46.         return value.getFloat();
  47.       }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:49: warning: GRADUAL_DEREFERENCE
  dereference of pointer `value`.
  47.       }
  48.       throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49. >         + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }
  51.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  42.     public static float getFloat(Context context, @DimenRes int id) {
  43.       TypedValue value = VALUE;
  44. >     context.getResources().getValue(id, value, true);
  45.       if (value.type == TypedValue.TYPE_FLOAT) {
  46.         return value.getFloat();

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  46.         return value.getFloat();
  47.       }
  48. >     throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49.           + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  46.         return value.getFloat();
  47.       }
  48. >     throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49.           + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  46.         return value.getFloat();
  47.       }
  48. >     throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49.           + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  47.       }
  48.       throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49. >         + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }
  51.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  47.       }
  48.       throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49. >         + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }
  51.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  47.       }
  48.       throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49. >         + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }
  51.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:44: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  42.     public static float getFloat(Context context, @DimenRes int id) {
  43.       TypedValue value = VALUE;
  44. >     context.getResources().getValue(id, value, true);
  45.       if (value.type == TypedValue.TYPE_FLOAT) {
  46.         return value.getFloat();

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  47.       }
  48.       throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)
  49. >         + " type #0x" + Integer.toHexString(value.type) + " is not valid");
  50.     }
  51.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `value`.
  44.       context.getResources().getValue(id, value, true);
  45.       if (value.type == TypedValue.TYPE_FLOAT) {
  46. >       return value.getFloat();
  47.       }
  48.       throw new Resources.NotFoundException("Resource ID #0x" + Integer.toHexString(id)

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:45: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  43.   
  44.     @Override public int hashCode() {
  45. >     return value;
  46.     }
  47.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:45: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity_ViewBinding$1.val$target`,dereference of pointer `this`.
  43.         @Override
  44.         public void doClick(View p0) {
  45. >         target.sayHello();
  46.         }
  47.       });

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:47: warning: GRADUAL_DEREFERENCE
  dereference of pointer `method`.
  45.       ResourceMethod methodForSdk(int sdk) {
  46.         for (ResourceMethod method : methods) {
  47. >         if (method.sdk <= sdk) {
  48.             return method;
  49.           }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  49.           }
  50.         }
  51. >       throw new AssertionError();
  52.       }
  53.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  44.   
  45.       ResourceMethod methodForSdk(int sdk) {
  46. >       for (ResourceMethod method : methods) {
  47.           if (method.sdk <= sdk) {
  48.             return method;

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:46: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.FieldResourceBinding$Type.methods`,dereference of pointer `this`.
  44.   
  45.       ResourceMethod methodForSdk(int sdk) {
  46. >       for (ResourceMethod method : methods) {
  47.           if (method.sdk <= sdk) {
  48.             return method;

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `action`,dereference of pointer `array`.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:46: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  44.   
  45.     @Override public Id id() {
  46. >     return id;
  47.     }
  48.   

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  45.   
  46.     @Override public UElementHandler createUastHandler(final JavaContext context) {
  47. >     return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49.           node.accept(new R2UsageVisitor(context));

butterknife-annotations/src/main/java/butterknife/OnPageChange.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnPageChange$Callback.butterknife.OnPageChange$Callback.$VALUES`.
  45.   
  46.     /** {@code ViewPager.OnPageChangeListener} callback methods. */
  47. >   enum Callback {
  48.       /** {@code onPageSelected(int)} */
  49.       @ListenerMethod(

butterknife-annotations/src/main/java/butterknife/OnPageChange.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  45.   
  46.     /** {@code ViewPager.OnPageChangeListener} callback methods. */
  47. >   enum Callback {
  48.       /** {@code onPageSelected(int)} */
  49.       @ListenerMethod(

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:47: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  45.   
  46.     @Override public UElementHandler createUastHandler(final JavaContext context) {
  47. >     return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49.           node.accept(new R2UsageVisitor(context));

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:47: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  45.   
  46.     @Override public UElementHandler createUastHandler(final JavaContext context) {
  47. >     return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49.           node.accept(new R2UsageVisitor(context));

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:47: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  45.     @Override
  46.     public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
  47. >     if (!processed) {
  48.         processed = true;
  49.         try (Writer writer = processingEnv.getFiler()

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:48: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  46.     public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
  47.       if (!processed) {
  48. >       processed = true;
  49.         try (Writer writer = processingEnv.getFiler()
  50.             .createSourceFile(generatedClassName)

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `$bcvar4`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  49.         try (Writer writer = processingEnv.getFiler()
  50.             .createSourceFile(generatedClassName)
  51. >           .openWriter()) {
  52.           writer.append(generatedSource);
  53.         } catch (IOException e) {

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$58`.
  52.           writer.append(generatedSource);
  53.         } catch (IOException e) {
  54. >         throw new RuntimeException(e);
  55.         }
  56.       }

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:50: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`,dereference of pointer `this`.
  48.         processed = true;
  49.         try (Writer writer = processingEnv.getFiler()
  50. >           .createSourceFile(generatedClassName)
  51.             .openWriter()) {
  52.           writer.append(generatedSource);

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->javax.annotation.processing.AbstractProcessor.processingEnv`,dereference of pointer `this`.
  47.       if (!processed) {
  48.         processed = true;
  49. >       try (Writer writer = processingEnv.getFiler()
  50.             .createSourceFile(generatedClassName)
  51.             .openWriter()) {

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `writer`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `writer`,dereference of pointer `this`.
  50.             .createSourceFile(generatedClassName)
  51.             .openWriter()) {
  52. >         writer.append(generatedSource);
  53.         } catch (IOException e) {
  54.           throw new RuntimeException(e);

butterknife-compiler/src/main/java/butterknife/compiler/Id.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  47.   
  48.     @Override public String toString() {
  49. >     throw new UnsupportedOperationException("Please use value or code explicitly");
  50.     }
  51.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:48: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  46.         }
  47.       });
  48. >     view.setOnLongClickListener(new View.OnLongClickListener() {
  49.         @Override
  50.         public boolean onLongClick(View p0) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:48: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  46.         }
  47.       });
  48. >     view.setOnLongClickListener(new View.OnLongClickListener() {
  49.         @Override
  50.         public boolean onLongClick(View p0) {

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:50: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  48.     @OnClick(R.id.hello) void sayHello() {
  49.       Toast.makeText(this, "Hello, views!", LENGTH_SHORT).show();
  50. >     ViewCollections.run(headerViews, ALPHA_FADE);
  51.     }
  52.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  47.   
  48.     @OnClick(R.id.hello) void sayHello() {
  49. >     Toast.makeText(this, "Hello, views!", LENGTH_SHORT).show();
  50.       ViewCollections.run(headerViews, ALPHA_FADE);
  51.     }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`.
  47.       return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49. >         node.accept(new R2UsageVisitor(context));
  50.         }
  51.       };

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `node`.
  47.       return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49. >         node.accept(new R2UsageVisitor(context));
  50.         }
  51.       };

butterknife-annotations/src/main/java/butterknife/OnPageChange.java:47: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  45.   
  46.     /** {@code ViewPager.OnPageChangeListener} callback methods. */
  47. >   enum Callback {
  48.       /** {@code onPageSelected(int)} */
  49.       @ListenerMethod(

butterknife-annotations/src/main/java/butterknife/OnPageChange.java:49: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  47.     enum Callback {
  48.       /** {@code onPageSelected(int)} */
  49. >     @ListenerMethod(
  50.           name = "onPageSelected",
  51.           parameters = "int"

butterknife-annotations/src/main/java/butterknife/OnPageChange.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  54.   
  55.       /** {@code onPageScrolled(int, float, int)} */
  56. >     @ListenerMethod(
  57.           name = "onPageScrolled",
  58.           parameters = {

butterknife-annotations/src/main/java/butterknife/OnPageChange.java:67: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  65.   
  66.       /** {@code onPageScrollStateChanged(int)} */
  67. >     @ListenerMethod(
  68.           name = "onPageScrollStateChanged",
  69.           parameters = "int"

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity_ViewBinding$2.val$target`,dereference of pointer `this`.
  49.         @Override
  50.         public boolean onLongClick(View p0) {
  51. >         return target.sayGetOffMe();
  52.         }
  53.       });

butterknife-annotations/src/main/java/butterknife/OnTextChanged.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnTextChanged$Callback.butterknife.OnTextChanged$Callback.$VALUES`.
  49.   
  50.     /** {@link TextWatcher} callback methods. */
  51. >   enum Callback {
  52.       /** {@link TextWatcher#onTextChanged(CharSequence, int, int, int)} */
  53.       @ListenerMethod(

butterknife-annotations/src/main/java/butterknife/OnTextChanged.java:51: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  49.   
  50.     /** {@link TextWatcher} callback methods. */
  51. >   enum Callback {
  52.       /** {@link TextWatcher#onTextChanged(CharSequence, int, int, int)} */
  53.       @ListenerMethod(

butterknife-annotations/src/main/java/butterknife/OnItemSelected.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnItemSelected$Callback.butterknife.OnItemSelected$Callback.$VALUES`.
  50.   
  51.     /** {@link OnItemSelectedListener} callback methods. */
  52. >   enum Callback {
  53.       /**
  54.        * {@link OnItemSelectedListener#onItemSelected(android.widget.AdapterView, android.view.View,

butterknife-annotations/src/main/java/butterknife/OnItemSelected.java:52: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  50.   
  51.     /** {@link OnItemSelectedListener} callback methods. */
  52. >   enum Callback {
  53.       /**
  54.        * {@link OnItemSelectedListener#onItemSelected(android.widget.AdapterView, android.view.View,

butterknife-annotations/src/main/java/butterknife/OnTextChanged.java:51: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  49.   
  50.     /** {@link TextWatcher} callback methods. */
  51. >   enum Callback {
  52.       /** {@link TextWatcher#onTextChanged(CharSequence, int, int, int)} */
  53.       @ListenerMethod(

butterknife-annotations/src/main/java/butterknife/OnTextChanged.java:53: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  51.     enum Callback {
  52.       /** {@link TextWatcher#onTextChanged(CharSequence, int, int, int)} */
  53. >     @ListenerMethod(
  54.           name = "onTextChanged",
  55.           parameters = {

butterknife-annotations/src/main/java/butterknife/OnTextChanged.java:65: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  63.   
  64.       /** {@link TextWatcher#beforeTextChanged(CharSequence, int, int, int)} */
  65. >     @ListenerMethod(
  66.           name = "beforeTextChanged",
  67.           parameters = {

butterknife-annotations/src/main/java/butterknife/OnTextChanged.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  75.   
  76.       /** {@link TextWatcher#afterTextChanged(android.text.Editable)} */
  77. >     @ListenerMethod(
  78.           name = "afterTextChanged",
  79.           parameters = "android.text.Editable"

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:54: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`,dereference of pointer `this->butterknife.compiler.FieldTypefaceBinding.id`,dereference of pointer `this`.
  52.   
  53.     @Override public CodeBlock render(int sdk) {
  54. >     CodeBlock typeface = sdk >= 26
  55.           ? CodeBlock.of("res.getFont($L)", id.code)
  56.           : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:58: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$24`.
  56.           : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);
  57.       if (style != TypefaceStyles.NORMAL) {
  58. >       typeface = CodeBlock.of("$1T.create($2L, $1T.$3L)", TYPEFACE, typeface, style);
  59.       }
  60.       return CodeBlock.of("target.$L = $L", name, typeface);

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:58: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$24`,dereference of pointer `this`.
  56.           : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);
  57.       if (style != TypefaceStyles.NORMAL) {
  58. >       typeface = CodeBlock.of("$1T.create($2L, $1T.$3L)", TYPEFACE, typeface, style);
  59.       }
  60.       return CodeBlock.of("target.$L = $L", name, typeface);

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:60: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$34`.
  58.         typeface = CodeBlock.of("$1T.create($2L, $1T.$3L)", TYPEFACE, typeface, style);
  59.       }
  60. >     return CodeBlock.of("target.$L = $L", name, typeface);
  61.     }
  62.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:60: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$34`,dereference of pointer `this`.
  58.         typeface = CodeBlock.of("$1T.create($2L, $1T.$3L)", TYPEFACE, typeface, style);
  59.       }
  60. >     return CodeBlock.of("target.$L = $L", name, typeface);
  61.     }
  62.   }

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  53.     @Override public CodeBlock render(int sdk) {
  54.       CodeBlock typeface = sdk >= 26
  55. >         ? CodeBlock.of("res.getFont($L)", id.code)
  56.           : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);
  57.       if (style != TypefaceStyles.NORMAL) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`,dereference of pointer `this->butterknife.compiler.FieldTypefaceBinding.id`,dereference of pointer `this`.
  53.     @Override public CodeBlock render(int sdk) {
  54.       CodeBlock typeface = sdk >= 26
  55. >         ? CodeBlock.of("res.getFont($L)", id.code)
  56.           : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);
  57.       if (style != TypefaceStyles.NORMAL) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  55.           ? CodeBlock.of("res.getFont($L)", id.code)
  56.           : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);
  57. >     if (style != TypefaceStyles.NORMAL) {
  58.         typeface = CodeBlock.of("$1T.create($2L, $1T.$3L)", TYPEFACE, typeface, style);
  59.       }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:54: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$1`.
  52.   
  53.     @OnLongClick(R.id.hello) boolean sayGetOffMe() {
  54. >     Toast.makeText(this, "Let go of me!", LENGTH_SHORT).show();
  55.       return true;
  56.     }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `actions`.
  53.     @SafeVarargs public static <T extends View> void run(@NonNull T view,
  54.         @NonNull Action<? super T>... actions) {
  55. >     for (Action<? super T> action : actions) {
  56.         action.apply(view, 0);
  57.       }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:56: warning: GRADUAL_DEREFERENCE
  method call on pointer `action`.
  54.         @NonNull Action<? super T>... actions) {
  55.       for (Action<? super T> action : actions) {
  56. >       action.apply(view, 0);
  57.       }
  58.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `views`.
  55.       int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57. >       T view = views[i];
  58.         if (view != null) {
  59.           views[end++] = view;

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:59: warning: GRADUAL_DEREFERENCE
  dereference of pointer `views`.
  57.         T view = views[i];
  58.         if (view != null) {
  59. >         views[end++] = view;
  60.         }
  61.       }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:55: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  53.   
  54.     public boolean isSingleFieldBinding() {
  55. >     return methodBindings.isEmpty() && fieldBinding != null;
  56.     }
  57.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ViewBinding.methodBindings`,dereference of pointer `this`.
  53.   
  54.     public boolean isSingleFieldBinding() {
  55. >     return methodBindings.isEmpty() && fieldBinding != null;
  56.     }
  57.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:55: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  53.     }
  54.   
  55. >   @Immutable
  56.     static final class ResourceMethod implements Comparable<ResourceMethod> {
  57.       @SuppressWarnings("Immutable")

butterknife-annotations/src/main/java/butterknife/OnItemSelected.java:52: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  50.   
  51.     /** {@link OnItemSelectedListener} callback methods. */
  52. >   enum Callback {
  53.       /**
  54.        * {@link OnItemSelectedListener#onItemSelected(android.widget.AdapterView, android.view.View,

butterknife-annotations/src/main/java/butterknife/OnItemSelected.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  55.        * int, long)}
  56.        */
  57. >     @ListenerMethod(
  58.           name = "onItemSelected",
  59.           parameters = {

butterknife-annotations/src/main/java/butterknife/OnItemSelected.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  67.   
  68.       /** {@link OnItemSelectedListener#onNothingSelected(android.widget.AdapterView)} */
  69. >     @ListenerMethod(
  70.           name = "onNothingSelected",
  71.           parameters = "android.widget.AdapterView<?>"

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:57: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  55.       target.listOfThings = Utils.castView(view, R.id.list_of_things, "field 'listOfThings'", ListView.class);
  56.       view7f08001e = view;
  57. >     ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {
  58.         @Override
  59.         public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  55.       target.listOfThings = Utils.castView(view, R.id.list_of_things, "field 'listOfThings'", ListView.class);
  56.       view7f08001e = view;
  57. >     ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {
  58.         @Override
  59.         public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:58: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  56.   
  57.       R2UsageVisitor(JavaContext context) {
  58. >       this.context = context;
  59.       }
  60.   

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:57: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  55.       private final JavaContext context;
  56.   
  57. >     R2UsageVisitor(JavaContext context) {
  58.         this.context = context;
  59.       }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  57.   
  58.     public boolean requiresLocal() {
  59. >     if (isBoundToRoot()) {
  60.         return false;
  61.       }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:62: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  60.         return false;
  61.       }
  62. >     if (isSingleFieldBinding()) {
  63.         return false;
  64.       }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  57.   
  58.     @OnItemClick(R.id.list_of_things) void onItemClick(int position) {
  59. >     Toast.makeText(this, "You clicked: " + adapter.getItem(position), LENGTH_SHORT).show();
  60.     }
  61.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  57.   
  58.     @OnItemClick(R.id.list_of_things) void onItemClick(int position) {
  59. >     Toast.makeText(this, "You clicked: " + adapter.getItem(position), LENGTH_SHORT).show();
  60.     }
  61.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  57.   
  58.     @OnItemClick(R.id.list_of_things) void onItemClick(int position) {
  59. >     Toast.makeText(this, "You clicked: " + adapter.getItem(position), LENGTH_SHORT).show();
  60.     }
  61.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  57.   
  58.     @OnItemClick(R.id.list_of_things) void onItemClick(int position) {
  59. >     Toast.makeText(this, "You clicked: " + adapter.getItem(position), LENGTH_SHORT).show();
  60.     }
  61.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:59: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity.adapter`,dereference of pointer `this`.
  57.   
  58.     @OnItemClick(R.id.list_of_things) void onItemClick(int position) {
  59. >     Toast.makeText(this, "You clicked: " + adapter.getItem(position), LENGTH_SHORT).show();
  60.     }
  61.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity_ViewBinding$3.val$target`,dereference of pointer `this`.
  58.         @Override
  59.         public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {
  60. >         target.onItemClick(p2);
  61.         }
  62.       });

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:60: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  58.       @BindView(R.id.position) TextView position;
  59.   
  60. >     ViewHolder(View view) {
  61.         ButterKnife.bind(this, view);
  62.       }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  95.       );
  96.   
  97. >     assertAbout(javaSource()).that(source)
  98.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  99.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  97.       assertAbout(javaSource()).that(source)
  98.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  99. >         .processedWith(new ButterKnifeProcessor())
  100.           .compilesWithoutWarnings()
  101.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  96.   
  97.       assertAbout(javaSource()).that(source)
  98. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  99.           .processedWith(new ButterKnifeProcessor())
  100.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  98.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  99.           .processedWith(new ButterKnifeProcessor())
  100. >         .compilesWithoutWarnings()
  101.           .and()
  102.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:101: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  99.           .processedWith(new ButterKnifeProcessor())
  100.           .compilesWithoutWarnings()
  101. >         .and()
  102.           .generatesSources(bindingSource);
  103.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  100.           .compilesWithoutWarnings()
  101.           .and()
  102. >         .generatesSources(bindingSource);
  103.     }
  104.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:97: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  95.       );
  96.   
  97. >     assertAbout(javaSource()).that(source)
  98.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  99.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  96.   
  97.       assertAbout(javaSource()).that(source)
  98. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  99.           .processedWith(new ButterKnifeProcessor())
  100.           .compilesWithoutWarnings()

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `action`.
  61.     @UiThread
  62.     public static <T extends View> void run(@NonNull T view, @NonNull Action<? super T> action) {
  63. >     action.apply(view, 0);
  64.     }
  65.   

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:105: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  103.       );
  104.   
  105. >     assertAbout(javaSource()).that(source)
  106.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  107.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  105.       assertAbout(javaSource()).that(source)
  106.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  107. >         .processedWith(new ButterKnifeProcessor())
  108.           .compilesWithoutWarnings()
  109.           .and()

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  104.   
  105.       assertAbout(javaSource()).that(source)
  106. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  107.           .processedWith(new ButterKnifeProcessor())
  108.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  106.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  107.           .processedWith(new ButterKnifeProcessor())
  108. >         .compilesWithoutWarnings()
  109.           .and()
  110.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  107.           .processedWith(new ButterKnifeProcessor())
  108.           .compilesWithoutWarnings()
  109. >         .and()
  110.           .generatesSources(bindingSource);
  111.     }

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  108.           .compilesWithoutWarnings()
  109.           .and()
  110. >         .generatesSources(bindingSource);
  111.     }
  112.   

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  103.       );
  104.   
  105. >     assertAbout(javaSource()).that(source)
  106.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  107.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  104.   
  105.       assertAbout(javaSource()).that(source)
  106. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=23")
  107.           .processedWith(new ButterKnifeProcessor())
  108.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:64: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  62.   
  63.       ResourceMethod(@Nullable ClassName typeName, String name, boolean requiresResources, int sdk) {
  64. >       this.typeName = typeName;
  65.         this.name = name;
  66.         this.requiresResources = requiresResources;

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:65: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  63.       ResourceMethod(@Nullable ClassName typeName, String name, boolean requiresResources, int sdk) {
  64.         this.typeName = typeName;
  65. >       this.name = name;
  66.         this.requiresResources = requiresResources;
  67.         this.sdk = sdk;

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:66: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  64.         this.typeName = typeName;
  65.         this.name = name;
  66. >       this.requiresResources = requiresResources;
  67.         this.sdk = sdk;
  68.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:67: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  65.         this.name = name;
  66.         this.requiresResources = requiresResources;
  67. >       this.sdk = sdk;
  68.       }
  69.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       final int sdk;
  62.   
  63. >     ResourceMethod(@Nullable ClassName typeName, String name, boolean requiresResources, int sdk) {
  64.         this.typeName = typeName;
  65.         this.name = name;

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:73: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  71.       hello.setText(sayHello);
  72.   
  73. >     adapter = new SimpleAdapter(this);
  74.       listOfThings.setAdapter(adapter);
  75.     }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:73: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  71.       hello.setText(sayHello);
  72.   
  73. >     adapter = new SimpleAdapter(this);
  74.       listOfThings.setAdapter(adapter);
  75.     }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity.footer`,dereference of pointer `this`,dereference of pointer `this`.
  68.       title.setText(butterKnife);
  69.       subtitle.setText(fieldMethod);
  70. >     footer.setText(byJakeWharton);
  71.       hello.setText(sayHello);
  72.   

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity.hello`,dereference of pointer `this`,dereference of pointer `this`.
  69.       subtitle.setText(fieldMethod);
  70.       footer.setText(byJakeWharton);
  71. >     hello.setText(sayHello);
  72.   
  73.       adapter = new SimpleAdapter(this);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity.listOfThings`,dereference of pointer `this`,dereference of pointer `this`.
  72.   
  73.       adapter = new SimpleAdapter(this);
  74. >     listOfThings.setAdapter(adapter);
  75.     }
  76.   }

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity.subtitle`,dereference of pointer `this`,dereference of pointer `this`.
  67.       // Contrived code to use the bound fields.
  68.       title.setText(butterKnife);
  69. >     subtitle.setText(fieldMethod);
  70.       footer.setText(byJakeWharton);
  71.       hello.setText(sayHello);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity.title`,dereference of pointer `this`,dereference of pointer `this`.
  66.   
  67.       // Contrived code to use the bound fields.
  68. >     title.setText(butterKnife);
  69.       subtitle.setText(fieldMethod);
  70.       footer.setText(byJakeWharton);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.   
  62.     @Override protected void onCreate(Bundle savedInstanceState) {
  63. >     super.onCreate(savedInstanceState);
  64.       setContentView(R.layout.simple_activity);
  65.       ButterKnife.bind(this);

butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:64: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  62.     @Override protected void onCreate(Bundle savedInstanceState) {
  63.       super.onCreate(savedInstanceState);
  64. >     setContentView(R.layout.simple_activity);
  65.       ButterKnife.bind(this);
  66.   

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       }
  62.       public static final class drawable {
  63. >         private drawable() {}
  64.   
  65.           public static int notification_action_background = 0x7f090001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       }
  62.       public static final class drawable {
  63. >         private drawable() {}
  64.   
  65.           public static int notification_action_background = 0x7f090001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       }
  62.       public static final class drawable {
  63. >         private drawable() {}
  64.   
  65.           public static int notification_action_background = 0x7f090001;

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:107: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  105.       );
  106.   
  107. >     assertAbout(javaSource()).that(source)
  108.           .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  107.       assertAbout(javaSource()).that(source)
  108.           .withCompilerOptions("-Xlint:-processing")
  109. >         .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()
  111.           .and()

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  106.   
  107.       assertAbout(javaSource()).that(source)
  108. >         .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  108.           .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())
  110. >         .compilesWithoutWarnings()
  111.           .and()
  112.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  109.           .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()
  111. >         .and()
  112.           .generatesSources(bindingSource);
  113.     }

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  110.           .compilesWithoutWarnings()
  111.           .and()
  112. >         .generatesSources(bindingSource);
  113.     }
  114.   

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  105.       );
  106.   
  107. >     assertAbout(javaSource()).that(source)
  108.           .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  106.   
  107.       assertAbout(javaSource()).that(source)
  108. >         .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       }
  62.       public static final class drawable {
  63. >         private drawable() {}
  64.   
  65.           public static int notification_action_background = 0x7f090001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       }
  62.       public static final class drawable {
  63. >         private drawable() {}
  64.   
  65.           public static int notification_action_background = 0x7f090001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:63: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  61.       }
  62.       public static final class drawable {
  63. >         private drawable() {}
  64.   
  65.           public static int notification_action_background = 0x7f090001;

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:66: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  64.     @Test public void noR2Usage() {
  65.       lint() //
  66. >         .files(R2, //
  67.               java("" //
  68.                   + "package sample;\n" //

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:65: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  63.   
  64.     @Test public void noR2Usage() {
  65. >     lint() //
  66.           .files(R2, //
  67.               java("" //

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:67: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  65.       lint() //
  66.           .files(R2, //
  67. >             java("" //
  68.                   + "package sample;\n" //
  69.                   + "class NoR2Usage {}\n")) //

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:66: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  64.     @Test public void noR2Usage() {
  65.       lint() //
  66. >         .files(R2, //
  67.               java("" //
  68.                   + "package sample;\n" //

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  68.                   + "package sample;\n" //
  69.                   + "class NoR2Usage {}\n")) //
  70. >         .issues(InvalidR2UsageDetector.ISSUE) //
  71.           .run() //
  72.           .expectClean();

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  69.                   + "class NoR2Usage {}\n")) //
  70.           .issues(InvalidR2UsageDetector.ISSUE) //
  71. >         .run() //
  72.           .expectClean();
  73.     }

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:72: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  70.           .issues(InvalidR2UsageDetector.ISSUE) //
  71.           .run() //
  72. >         .expectClean();
  73.     }
  74.   

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  74.       assertAbout(javaSource()).that(source)
  75.           .processedWith(new ButterKnifeProcessor())
  76. >         .failsToCompile()
  77.           .withErrorContaining(
  78.               "@BindArray field type must be one of: String[], int[], CharSequence[], "

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  75.           .processedWith(new ButterKnifeProcessor())
  76.           .failsToCompile()
  77. >         .withErrorContaining(
  78.               "@BindArray field type must be one of: String[], int[], CharSequence[], "
  79.                   + "android.content.res.TypedArray. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  78.               "@BindArray field type must be one of: String[], int[], CharSequence[], "
  79.                   + "android.content.res.TypedArray. (test.Test.one)")
  80. >         .in(source).onLine(4);
  81.     }
  82.   }

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  78.               "@BindArray field type must be one of: String[], int[], CharSequence[], "
  79.                   + "android.content.res.TypedArray. (test.Test.one)")
  80. >         .in(source).onLine(4);
  81.     }
  82.   }

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  72.       );
  73.   
  74. >     assertAbout(javaSource()).that(source)
  75.           .processedWith(new ButterKnifeProcessor())
  76.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  73.   
  74.       assertAbout(javaSource()).that(source)
  75. >         .processedWith(new ButterKnifeProcessor())
  76.           .failsToCompile()
  77.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindArrayTest.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  72.       );
  73.   
  74. >     assertAbout(javaSource()).that(source)
  75.           .processedWith(new ButterKnifeProcessor())
  76.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:111: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  109.       );
  110.   
  111. >     assertAbout(javaSource()).that(source)
  112.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  113.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  111.       assertAbout(javaSource()).that(source)
  112.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  113. >         .processedWith(new ButterKnifeProcessor())
  114.           .compilesWithoutWarnings()
  115.           .and()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  110.   
  111.       assertAbout(javaSource()).that(source)
  112. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  113.           .processedWith(new ButterKnifeProcessor())
  114.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  112.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  113.           .processedWith(new ButterKnifeProcessor())
  114. >         .compilesWithoutWarnings()
  115.           .and()
  116.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  113.           .processedWith(new ButterKnifeProcessor())
  114.           .compilesWithoutWarnings()
  115. >         .and()
  116.           .generatesSources(bindingSource);
  117.     }

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  114.           .compilesWithoutWarnings()
  115.           .and()
  116. >         .generatesSources(bindingSource);
  117.     }
  118.   

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  109.       );
  110.   
  111. >     assertAbout(javaSource()).that(source)
  112.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  113.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  110.   
  111.       assertAbout(javaSource()).that(source)
  112. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.minSdk=26")
  113.           .processedWith(new ButterKnifeProcessor())
  114.           .compilesWithoutWarnings()

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:67: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  65.   
  66.       @Override public boolean visitQualifiedReferenceExpression(UQualifiedReferenceExpression node) {
  67. >       detectR2(context, node);
  68.         return super.visitQualifiedReferenceExpression(node);
  69.       }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:68: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  66.       @Override public boolean visitQualifiedReferenceExpression(UQualifiedReferenceExpression node) {
  67.         detectR2(context, node);
  68. >       return super.visitQualifiedReferenceExpression(node);
  69.       }
  70.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:107: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  105.       );
  106.   
  107. >     assertAbout(javaSource()).that(source)
  108.           .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  107.       assertAbout(javaSource()).that(source)
  108.           .withCompilerOptions("-Xlint:-processing")
  109. >         .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()
  111.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  106.   
  107.       assertAbout(javaSource()).that(source)
  108. >         .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  108.           .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())
  110. >         .compilesWithoutWarnings()
  111.           .and()
  112.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  109.           .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()
  111. >         .and()
  112.           .generatesSources(bindingSource);
  113.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  110.           .compilesWithoutWarnings()
  111.           .and()
  112. >         .generatesSources(bindingSource);
  113.     }
  114.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  105.       );
  106.   
  107. >     assertAbout(javaSource()).that(source)
  108.           .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  106.   
  107.       assertAbout(javaSource()).that(source)
  108. >         .withCompilerOptions("-Xlint:-processing")
  109.           .processedWith(new ButterKnifeProcessor())
  110.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:113: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  111.       );
  112.   
  113. >     assertAbout(javaSource()).that(source)
  114.           .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  113.       assertAbout(javaSource()).that(source)
  114.           .withCompilerOptions("-Xlint:-processing")
  115. >         .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()
  117.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  112.   
  113.       assertAbout(javaSource()).that(source)
  114. >         .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  114.           .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())
  116. >         .compilesWithoutWarnings()
  117.           .and()
  118.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  115.           .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()
  117. >         .and()
  118.           .generatesSources(bindingSource);
  119.     }

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  116.           .compilesWithoutWarnings()
  117.           .and()
  118. >         .generatesSources(bindingSource);
  119.     }
  120.   }

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  111.       );
  112.   
  113. >     assertAbout(javaSource()).that(source)
  114.           .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  112.   
  113.       assertAbout(javaSource()).that(source)
  114. >         .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  113.       );
  114.   
  115. >     assertAbout(javaSource()).that(source)
  116.           .withCompilerOptions("-Xlint:-processing")
  117.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  115.       assertAbout(javaSource()).that(source)
  116.           .withCompilerOptions("-Xlint:-processing")
  117. >         .processedWith(new ButterKnifeProcessor())
  118.           .compilesWithoutWarnings()
  119.           .and()

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  114.   
  115.       assertAbout(javaSource()).that(source)
  116. >         .withCompilerOptions("-Xlint:-processing")
  117.           .processedWith(new ButterKnifeProcessor())
  118.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  116.           .withCompilerOptions("-Xlint:-processing")
  117.           .processedWith(new ButterKnifeProcessor())
  118. >         .compilesWithoutWarnings()
  119.           .and()
  120.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  117.           .processedWith(new ButterKnifeProcessor())
  118.           .compilesWithoutWarnings()
  119. >         .and()
  120.           .generatesSources(bindingSource);
  121.     }

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  118.           .compilesWithoutWarnings()
  119.           .and()
  120. >         .generatesSources(bindingSource);
  121.     }
  122.   }

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  113.       );
  114.   
  115. >     assertAbout(javaSource()).that(source)
  116.           .withCompilerOptions("-Xlint:-processing")
  117.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  114.   
  115.       assertAbout(javaSource()).that(source)
  116. >         .withCompilerOptions("-Xlint:-processing")
  117.           .processedWith(new ButterKnifeProcessor())
  118.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:120: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  118.       );
  119.   
  120. >     assertAbout(javaSource()).that(source)
  121.           .withCompilerOptions("-Xlint:-processing")
  122.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  120.       assertAbout(javaSource()).that(source)
  121.           .withCompilerOptions("-Xlint:-processing")
  122. >         .processedWith(new ButterKnifeProcessor())
  123.           .compilesWithoutWarnings()
  124.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  119.   
  120.       assertAbout(javaSource()).that(source)
  121. >         .withCompilerOptions("-Xlint:-processing")
  122.           .processedWith(new ButterKnifeProcessor())
  123.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  121.           .withCompilerOptions("-Xlint:-processing")
  122.           .processedWith(new ButterKnifeProcessor())
  123. >         .compilesWithoutWarnings()
  124.           .and()
  125.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  122.           .processedWith(new ButterKnifeProcessor())
  123.           .compilesWithoutWarnings()
  124. >         .and()
  125.           .generatesSources(bindingSource);
  126.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  123.           .compilesWithoutWarnings()
  124.           .and()
  125. >         .generatesSources(bindingSource);
  126.     }
  127.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  118.       );
  119.   
  120. >     assertAbout(javaSource()).that(source)
  121.           .withCompilerOptions("-Xlint:-processing")
  122.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  119.   
  120.       assertAbout(javaSource()).that(source)
  121. >         .withCompilerOptions("-Xlint:-processing")
  122.           .processedWith(new ButterKnifeProcessor())
  123.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `compiler.ButterKnifeProcessor.butterknife.compiler.ButterKnifeProcessor.NO_ID`,dereference of pointer `this`.
  67.   
  68.     public boolean isBoundToRoot() {
  69. >     return ButterKnifeProcessor.NO_ID.equals(id);
  70.     }
  71.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:69: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  67.     @SafeVarargs
  68.     public static <T> List<T> listFilteringNull(T... views) {
  69. >     return new ImmutableList<>(arrayFilteringNull(views));
  70.     }
  71.   

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:117: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  115.       );
  116.   
  117. >     assertAbout(javaSource()).that(source)
  118.           .withCompilerOptions("-Xlint:-processing")
  119.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  117.       assertAbout(javaSource()).that(source)
  118.           .withCompilerOptions("-Xlint:-processing")
  119. >         .processedWith(new ButterKnifeProcessor())
  120.           .compilesWithoutWarnings()
  121.           .and()

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  116.   
  117.       assertAbout(javaSource()).that(source)
  118. >         .withCompilerOptions("-Xlint:-processing")
  119.           .processedWith(new ButterKnifeProcessor())
  120.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  118.           .withCompilerOptions("-Xlint:-processing")
  119.           .processedWith(new ButterKnifeProcessor())
  120. >         .compilesWithoutWarnings()
  121.           .and()
  122.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  119.           .processedWith(new ButterKnifeProcessor())
  120.           .compilesWithoutWarnings()
  121. >         .and()
  122.           .generatesSources(bindingSource);
  123.     }

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  120.           .compilesWithoutWarnings()
  121.           .and()
  122. >         .generatesSources(bindingSource);
  123.     }
  124.   

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  115.       );
  116.   
  117. >     assertAbout(javaSource()).that(source)
  118.           .withCompilerOptions("-Xlint:-processing")
  119.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  116.   
  117.       assertAbout(javaSource()).that(source)
  118. >         .withCompilerOptions("-Xlint:-processing")
  119.           .processedWith(new ButterKnifeProcessor())
  120.           .compilesWithoutWarnings()

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:70: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  68.     public static <T extends View, V> void set(@NonNull List<T> list,
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70. >     for (int i = 0, count = list.size(); i < count; i++) {
  71.         setter.set(list.get(i), value, i);
  72.       }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_DEREFERENCE
  method call on pointer `setter`.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:71: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `other`.
  69.   
  70.       @Override public int compareTo(ResourceMethod other) {
  71. >       return Integer.compare(sdk, other.sdk);
  72.       }
  73.     }

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:113: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  111.       );
  112.   
  113. >     assertAbout(javaSource()).that(source)
  114.           .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:115: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  113.       assertAbout(javaSource()).that(source)
  114.           .withCompilerOptions("-Xlint:-processing")
  115. >         .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()
  117.           .and()

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  112.   
  113.       assertAbout(javaSource()).that(source)
  114. >         .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  114.           .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())
  116. >         .compilesWithoutWarnings()
  117.           .and()
  118.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  115.           .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()
  117. >         .and()
  118.           .generatesSources(bindingSource);
  119.     }

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  116.           .compilesWithoutWarnings()
  117.           .and()
  118. >         .generatesSources(bindingSource);
  119.     }
  120.   }

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  111.       );
  112.   
  113. >     assertAbout(javaSource()).that(source)
  114.           .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  112.   
  113.       assertAbout(javaSource()).that(source)
  114. >         .withCompilerOptions("-Xlint:-processing")
  115.           .processedWith(new ButterKnifeProcessor())
  116.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:121: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  119.       );
  120.   
  121. >     assertAbout(javaSource()).that(source)
  122.           .withCompilerOptions("-Xlint:-processing")
  123.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  121.       assertAbout(javaSource()).that(source)
  122.           .withCompilerOptions("-Xlint:-processing")
  123. >         .processedWith(new ButterKnifeProcessor())
  124.           .compilesWithoutWarnings()
  125.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  120.   
  121.       assertAbout(javaSource()).that(source)
  122. >         .withCompilerOptions("-Xlint:-processing")
  123.           .processedWith(new ButterKnifeProcessor())
  124.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  122.           .withCompilerOptions("-Xlint:-processing")
  123.           .processedWith(new ButterKnifeProcessor())
  124. >         .compilesWithoutWarnings()
  125.           .and()
  126.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  123.           .processedWith(new ButterKnifeProcessor())
  124.           .compilesWithoutWarnings()
  125. >         .and()
  126.           .generatesSources(bindingSource);
  127.     }

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  124.           .compilesWithoutWarnings()
  125.           .and()
  126. >         .generatesSources(bindingSource);
  127.     }
  128.   

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  119.       );
  120.   
  121. >     assertAbout(javaSource()).that(source)
  122.           .withCompilerOptions("-Xlint:-processing")
  123.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  120.   
  121.       assertAbout(javaSource()).that(source)
  122. >         .withCompilerOptions("-Xlint:-processing")
  123.           .processedWith(new ButterKnifeProcessor())
  124.           .compilesWithoutWarnings()

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:73: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  71.       @Override
  72.       public boolean visitSimpleNameReferenceExpression(USimpleNameReferenceExpression node) {
  73. >       detectR2(context, node);
  74.         return super.visitSimpleNameReferenceExpression(node);
  75.       }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  72.       public boolean visitSimpleNameReferenceExpression(USimpleNameReferenceExpression node) {
  73.         detectR2(context, node);
  74. >       return super.visitSimpleNameReferenceExpression(node);
  75.       }
  76.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  72.     public static <T> T findOptionalViewAsType(View source, @IdRes int id, String who,
  73.         Class<T> cls) {
  74. >     View view = source.findViewById(id);
  75.       return castView(view, id, who, cls);
  76.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:171: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  169.       );
  170.   
  171. >     assertAbout(javaSource()).that(source)
  172.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  173.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  171.       assertAbout(javaSource()).that(source)
  172.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  173. >         .processedWith(new ButterKnifeProcessor())
  174.           .compilesWithoutWarnings()
  175.           .and()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  170.   
  171.       assertAbout(javaSource()).that(source)
  172. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  173.           .processedWith(new ButterKnifeProcessor())
  174.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  172.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  173.           .processedWith(new ButterKnifeProcessor())
  174. >         .compilesWithoutWarnings()
  175.           .and()
  176.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  173.           .processedWith(new ButterKnifeProcessor())
  174.           .compilesWithoutWarnings()
  175. >         .and()
  176.           .generatesSources(bindingSource);
  177.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:176: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  174.           .compilesWithoutWarnings()
  175.           .and()
  176. >         .generatesSources(bindingSource);
  177.     }
  178.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:171: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  169.       );
  170.   
  171. >     assertAbout(javaSource()).that(source)
  172.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  173.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  170.   
  171.       assertAbout(javaSource()).that(source)
  172. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  173.           .processedWith(new ButterKnifeProcessor())
  174.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:119: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  117.       );
  118.   
  119. >     assertAbout(javaSource()).that(source)
  120.           .withCompilerOptions("-Xlint:-processing")
  121.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  119.       assertAbout(javaSource()).that(source)
  120.           .withCompilerOptions("-Xlint:-processing")
  121. >         .processedWith(new ButterKnifeProcessor())
  122.           .compilesWithoutWarnings()
  123.           .and()

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  118.   
  119.       assertAbout(javaSource()).that(source)
  120. >         .withCompilerOptions("-Xlint:-processing")
  121.           .processedWith(new ButterKnifeProcessor())
  122.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  120.           .withCompilerOptions("-Xlint:-processing")
  121.           .processedWith(new ButterKnifeProcessor())
  122. >         .compilesWithoutWarnings()
  123.           .and()
  124.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  121.           .processedWith(new ButterKnifeProcessor())
  122.           .compilesWithoutWarnings()
  123. >         .and()
  124.           .generatesSources(bindingSource);
  125.     }

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  122.           .compilesWithoutWarnings()
  123.           .and()
  124. >         .generatesSources(bindingSource);
  125.     }
  126.   }

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  117.       );
  118.   
  119. >     assertAbout(javaSource()).that(source)
  120.           .withCompilerOptions("-Xlint:-processing")
  121.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  118.   
  119.       assertAbout(javaSource()).that(source)
  120. >         .withCompilerOptions("-Xlint:-processing")
  121.           .processedWith(new ButterKnifeProcessor())
  122.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:118: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  116.       );
  117.   
  118. >     assertAbout(javaSource()).that(source)
  119.           .withCompilerOptions("-Xlint:-processing")
  120.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  118.       assertAbout(javaSource()).that(source)
  119.           .withCompilerOptions("-Xlint:-processing")
  120. >         .processedWith(new ButterKnifeProcessor())
  121.           .compilesWithoutWarnings()
  122.           .and()

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  117.   
  118.       assertAbout(javaSource()).that(source)
  119. >         .withCompilerOptions("-Xlint:-processing")
  120.           .processedWith(new ButterKnifeProcessor())
  121.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  119.           .withCompilerOptions("-Xlint:-processing")
  120.           .processedWith(new ButterKnifeProcessor())
  121. >         .compilesWithoutWarnings()
  122.           .and()
  123.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  120.           .processedWith(new ButterKnifeProcessor())
  121.           .compilesWithoutWarnings()
  122. >         .and()
  123.           .generatesSources(bindingSource);
  124.     }

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  121.           .compilesWithoutWarnings()
  122.           .and()
  123. >         .generatesSources(bindingSource);
  124.     }
  125.   }

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  116.       );
  117.   
  118. >     assertAbout(javaSource()).that(source)
  119.           .withCompilerOptions("-Xlint:-processing")
  120.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  117.   
  118.       assertAbout(javaSource()).that(source)
  119. >         .withCompilerOptions("-Xlint:-processing")
  120.           .processedWith(new ButterKnifeProcessor())
  121.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:75: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  73.         ImmutableList<FieldCollectionViewBinding> collectionBindings,
  74.         ImmutableList<ResourceBinding> resourceBindings, @Nullable BindingSet parentBinding) {
  75. >     this.isFinal = isFinal;
  76.       this.targetTypeName = targetTypeName;
  77.       this.bindingClassName = bindingClassName;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:76: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  74.         ImmutableList<ResourceBinding> resourceBindings, @Nullable BindingSet parentBinding) {
  75.       this.isFinal = isFinal;
  76. >     this.targetTypeName = targetTypeName;
  77.       this.bindingClassName = bindingClassName;
  78.       this.isView = isView;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:77: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  75.       this.isFinal = isFinal;
  76.       this.targetTypeName = targetTypeName;
  77. >     this.bindingClassName = bindingClassName;
  78.       this.isView = isView;
  79.       this.isActivity = isActivity;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:78: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  76.       this.targetTypeName = targetTypeName;
  77.       this.bindingClassName = bindingClassName;
  78. >     this.isView = isView;
  79.       this.isActivity = isActivity;
  80.       this.isDialog = isDialog;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:79: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  77.       this.bindingClassName = bindingClassName;
  78.       this.isView = isView;
  79. >     this.isActivity = isActivity;
  80.       this.isDialog = isDialog;
  81.       this.viewBindings = viewBindings;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  78.       this.isView = isView;
  79.       this.isActivity = isActivity;
  80. >     this.isDialog = isDialog;
  81.       this.viewBindings = viewBindings;
  82.       this.collectionBindings = collectionBindings;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:81: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  79.       this.isActivity = isActivity;
  80.       this.isDialog = isDialog;
  81. >     this.viewBindings = viewBindings;
  82.       this.collectionBindings = collectionBindings;
  83.       this.resourceBindings = resourceBindings;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.       this.isDialog = isDialog;
  81.       this.viewBindings = viewBindings;
  82. >     this.collectionBindings = collectionBindings;
  83.       this.resourceBindings = resourceBindings;
  84.       this.parentBinding = parentBinding;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:83: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  81.       this.viewBindings = viewBindings;
  82.       this.collectionBindings = collectionBindings;
  83. >     this.resourceBindings = resourceBindings;
  84.       this.parentBinding = parentBinding;
  85.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:84: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  82.       this.collectionBindings = collectionBindings;
  83.       this.resourceBindings = resourceBindings;
  84. >     this.parentBinding = parentBinding;
  85.     }
  86.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:74: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  72.         boolean isView, boolean isActivity, boolean isDialog, ImmutableList<ViewBinding> viewBindings,
  73.         ImmutableList<FieldCollectionViewBinding> collectionBindings,
  74. >       ImmutableList<ResourceBinding> resourceBindings, @Nullable BindingSet parentBinding) {
  75.       this.isFinal = isFinal;
  76.       this.targetTypeName = targetTypeName;

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:77: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  75.     @Test public void usesR2InAnnotations() {
  76.       lint() //
  77. >         .files(R2, BIND_TEST, //
  78.               java(""
  79.                   + "package sample.r2;\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:76: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  74.   
  75.     @Test public void usesR2InAnnotations() {
  76. >     lint() //
  77.           .files(R2, BIND_TEST, //
  78.               java(""

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:78: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  76.       lint() //
  77.           .files(R2, BIND_TEST, //
  78. >             java(""
  79.                   + "package sample.r2;\n"
  80.                   + "\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:77: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  75.     @Test public void usesR2InAnnotations() {
  76.       lint() //
  77. >         .files(R2, BIND_TEST, //
  78.               java(""
  79.                   + "package sample.r2;\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  86.                   + "}\n") //
  87.           ) //
  88. >         .issues(InvalidR2UsageDetector.ISSUE) //
  89.           .run() //
  90.           .expectClean();

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  87.           ) //
  88.           .issues(InvalidR2UsageDetector.ISSUE) //
  89. >         .run() //
  90.           .expectClean();
  91.     }

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  88.           .issues(InvalidR2UsageDetector.ISSUE) //
  89.           .run() //
  90. >         .expectClean();
  91.     }
  92.   

butterknife/src/main/java/butterknife/ButterKnife.java:76: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  74.   public final class ButterKnife {
  75.     private ButterKnife() {
  76. >     throw new AssertionError("No instances.");
  77.     }
  78.   

butterknife/src/main/java/butterknife/ButterKnife.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  73.    */
  74.   public final class ButterKnife {
  75. >   private ButterKnife() {
  76.       throw new AssertionError("No instances.");
  77.     }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `classes`.
  78.         UFile sourceFile = context.getUastFile();
  79.         List<UClass> classes = sourceFile.getClasses();
  80. >       if (!classes.isEmpty() && classes.get(0).getName() != null) {
  81.           String qualifiedName = classes.get(0).getName();
  82.           if (qualifiedName.contains("_ViewBinder")

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:81: warning: GRADUAL_DEREFERENCE
  method call on pointer `classes`.
  79.         List<UClass> classes = sourceFile.getClasses();
  80.         if (!classes.isEmpty() && classes.get(0).getName() != null) {
  81. >         String qualifiedName = classes.get(0).getName();
  82.           if (qualifiedName.contains("_ViewBinder")
  83.               || qualifiedName.contains("_ViewBinding")

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:78: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  76.   
  77.       private static void detectR2(JavaContext context, UElement node) {
  78. >       UFile sourceFile = context.getUastFile();
  79.         List<UClass> classes = sourceFile.getClasses();
  80.         if (!classes.isEmpty() && classes.get(0).getName() != null) {

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  88.         }
  89.         boolean isR2 = isR2Expression(node);
  90. >       if (isR2 && !context.isSuppressedWithComment(node, ISSUE)) {
  91.           context.report(ISSUE, node, context.getLocation(node), LINT_ERROR_BODY);
  92.         }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  89.         boolean isR2 = isR2Expression(node);
  90.         if (isR2 && !context.isSuppressedWithComment(node, ISSUE)) {
  91. >         context.report(ISSUE, node, context.getLocation(node), LINT_ERROR_BODY);
  92.         }
  93.       }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  78.         UFile sourceFile = context.getUastFile();
  79.         List<UClass> classes = sourceFile.getClasses();
  80. >       if (!classes.isEmpty() && classes.get(0).getName() != null) {
  81.           String qualifiedName = classes.get(0).getName();
  82.           if (qualifiedName.contains("_ViewBinder")

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:81: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  79.         List<UClass> classes = sourceFile.getClasses();
  80.         if (!classes.isEmpty() && classes.get(0).getName() != null) {
  81. >         String qualifiedName = classes.get(0).getName();
  82.           if (qualifiedName.contains("_ViewBinder")
  83.               || qualifiedName.contains("_ViewBinding")

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:82: warning: GRADUAL_DEREFERENCE
  method call on pointer `qualifiedName`.
  80.         if (!classes.isEmpty() && classes.get(0).getName() != null) {
  81.           String qualifiedName = classes.get(0).getName();
  82. >         if (qualifiedName.contains("_ViewBinder")
  83.               || qualifiedName.contains("_ViewBinding")
  84.               || qualifiedName.equals(R2)) {

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `qualifiedName`.
  81.           String qualifiedName = classes.get(0).getName();
  82.           if (qualifiedName.contains("_ViewBinder")
  83. >             || qualifiedName.contains("_ViewBinding")
  84.               || qualifiedName.equals(R2)) {
  85.             // skip generated files and R2

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `qualifiedName`.
  82.           if (qualifiedName.contains("_ViewBinder")
  83.               || qualifiedName.contains("_ViewBinding")
  84. >             || qualifiedName.equals(R2)) {
  85.             // skip generated files and R2
  86.             return;

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `sourceFile`.
  77.       private static void detectR2(JavaContext context, UElement node) {
  78.         UFile sourceFile = context.getUastFile();
  79. >       List<UClass> classes = sourceFile.getClasses();
  80.         if (!classes.isEmpty() && classes.get(0).getName() != null) {
  81.           String qualifiedName = classes.get(0).getName();

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_DEREFERENCE
  method call on pointer `setter`,dereference of pointer `array`.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  82.       }
  83.       String name = getResourceEntryName(source, id);
  84. >     throw new IllegalStateException("Required view '"
  85.           + name
  86.           + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  77.   
  78.     public static View findRequiredView(View source, @IdRes int id, String who) {
  79. >     View view = source.findViewById(id);
  80.       if (view != null) {
  81.         return view;

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:136: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  134.       );
  135.   
  136. >     assertAbout(javaSource()).that(source)
  137.               .withCompilerOptions("-Xlint:-processing")
  138.               .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  136.       assertAbout(javaSource()).that(source)
  137.               .withCompilerOptions("-Xlint:-processing")
  138. >             .processedWith(new ButterKnifeProcessor())
  139.               .compilesWithoutWarnings()
  140.               .and()

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  135.   
  136.       assertAbout(javaSource()).that(source)
  137. >             .withCompilerOptions("-Xlint:-processing")
  138.               .processedWith(new ButterKnifeProcessor())
  139.               .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  137.               .withCompilerOptions("-Xlint:-processing")
  138.               .processedWith(new ButterKnifeProcessor())
  139. >             .compilesWithoutWarnings()
  140.               .and()
  141.               .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  138.               .processedWith(new ButterKnifeProcessor())
  139.               .compilesWithoutWarnings()
  140. >             .and()
  141.               .generatesSources(bindingSource);
  142.     }

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:141: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  139.               .compilesWithoutWarnings()
  140.               .and()
  141. >             .generatesSources(bindingSource);
  142.     }
  143.   

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  134.       );
  135.   
  136. >     assertAbout(javaSource()).that(source)
  137.               .withCompilerOptions("-Xlint:-processing")
  138.               .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  135.   
  136.       assertAbout(javaSource()).that(source)
  137. >             .withCompilerOptions("-Xlint:-processing")
  138.               .processedWith(new ButterKnifeProcessor())
  139.               .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  78.   
  79.     FieldResourceBinding(Id id, String name, Type type) {
  80. >     this.id = id;
  81.       this.name = name;
  82.       this.type = type;

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:81: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  79.     FieldResourceBinding(Id id, String name, Type type) {
  80.       this.id = id;
  81. >     this.name = name;
  82.       this.type = type;
  83.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.       this.id = id;
  81.       this.name = name;
  82. >     this.type = type;
  83.     }
  84.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.     private final Type type;
  78.   
  79. >   FieldResourceBinding(Id id, String name, Type type) {
  80.       this.id = id;
  81.       this.name = name;

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:75: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  73.       private final Id id;
  74.   
  75. >     private final Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> methodBindings =
  76.           new LinkedHashMap<>();
  77.       @Nullable FieldViewBinding fieldBinding;

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  78.   
  79.       Builder(Id id) {
  80. >       this.id = id;
  81.       }
  82.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:75: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  73.       private final Id id;
  74.   
  75. >     private final Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> methodBindings =
  76.           new LinkedHashMap<>();
  77.       @Nullable FieldViewBinding fieldBinding;

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       @Nullable FieldViewBinding fieldBinding;
  78.   
  79. >     Builder(Id id) {
  80.         this.id = id;
  81.       }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:84: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  82.       this.target = null;
  83.   
  84. >     target.title = null;
  85.       target.subtitle = null;
  86.       target.hello = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:85: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  83.   
  84.       target.title = null;
  85. >     target.subtitle = null;
  86.       target.hello = null;
  87.       target.listOfThings = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:86: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  84.       target.title = null;
  85.       target.subtitle = null;
  86. >     target.hello = null;
  87.       target.listOfThings = null;
  88.       target.footer = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:87: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  85.       target.subtitle = null;
  86.       target.hello = null;
  87. >     target.listOfThings = null;
  88.       target.footer = null;
  89.       target.headerViews = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:88: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  86.       target.hello = null;
  87.       target.listOfThings = null;
  88. >     target.footer = null;
  89.       target.headerViews = null;
  90.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:89: warning: GRADUAL_DEREFERENCE
  dereference of pointer `target`.
  87.       target.listOfThings = null;
  88.       target.footer = null;
  89. >     target.headerViews = null;
  90.   
  91.       view7f08001d.setOnClickListener(null);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:80: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  78.     @CallSuper
  79.     public void unbind() {
  80. >     SimpleActivity target = this.target;
  81.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  82.       this.target = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:82: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  80.       SimpleActivity target = this.target;
  81.       if (target == null) throw new IllegalStateException("Bindings already cleared.");
  82. >     this.target = null;
  83.   
  84.       target.title = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:93: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  91.       view7f08001d.setOnClickListener(null);
  92.       view7f08001d.setOnLongClickListener(null);
  93. >     view7f08001d = null;
  94.       ((AdapterView<?>) view7f08001e).setOnItemClickListener(null);
  95.       view7f08001e = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:95: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  93.       view7f08001d = null;
  94.       ((AdapterView<?>) view7f08001e).setOnItemClickListener(null);
  95. >     view7f08001e = null;
  96.     }
  97.   }

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:81: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  79.     public void unbind() {
  80.       SimpleActivity target = this.target;
  81. >     if (target == null) throw new IllegalStateException("Bindings already cleared.");
  82.       this.target = null;
  83.   

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity_ViewBinding.view7f08001d`,dereference of pointer `this`.
  89.       target.headerViews = null;
  90.   
  91. >     view7f08001d.setOnClickListener(null);
  92.       view7f08001d.setOnLongClickListener(null);
  93.       view7f08001d = null;

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity_ViewBinding.view7f08001d`,dereference of pointer `this`.
  90.   
  91.       view7f08001d.setOnClickListener(null);
  92. >     view7f08001d.setOnLongClickListener(null);
  93.       view7f08001d = null;
  94.       ((AdapterView<?>) view7f08001e).setOnItemClickListener(null);

butterknife-integration-test/build/generated/source/apt/codegen/release/com/example/butterknife/library/SimpleActivity_ViewBinding.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->com.example.butterknife.library.SimpleActivity_ViewBinding.view7f08001e`,dereference of pointer `this`.
  92.       view7f08001d.setOnLongClickListener(null);
  93.       view7f08001d = null;
  94. >     ((AdapterView<?>) view7f08001e).setOnItemClickListener(null);
  95.       view7f08001e = null;
  96.     }

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       }
  78.       public static final class id {
  79. >         private id() {}
  80.   
  81.           public static int action_container = 0x7f0c0001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       }
  78.       public static final class id {
  79. >         private id() {}
  80.   
  81.           public static int action_container = 0x7f0c0001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       }
  78.       public static final class id {
  79. >         private id() {}
  80.   
  81.           public static int action_container = 0x7f0c0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       }
  78.       public static final class id {
  79. >         private id() {}
  80.   
  81.           public static int action_container = 0x7f0c0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       }
  78.       public static final class id {
  79. >         private id() {}
  80.   
  81.           public static int action_container = 0x7f0c0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:79: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  77.       }
  78.       public static final class id {
  79. >         private id() {}
  80.   
  81.           public static int action_container = 0x7f0c0001;

butterknife-runtime/src/test/java/butterknife/RClassTest.java:122: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  120.       );
  121.   
  122. >     assertAbout(javaSources()).that(asList(source, NON_FINAL_R, R2))
  123.           .withCompilerOptions("-Xlint:-processing")
  124.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:122: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  120.       );
  121.   
  122. >     assertAbout(javaSources()).that(asList(source, NON_FINAL_R, R2))
  123.           .withCompilerOptions("-Xlint:-processing")
  124.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  121.   
  122.       assertAbout(javaSources()).that(asList(source, NON_FINAL_R, R2))
  123. >         .withCompilerOptions("-Xlint:-processing")
  124.           .processedWith(new ButterKnifeProcessor())
  125.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  122.       assertAbout(javaSources()).that(asList(source, NON_FINAL_R, R2))
  123.           .withCompilerOptions("-Xlint:-processing")
  124. >         .processedWith(new ButterKnifeProcessor())
  125.           .compilesWithoutWarnings()
  126.           .and()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  121.   
  122.       assertAbout(javaSources()).that(asList(source, NON_FINAL_R, R2))
  123. >         .withCompilerOptions("-Xlint:-processing")
  124.           .processedWith(new ButterKnifeProcessor())
  125.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  123.           .withCompilerOptions("-Xlint:-processing")
  124.           .processedWith(new ButterKnifeProcessor())
  125. >         .compilesWithoutWarnings()
  126.           .and()
  127.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/RClassTest.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  124.           .processedWith(new ButterKnifeProcessor())
  125.           .compilesWithoutWarnings()
  126. >         .and()
  127.           .generatesSources(bindingSource);
  128.     }

butterknife-runtime/src/test/java/butterknife/RClassTest.java:127: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  125.           .compilesWithoutWarnings()
  126.           .and()
  127. >         .generatesSources(bindingSource);
  128.     }
  129.   

butterknife-runtime/src/test/java/butterknife/RClassTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  120.       );
  121.   
  122. >     assertAbout(javaSources()).that(asList(source, NON_FINAL_R, R2))
  123.           .withCompilerOptions("-Xlint:-processing")
  124.           .processedWith(new ButterKnifeProcessor())

butterknife/src/main/java/butterknife/ButterKnife.java:83: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  81.   
  82.     @VisibleForTesting
  83. >   static final Map<Class<?>, Constructor<? extends Unbinder>> BINDINGS = new LinkedHashMap<>();
  84.   
  85.     /** Control whether debug logging is enabled. */

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:85: warning: GRADUAL_DEREFERENCE
  method call on pointer `methods`.
  83.       public boolean hasMethodBinding(ListenerClass listener, ListenerMethod method) {
  84.         Map<ListenerMethod, Set<MethodViewBinding>> methods = methodBindings.get(listener);
  85. >       return methods != null && methods.containsKey(method);
  86.       }
  87.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:84: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ViewBinding$Builder.methodBindings`,dereference of pointer `this`.
  82.   
  83.       public boolean hasMethodBinding(ListenerClass listener, ListenerMethod method) {
  84. >       Map<ListenerMethod, Set<MethodViewBinding>> methods = methodBindings.get(listener);
  85.         return methods != null && methods.containsKey(method);
  86.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:86: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  84.   
  85.     @Override public Id id() {
  86. >     return id;
  87.     }
  88.   

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:182: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$21`.
  180.       );
  181.   
  182. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  183.           .withCompilerOptions("-Xlint:-processing")
  184.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:186: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$42`.
  184.           .processedWith(new ButterKnifeProcessor())
  185.           .compilesWithoutWarnings()
  186. >         .and()
  187.           .generatesSources(binding1Source, binding2Source);
  188.     }

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:182: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  180.       );
  181.   
  182. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  183.           .withCompilerOptions("-Xlint:-processing")
  184.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  181.   
  182.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  183. >         .withCompilerOptions("-Xlint:-processing")
  184.           .processedWith(new ButterKnifeProcessor())
  185.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:184: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  182.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  183.           .withCompilerOptions("-Xlint:-processing")
  184. >         .processedWith(new ButterKnifeProcessor())
  185.           .compilesWithoutWarnings()
  186.           .and()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  181.   
  182.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  183. >         .withCompilerOptions("-Xlint:-processing")
  184.           .processedWith(new ButterKnifeProcessor())
  185.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:185: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  183.           .withCompilerOptions("-Xlint:-processing")
  184.           .processedWith(new ButterKnifeProcessor())
  185. >         .compilesWithoutWarnings()
  186.           .and()
  187.           .generatesSources(binding1Source, binding2Source);

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  184.           .processedWith(new ButterKnifeProcessor())
  185.           .compilesWithoutWarnings()
  186. >         .and()
  187.           .generatesSources(binding1Source, binding2Source);
  188.     }

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  185.           .compilesWithoutWarnings()
  186.           .and()
  187. >         .generatesSources(binding1Source, binding2Source);
  188.     }
  189.   

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:182: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  180.       );
  181.   
  182. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  183.           .withCompilerOptions("-Xlint:-processing")
  184.           .processedWith(new ButterKnifeProcessor())

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  88.       TypeSpec bindingConfiguration = createType(sdk, debuggable);
  89.       return JavaFile.builder(bindingClassName.packageName(), bindingConfiguration)
  90. >         .addFileComment("Generated code from Butter Knife. Do not modify!")
  91.           .build();
  92.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:91: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  89.       return JavaFile.builder(bindingClassName.packageName(), bindingConfiguration)
  90.           .addFileComment("Generated code from Butter Knife. Do not modify!")
  91. >         .build();
  92.     }
  93.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:89: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.bindingClassName`,dereference of pointer `this`.
  87.     JavaFile brewJava(int sdk, boolean debuggable) {
  88.       TypeSpec bindingConfiguration = createType(sdk, debuggable);
  89. >     return JavaFile.builder(bindingClassName.packageName(), bindingConfiguration)
  90.           .addFileComment("Generated code from Butter Knife. Do not modify!")
  91.           .build();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  86.   
  87.     JavaFile brewJava(int sdk, boolean debuggable) {
  88. >     TypeSpec bindingConfiguration = createType(sdk, debuggable);
  89.       return JavaFile.builder(bindingClassName.packageName(), bindingConfiguration)
  90.           .addFileComment("Generated code from Butter Knife. Do not modify!")

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:123: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  121.     private @Nullable Trees trees;
  122.   
  123. >   private int sdk = 1;
  124.     private boolean debuggable = true;
  125.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:124: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  122.   
  123.     private int sdk = 1;
  124. >   private boolean debuggable = true;
  125.   
  126.     private final RScanner rScanner = new RScanner();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:126: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  124.     private boolean debuggable = true;
  125.   
  126. >   private final RScanner rScanner = new RScanner();
  127.   
  128.     @Override public synchronized void init(ProcessingEnvironment env) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  124.     private boolean debuggable = true;
  125.   
  126. >   private final RScanner rScanner = new RScanner();
  127.   
  128.     @Override public synchronized void init(ProcessingEnvironment env) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  86.   @AutoService(Processor.class)
  87.   @SuppressWarnings("NullAway") // TODO fix all these...
  88. > public final class ButterKnifeProcessor extends AbstractProcessor {
  89.     // TODO remove when http://b.android.com/187527 is released.
  90.     private static final String OPTION_SDK_INT = "butterknife.minSdk";

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `methods`.
  94.           methodBindings.put(listener, methods);
  95.         } else {
  96. >         set = methods.get(method);
  97.         }
  98.         if (set == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `methods`.
  98.         if (set == null) {
  99.           set = new LinkedHashSet<>();
  100. >         methods.put(method, set);
  101.         }
  102.         set.add(binding);

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  97.         }
  98.         if (set == null) {
  99. >         set = new LinkedHashSet<>();
  100.           methods.put(method, set);
  101.         }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:93: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  91.         Set<MethodViewBinding> set = null;
  92.         if (methods == null) {
  93. >         methods = new LinkedHashMap<>();
  94.           methodBindings.put(listener, methods);
  95.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `set`.
  100.           methods.put(method, set);
  101.         }
  102. >       set.add(binding);
  103.       }
  104.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ViewBinding$Builder.methodBindings`,dereference of pointer `this`.
  88.       public void addMethodBinding(ListenerClass listener, ListenerMethod method,
  89.           MethodViewBinding binding) {
  90. >       Map<ListenerMethod, Set<MethodViewBinding>> methods = methodBindings.get(listener);
  91.         Set<MethodViewBinding> set = null;
  92.         if (methods == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ViewBinding$Builder.methodBindings`,dereference of pointer `this`.
  92.         if (methods == null) {
  93.           methods = new LinkedHashMap<>();
  94. >         methodBindings.put(listener, methods);
  95.         } else {
  96.           set = methods.get(method);

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:88: warning: GRADUAL_DEREFERENCE
  method call on pointer `setter`.
  86.     public static <T extends View, V> void set(@NonNull T view,
  87.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  88. >     setter.set(view, value, 0);
  89.     }
  90.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:90: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$4`.
  88.   
  89.     @Override public boolean requiresResources(int sdk) {
  90. >     return type.methodForSdk(sdk).requiresResources;
  91.     }
  92.   

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:90: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.FieldResourceBinding.type`,dereference of pointer `this`.
  88.   
  89.     @Override public boolean requiresResources(int sdk) {
  90. >     return type.methodForSdk(sdk).requiresResources;
  91.     }
  92.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:105: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  103.     private static final String STRING_TYPE = "java.lang.String";
  104.     private static final String LIST_TYPE = List.class.getCanonicalName();
  105. >   private static final List<Class<? extends Annotation>> LISTENERS = Arrays.asList(//
  106.         OnCheckedChanged.class, //
  107.         OnClick.class, //

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `java.util.List`.
  102.     private static final String NULLABLE_ANNOTATION_NAME = "Nullable";
  103.     private static final String STRING_TYPE = "java.lang.String";
  104. >   private static final String LIST_TYPE = List.class.getCanonicalName();
  105.     private static final List<Class<? extends Annotation>> LISTENERS = Arrays.asList(//
  106.         OnCheckedChanged.class, //

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:92: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  90.     private static final String OPTION_SDK_INT = "butterknife.minSdk";
  91.     private static final String OPTION_DEBUGGABLE = "butterknife.debuggable";
  92. >   static final Id NO_ID = new Id(NO_RES_ID);
  93.     static final String VIEW_TYPE = "android.view.View";
  94.     static final String ACTIVITY_TYPE = "android.app.Activity";

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:95: warning: GRADUAL_DEREFERENCE
  dereference of pointer `method`.
  93.     @Override public CodeBlock render(int sdk) {
  94.       ResourceMethod method = type.methodForSdk(sdk);
  95. >     if (method.typeName == null) {
  96.         if (method.requiresResources) {
  97.           return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:96: warning: GRADUAL_DEREFERENCE
  dereference of pointer `method`.
  94.       ResourceMethod method = type.methodForSdk(sdk);
  95.       if (method.typeName == null) {
  96. >       if (method.requiresResources) {
  97.           return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:101: warning: GRADUAL_DEREFERENCE
  dereference of pointer `method`.
  99.         return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);
  100.       }
  101. >     if (method.requiresResources) {
  102.         return CodeBlock.of("target.$L = $T.$L(res, $L)", name, method.typeName, method.name,
  103.             id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:99: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$23`,dereference of pointer `method`.
  97.           return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }
  99. >       return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);
  100.       }
  101.       if (method.requiresResources) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:99: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$23`,dereference of pointer `this->butterknife.compiler.FieldResourceBinding.id`,dereference of pointer `this`.
  97.           return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }
  99. >       return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);
  100.       }
  101.       if (method.requiresResources) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:99: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$23`,dereference of pointer `this`.
  97.           return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }
  99. >       return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);
  100.       }
  101.       if (method.requiresResources) {

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:102: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`,dereference of pointer `method`.
  100.       }
  101.       if (method.requiresResources) {
  102. >       return CodeBlock.of("target.$L = $T.$L(res, $L)", name, method.typeName, method.name,
  103.             id.code);
  104.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:102: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`,dereference of pointer `this->butterknife.compiler.FieldResourceBinding.id`,dereference of pointer `this`.
  100.       }
  101.       if (method.requiresResources) {
  102. >       return CodeBlock.of("target.$L = $T.$L(res, $L)", name, method.typeName, method.name,
  103.             id.code);
  104.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:102: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`,dereference of pointer `this`.
  100.       }
  101.       if (method.requiresResources) {
  102. >       return CodeBlock.of("target.$L = $T.$L(res, $L)", name, method.typeName, method.name,
  103.             id.code);
  104.       }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:105: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$56`,dereference of pointer `method`.
  103.             id.code);
  104.       }
  105. >     return CodeBlock.of("target.$L = $T.$L(context, $L)", name, method.typeName, method.name,
  106.           id.code);
  107.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:105: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$56`,dereference of pointer `this->butterknife.compiler.FieldResourceBinding.id`,dereference of pointer `this`.
  103.             id.code);
  104.       }
  105. >     return CodeBlock.of("target.$L = $T.$L(context, $L)", name, method.typeName, method.name,
  106.           id.code);
  107.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:105: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$56`,dereference of pointer `this`.
  103.             id.code);
  104.       }
  105. >     return CodeBlock.of("target.$L = $T.$L(context, $L)", name, method.typeName, method.name,
  106.           id.code);
  107.     }

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`,dereference of pointer `method`.
  95.       if (method.typeName == null) {
  96.         if (method.requiresResources) {
  97. >         return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }
  99.         return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`,dereference of pointer `this->butterknife.compiler.FieldResourceBinding.id`,dereference of pointer `this`.
  95.       if (method.typeName == null) {
  96.         if (method.requiresResources) {
  97. >         return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }
  99.         return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`,dereference of pointer `this`.
  95.       if (method.typeName == null) {
  96.         if (method.requiresResources) {
  97. >         return CodeBlock.of("target.$L = res.$L($L)", name, method.name, id.code);
  98.         }
  99.         return CodeBlock.of("target.$L = context.$L($L)", name, method.name, id.code);

butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:94: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.FieldResourceBinding.type`,dereference of pointer `this`.
  92.   
  93.     @Override public CodeBlock render(int sdk) {
  94. >     ResourceMethod method = type.methodForSdk(sdk);
  95.       if (method.typeName == null) {
  96.         if (method.requiresResources) {

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:95: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  93.     @Test public void usesR2OutsideAnnotations() {
  94.       lint() //
  95. >         .files(R2, //
  96.               java(""
  97.                   + "package sample.r2;\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:94: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  92.   
  93.     @Test public void usesR2OutsideAnnotations() {
  94. >     lint() //
  95.           .files(R2, //
  96.               java(""

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:96: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  94.       lint() //
  95.           .files(R2, //
  96. >             java(""
  97.                   + "package sample.r2;\n"
  98.                   + "\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:95: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  93.     @Test public void usesR2OutsideAnnotations() {
  94.       lint() //
  95. >         .files(R2, //
  96.               java(""
  97.                   + "package sample.r2;\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:110: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  108.                   + "}\n" //
  109.               )) //
  110. >         .issues(InvalidR2UsageDetector.ISSUE) //
  111.           .run() //
  112.           .expectErrorCount(2) //

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  109.               )) //
  110.           .issues(InvalidR2UsageDetector.ISSUE) //
  111. >         .run() //
  112.           .expectErrorCount(2) //
  113.           .expectWarningCount(0);

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  110.           .issues(InvalidR2UsageDetector.ISSUE) //
  111.           .run() //
  112. >         .expectErrorCount(2) //
  113.           .expectWarningCount(0);
  114.     }

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  111.           .run() //
  112.           .expectErrorCount(2) //
  113. >         .expectWarningCount(0);
  114.     }
  115.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:98: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$15`.
  96.           .addModifiers(PUBLIC);
  97.       if (isFinal) {
  98. >       result.addModifiers(FINAL);
  99.       }
  100.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:108: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$37`.
  106.   
  107.       if (hasTargetField()) {
  108. >       result.addField(targetTypeName, "target", PRIVATE);
  109.       }
  110.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:95: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$6`.
  93.   
  94.     private TypeSpec createType(int sdk, boolean debuggable) {
  95. >     TypeSpec.Builder result = TypeSpec.classBuilder(bindingClassName.simpleName())
  96.           .addModifiers(PUBLIC);
  97.       if (isFinal) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:97: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  95.       TypeSpec.Builder result = TypeSpec.classBuilder(bindingClassName.simpleName())
  96.           .addModifiers(PUBLIC);
  97. >     if (isFinal) {
  98.         result.addModifiers(FINAL);
  99.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:101: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  99.       }
  100.   
  101. >     if (parentBinding != null) {
  102.         result.superclass(parentBinding.bindingClassName);
  103.       } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:111: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  109.       }
  110.   
  111. >     if (isView) {
  112.         result.addMethod(createBindingConstructorForView());
  113.       } else if (isActivity) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:113: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  111.       if (isView) {
  112.         result.addMethod(createBindingConstructorForView());
  113. >     } else if (isActivity) {
  114.         result.addMethod(createBindingConstructorForActivity());
  115.       } else if (isDialog) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:115: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  113.       } else if (isActivity) {
  114.         result.addMethod(createBindingConstructorForActivity());
  115. >     } else if (isDialog) {
  116.         result.addMethod(createBindingConstructorForDialog());
  117.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:124: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  122.       result.addMethod(createBindingConstructor(sdk, debuggable));
  123.   
  124. >     if (hasViewBindings() || parentBinding == null) {
  125.         result.addMethod(createBindingUnbindMethod(result));
  126.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  94.     private TypeSpec createType(int sdk, boolean debuggable) {
  95.       TypeSpec.Builder result = TypeSpec.classBuilder(bindingClassName.simpleName())
  96. >         .addModifiers(PUBLIC);
  97.       if (isFinal) {
  98.         result.addModifiers(FINAL);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  96.           .addModifiers(PUBLIC);
  97.       if (isFinal) {
  98. >       result.addModifiers(FINAL);
  99.       }
  100.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  102.         result.superclass(parentBinding.bindingClassName);
  103.       } else {
  104. >       result.addSuperinterface(UNBINDER);
  105.       }
  106.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  110.   
  111.       if (isView) {
  112. >       result.addMethod(createBindingConstructorForView());
  113.       } else if (isActivity) {
  114.         result.addMethod(createBindingConstructorForActivity());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  112.         result.addMethod(createBindingConstructorForView());
  113.       } else if (isActivity) {
  114. >       result.addMethod(createBindingConstructorForActivity());
  115.       } else if (isDialog) {
  116.         result.addMethod(createBindingConstructorForDialog());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  114.         result.addMethod(createBindingConstructorForActivity());
  115.       } else if (isDialog) {
  116. >       result.addMethod(createBindingConstructorForDialog());
  117.       }
  118.       if (!constructorNeedsView()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  118.       if (!constructorNeedsView()) {
  119.         // Add a delegating constructor with a target type + view signature for reflective use.
  120. >       result.addMethod(createBindingViewDelegateConstructor());
  121.       }
  122.       result.addMethod(createBindingConstructor(sdk, debuggable));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  120.         result.addMethod(createBindingViewDelegateConstructor());
  121.       }
  122. >     result.addMethod(createBindingConstructor(sdk, debuggable));
  123.   
  124.       if (hasViewBindings() || parentBinding == null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  123.   
  124.       if (hasViewBindings() || parentBinding == null) {
  125. >       result.addMethod(createBindingUnbindMethod(result));
  126.       }
  127.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  126.       }
  127.   
  128. >     return result.build();
  129.     }
  130.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`,dereference of pointer `this->butterknife.compiler.BindingSet.parentBinding`,dereference of pointer `this`.
  100.   
  101.       if (parentBinding != null) {
  102. >       result.superclass(parentBinding.bindingClassName);
  103.       } else {
  104.         result.addSuperinterface(UNBINDER);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`,dereference of pointer `this`.
  106.   
  107.       if (hasTargetField()) {
  108. >       result.addField(targetTypeName, "target", PRIVATE);
  109.       }
  110.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:95: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.bindingClassName`,dereference of pointer `this`.
  93.   
  94.     private TypeSpec createType(int sdk, boolean debuggable) {
  95. >     TypeSpec.Builder result = TypeSpec.classBuilder(bindingClassName.simpleName())
  96.           .addModifiers(PUBLIC);
  97.       if (isFinal) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  105.       }
  106.   
  107. >     if (hasTargetField()) {
  108.         result.addField(targetTypeName, "target", PRIVATE);
  109.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:112: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  110.   
  111.       if (isView) {
  112. >       result.addMethod(createBindingConstructorForView());
  113.       } else if (isActivity) {
  114.         result.addMethod(createBindingConstructorForActivity());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:114: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  112.         result.addMethod(createBindingConstructorForView());
  113.       } else if (isActivity) {
  114. >       result.addMethod(createBindingConstructorForActivity());
  115.       } else if (isDialog) {
  116.         result.addMethod(createBindingConstructorForDialog());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.         result.addMethod(createBindingConstructorForActivity());
  115.       } else if (isDialog) {
  116. >       result.addMethod(createBindingConstructorForDialog());
  117.       }
  118.       if (!constructorNeedsView()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  116.         result.addMethod(createBindingConstructorForDialog());
  117.       }
  118. >     if (!constructorNeedsView()) {
  119.         // Add a delegating constructor with a target type + view signature for reflective use.
  120.         result.addMethod(createBindingViewDelegateConstructor());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  118.       if (!constructorNeedsView()) {
  119.         // Add a delegating constructor with a target type + view signature for reflective use.
  120. >       result.addMethod(createBindingViewDelegateConstructor());
  121.       }
  122.       result.addMethod(createBindingConstructor(sdk, debuggable));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  120.         result.addMethod(createBindingViewDelegateConstructor());
  121.       }
  122. >     result.addMethod(createBindingConstructor(sdk, debuggable));
  123.   
  124.       if (hasViewBindings() || parentBinding == null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  122.       result.addMethod(createBindingConstructor(sdk, debuggable));
  123.   
  124. >     if (hasViewBindings() || parentBinding == null) {
  125.         result.addMethod(createBindingUnbindMethod(result));
  126.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  123.   
  124.       if (hasViewBindings() || parentBinding == null) {
  125. >       result.addMethod(createBindingUnbindMethod(result));
  126.       }
  127.   

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:96: warning: GRADUAL_DEREFERENCE
  method call on pointer `node`.
  94.   
  95.       private static boolean isR2Expression(UElement node) {
  96. >       UElement parentNode = node.getUastParent();
  97.         if (parentNode == null) {
  98.           return false;

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:100: warning: GRADUAL_DEREFERENCE
  method call on pointer `node`.
  98.           return false;
  99.         }
  100. >       String text = node.asSourceString();
  101.         UElement parent = LintUtils.skipParentheses(parentNode);
  102.         return (text.equals(R2) || text.contains(".R2"))

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:104: warning: GRADUAL_DEREFERENCE
  method call on pointer `parent`.
  102.         return (text.equals(R2) || text.contains(".R2"))
  103.             && parent instanceof UExpression
  104. >           && endsWithAny(parent.asSourceString(), SUPPORTED_TYPES);
  105.       }
  106.   

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `text`.
  100.         String text = node.asSourceString();
  101.         UElement parent = LintUtils.skipParentheses(parentNode);
  102. >       return (text.equals(R2) || text.contains(".R2"))
  103.             && parent instanceof UExpression
  104.             && endsWithAny(parent.asSourceString(), SUPPORTED_TYPES);

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  96.         @NonNull Property<? super T, V> setter, @Nullable V value) {
  97.       //noinspection ForLoopReplaceableByForEach
  98. >     for (int i = 0, count = list.size(); i < count; i++) {
  99.         setter.set(list.get(i), value);
  100.       }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `list`.
  97.       //noinspection ForLoopReplaceableByForEach
  98.       for (int i = 0, count = list.size(); i < count; i++) {
  99. >       setter.set(list.get(i), value);
  100.       }
  101.     }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:99: warning: GRADUAL_DEREFERENCE
  method call on pointer `setter`.
  97.       //noinspection ForLoopReplaceableByForEach
  98.       for (int i = 0, count = list.size(); i < count; i++) {
  99. >       setter.set(list.get(i), value);
  100.       }
  101.     }

butterknife/src/main/java/butterknife/ButterKnife.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  96.     @NonNull @UiThread
  97.     public static Unbinder bind(@NonNull Activity target) {
  98. >     View sourceView = target.getWindow().getDecorView();
  99.       return bind(target, sourceView);
  100.     }

butterknife/src/main/java/butterknife/ButterKnife.java:98: warning: GRADUAL_DEREFERENCE
  method call on pointer `target`.
  96.     @NonNull @UiThread
  97.     public static Unbinder bind(@NonNull Activity target) {
  98. >     View sourceView = target.getWindow().getDecorView();
  99.       return bind(target, sourceView);
  100.     }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:102: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  100.     public static <T> T castView(View view, @IdRes int id, String who, Class<T> cls) {
  101.       try {
  102. >       return cls.cast(view);
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:105: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  103.       } catch (ClassCastException e) {
  104.         String name = getResourceEntryName(view, id);
  105. >       throw new IllegalStateException("View '"
  106.             + name
  107.             + "' with ID "

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:106: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  104.   
  105.       public void setFieldBinding(FieldViewBinding fieldBinding) {
  106. >       if (this.fieldBinding != null) {
  107.           throw new AssertionError();
  108.         }

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:109: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  107.           throw new AssertionError();
  108.         }
  109. >       this.fieldBinding = fieldBinding;
  110.       }
  111.   

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:107: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  105.       public void setFieldBinding(FieldViewBinding fieldBinding) {
  106.         if (this.fieldBinding != null) {
  107. >         throw new AssertionError();
  108.         }
  109.         this.fieldBinding = fieldBinding;

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:122: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$40`.
  120.   
  121.       // now the GeneratingProcessor should let it compile
  122. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  123.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  124.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:122: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$41`.
  120.   
  121.       // now the GeneratingProcessor should let it compile
  122. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  123.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  124.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:117: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  115.       // w/o the GeneratingProcessor it can't find `class GeneratedView`
  116.       assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  117. >         .processedWith(new ButterKnifeProcessor())
  118.           .failsToCompile()
  119.           .withErrorContaining("cannot find symbol");

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  114.   
  115.       // w/o the GeneratingProcessor it can't find `class GeneratedView`
  116. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  117.           .processedWith(new ButterKnifeProcessor())
  118.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  116.       assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  117.           .processedWith(new ButterKnifeProcessor())
  118. >         .failsToCompile()
  119.           .withErrorContaining("cannot find symbol");
  120.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  117.           .processedWith(new ButterKnifeProcessor())
  118.           .failsToCompile()
  119. >         .withErrorContaining("cannot find symbol");
  120.   
  121.       // now the GeneratingProcessor should let it compile

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  120.   
  121.       // now the GeneratingProcessor should let it compile
  122. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  123.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  124.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  121.       // now the GeneratingProcessor should let it compile
  122.       assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  123. >         .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  124.               "package test;",
  125.               "import android.content.Context;",

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  120.   
  121.       // now the GeneratingProcessor should let it compile
  122. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  123.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  124.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  114.   
  115.       // w/o the GeneratingProcessor it can't find `class GeneratedView`
  116. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  117.           .processedWith(new ButterKnifeProcessor())
  118.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  120.   
  121.       // now the GeneratingProcessor should let it compile
  122. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  123.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  124.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  131.               "}"
  132.           ))
  133. >         .compilesWithoutError()
  134.           .withNoteContaining("@BindView field with unresolved type (GeneratedView)").and()
  135.           .withNoteContaining("must elsewhere be generated as a View or interface").and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  132.           ))
  133.           .compilesWithoutError()
  134. >         .withNoteContaining("@BindView field with unresolved type (GeneratedView)").and()
  135.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  136.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  132.           ))
  133.           .compilesWithoutError()
  134. >         .withNoteContaining("@BindView field with unresolved type (GeneratedView)").and()
  135.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  136.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$69`.
  133.           .compilesWithoutError()
  134.           .withNoteContaining("@BindView field with unresolved type (GeneratedView)").and()
  135. >         .withNoteContaining("must elsewhere be generated as a View or interface").and()
  136.           .and()
  137.           .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  133.           .compilesWithoutError()
  134.           .withNoteContaining("@BindView field with unresolved type (GeneratedView)").and()
  135. >         .withNoteContaining("must elsewhere be generated as a View or interface").and()
  136.           .and()
  137.           .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$76`.
  134.           .withNoteContaining("@BindView field with unresolved type (GeneratedView)").and()
  135.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  136. >         .and()
  137.           .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");
  138.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  135.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  136.           .and()
  137. >         .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");
  138.     }
  139.   

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:109: warning: GRADUAL_DEREFERENCE
  method call on pointer `possibleValues`,dereference of pointer `tokens`.
  107.       private static boolean endsWithAny(String text, Set<String> possibleValues) {
  108.         String[] tokens = text.split("\\.");
  109. >       return tokens.length > 1 && possibleValues.contains(tokens[tokens.length - 1]);
  110.       }
  111.     }

butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:108: warning: GRADUAL_DEREFERENCE
  method call on pointer `text`.
  106.   
  107.       private static boolean endsWithAny(String text, Set<String> possibleValues) {
  108. >       String[] tokens = text.split("\\.");
  109.         return tokens.length > 1 && possibleValues.contains(tokens[tokens.length - 1]);
  110.       }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `setter`,dereference of pointer `array`.
  109.       //noinspection ForLoopReplaceableByForEach
  110.       for (int i = 0, count = array.length; i < count; i++) {
  111. >       setter.set(array[i], value);
  112.       }
  113.     }

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  109.       }
  110.       public static final class integer {
  111. >         private integer() {}
  112.   
  113.           public static int status_bar_notification_info_maxnum = 0x7f0d0001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  109.       }
  110.       public static final class integer {
  111. >         private integer() {}
  112.   
  113.           public static int status_bar_notification_info_maxnum = 0x7f0d0001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  109.       }
  110.       public static final class integer {
  111. >         private integer() {}
  112.   
  113.           public static int status_bar_notification_info_maxnum = 0x7f0d0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  109.       }
  110.       public static final class integer {
  111. >         private integer() {}
  112.   
  113.           public static int status_bar_notification_info_maxnum = 0x7f0d0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  109.       }
  110.       public static final class integer {
  111. >         private integer() {}
  112.   
  113.           public static int status_bar_notification_info_maxnum = 0x7f0d0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:111: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  109.       }
  110.       public static final class integer {
  111. >         private integer() {}
  112.   
  113.           public static int status_bar_notification_info_maxnum = 0x7f0d0001;

butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  111.   
  112.       public ViewBinding build() {
  113. >       return new ViewBinding(id, methodBindings, fieldBinding);
  114.       }
  115.     }

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  122.       assertAbout(javaSource()).that(source)
  123.           .processedWith(new ButterKnifeProcessor())
  124. >         .failsToCompile()
  125.           .withErrorContaining("@BindColor field type must be 'int' or 'ColorStateList'. (test.Test.one)")
  126.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  123.           .processedWith(new ButterKnifeProcessor())
  124.           .failsToCompile()
  125. >         .withErrorContaining("@BindColor field type must be 'int' or 'ColorStateList'. (test.Test.one)")
  126.           .in(source).onLine(4);
  127.     }

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  124.           .failsToCompile()
  125.           .withErrorContaining("@BindColor field type must be 'int' or 'ColorStateList'. (test.Test.one)")
  126. >         .in(source).onLine(4);
  127.     }
  128.   }

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  124.           .failsToCompile()
  125.           .withErrorContaining("@BindColor field type must be 'int' or 'ColorStateList'. (test.Test.one)")
  126. >         .in(source).onLine(4);
  127.     }
  128.   }

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  120.       );
  121.   
  122. >     assertAbout(javaSource()).that(source)
  123.           .processedWith(new ButterKnifeProcessor())
  124.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:123: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  121.   
  122.       assertAbout(javaSource()).that(source)
  123. >         .processedWith(new ButterKnifeProcessor())
  124.           .failsToCompile()
  125.           .withErrorContaining("@BindColor field type must be 'int' or 'ColorStateList'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindColorTest.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  120.       );
  121.   
  122. >     assertAbout(javaSource()).that(source)
  123.           .processedWith(new ButterKnifeProcessor())
  124.           .failsToCompile()

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  116.         Class<T> cls) {
  117.       try {
  118. >       return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120.         throw new IllegalStateException("Parameter #"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:120: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  118.         return cls.cast(value);
  119.       } catch (ClassCastException e) {
  120. >       throw new IllegalStateException("Parameter #"
  121.             + (fromPos + 1)
  122.             + " of method '"

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  124.       assertAbout(javaSource()).that(source)
  125.           .processedWith(new ButterKnifeProcessor())
  126. >         .failsToCompile()
  127.           .withErrorContaining("@BindDrawable field type must be 'Drawable'. (test.Test.one)")
  128.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:127: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  125.           .processedWith(new ButterKnifeProcessor())
  126.           .failsToCompile()
  127. >         .withErrorContaining("@BindDrawable field type must be 'Drawable'. (test.Test.one)")
  128.           .in(source).onLine(4);
  129.     }

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  126.           .failsToCompile()
  127.           .withErrorContaining("@BindDrawable field type must be 'Drawable'. (test.Test.one)")
  128. >         .in(source).onLine(4);
  129.     }
  130.   }

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  126.           .failsToCompile()
  127.           .withErrorContaining("@BindDrawable field type must be 'Drawable'. (test.Test.one)")
  128. >         .in(source).onLine(4);
  129.     }
  130.   }

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  122.       );
  123.   
  124. >     assertAbout(javaSource()).that(source)
  125.           .processedWith(new ButterKnifeProcessor())
  126.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:125: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  123.   
  124.       assertAbout(javaSource()).that(source)
  125. >         .processedWith(new ButterKnifeProcessor())
  126.           .failsToCompile()
  127.           .withErrorContaining("@BindDrawable field type must be 'Drawable'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java:124: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  122.       );
  123.   
  124. >     assertAbout(javaSource()).that(source)
  125.           .processedWith(new ButterKnifeProcessor())
  126.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  153.       );
  154.   
  155. >     assertAbout(javaSource()).that(source)
  156.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  157.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:157: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  155.       assertAbout(javaSource()).that(source)
  156.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  157. >         .processedWith(new ButterKnifeProcessor())
  158.           .compilesWithoutWarnings()
  159.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  154.   
  155.       assertAbout(javaSource()).that(source)
  156. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  157.           .processedWith(new ButterKnifeProcessor())
  158.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:158: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  156.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  157.           .processedWith(new ButterKnifeProcessor())
  158. >         .compilesWithoutWarnings()
  159.           .and()
  160.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  157.           .processedWith(new ButterKnifeProcessor())
  158.           .compilesWithoutWarnings()
  159. >         .and()
  160.           .generatesSources(bindingSource);
  161.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:160: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  158.           .compilesWithoutWarnings()
  159.           .and()
  160. >         .generatesSources(bindingSource);
  161.     }
  162.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:155: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  153.       );
  154.   
  155. >     assertAbout(javaSource()).that(source)
  156.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  157.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:156: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  154.   
  155.       assertAbout(javaSource()).that(source)
  156. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  157.           .processedWith(new ButterKnifeProcessor())
  158.           .compilesWithoutWarnings()

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:118: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  116.     @Test public void usesR2WithSuppression() {
  117.       lint() //
  118. >         .files(R2, java(""
  119.               + "package sample.r2;\n"
  120.               + "\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:117: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  115.   
  116.     @Test public void usesR2WithSuppression() {
  117. >     lint() //
  118.           .files(R2, java(""
  119.               + "package sample.r2;\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:118: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  116.     @Test public void usesR2WithSuppression() {
  117.       lint() //
  118. >         .files(R2, java(""
  119.               + "package sample.r2;\n"
  120.               + "\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:118: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  116.     @Test public void usesR2WithSuppression() {
  117.       lint() //
  118. >         .files(R2, java(""
  119.               + "package sample.r2;\n"
  120.               + "\n"

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  131.               + "  }\n"
  132.               + "}\n")) //
  133. >         .issues(InvalidR2UsageDetector.ISSUE) //
  134.           .run() //
  135.           .expectClean();

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  132.               + "}\n")) //
  133.           .issues(InvalidR2UsageDetector.ISSUE) //
  134. >         .run() //
  135.           .expectClean();
  136.     }

butterknife-lint/src/test/java/butterknife/lint/InvalidR2UsageDetectorTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  133.           .issues(InvalidR2UsageDetector.ISSUE) //
  134.           .run() //
  135. >         .expectClean();
  136.     }
  137.   }

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.       }
  115.       public static final class layout {
  116. >         private layout() {}
  117.   
  118.           public static int notification_action = 0x7f0f0001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.       }
  115.       public static final class layout {
  116. >         private layout() {}
  117.   
  118.           public static int notification_action = 0x7f0f0001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.       }
  115.       public static final class layout {
  116. >         private layout() {}
  117.   
  118.           public static int notification_action = 0x7f0f0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.       }
  115.       public static final class layout {
  116. >         private layout() {}
  117.   
  118.           public static int notification_action = 0x7f0f0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.       }
  115.       public static final class layout {
  116. >         private layout() {}
  117.   
  118.           public static int notification_action = 0x7f0f0001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  114.       }
  115.       public static final class layout {
  116. >         private layout() {}
  117.   
  118.           public static int notification_action = 0x7f0f0001;

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:119: warning: GRADUAL_DEREFERENCE
  method call on pointer `setter`.
  117.     public static <T extends View, V> void set(@NonNull T view,
  118.         @NonNull Property<? super T, V> setter, @Nullable V value) {
  119. >     setter.set(view, value);
  120.     }
  121.   

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:130: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  128.       assertAbout(javaSource()).that(source)
  129.           .processedWith(new ButterKnifeProcessor())
  130. >         .failsToCompile()
  131.           .withErrorContaining("@BindFont field type must be 'Typeface'. (test.Test.one)")
  132.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  129.           .processedWith(new ButterKnifeProcessor())
  130.           .failsToCompile()
  131. >         .withErrorContaining("@BindFont field type must be 'Typeface'. (test.Test.one)")
  132.           .in(source).onLine(4);
  133.     }

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:132: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  130.           .failsToCompile()
  131.           .withErrorContaining("@BindFont field type must be 'Typeface'. (test.Test.one)")
  132. >         .in(source).onLine(4);
  133.     }
  134.   

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:132: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  130.           .failsToCompile()
  131.           .withErrorContaining("@BindFont field type must be 'Typeface'. (test.Test.one)")
  132. >         .in(source).onLine(4);
  133.     }
  134.   

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  126.       );
  127.   
  128. >     assertAbout(javaSource()).that(source)
  129.           .processedWith(new ButterKnifeProcessor())
  130.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:129: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  127.   
  128.       assertAbout(javaSource()).that(source)
  129. >         .processedWith(new ButterKnifeProcessor())
  130.           .failsToCompile()
  131.           .withErrorContaining("@BindFont field type must be 'Typeface'. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:128: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  126.       );
  127.   
  128. >     assertAbout(javaSource()).that(source)
  129.           .processedWith(new ButterKnifeProcessor())
  130.           .failsToCompile()

butterknife/src/main/java/butterknife/ButterKnife.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  119.     @NonNull @UiThread
  120.     public static Unbinder bind(@NonNull Dialog target) {
  121. >     View sourceView = target.getWindow().getDecorView();
  122.       return bind(target, sourceView);
  123.     }

butterknife/src/main/java/butterknife/ButterKnife.java:121: warning: GRADUAL_DEREFERENCE
  method call on pointer `target`.
  119.     @NonNull @UiThread
  120.     public static Unbinder bind(@NonNull Dialog target) {
  121. >     View sourceView = target.getWindow().getDecorView();
  122.       return bind(target, sourceView);
  123.     }

butterknife-runtime/src/main/java/butterknife/ViewCollections.java:122: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  120.     }
  121.   
  122. >   private ViewCollections() {
  123.     }
  124.   }

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  135.       assertAbout(javaSource()).that(source)
  136.           .processedWith(new ButterKnifeProcessor())
  137. >         .failsToCompile()
  138.           .withErrorContaining(
  139.               "Multiple listener methods with return value specified for ID 1. (test.Test.doStuff2)")

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  136.           .processedWith(new ButterKnifeProcessor())
  137.           .failsToCompile()
  138. >         .withErrorContaining(
  139.               "Multiple listener methods with return value specified for ID 1. (test.Test.doStuff2)")
  140.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  138.           .withErrorContaining(
  139.               "Multiple listener methods with return value specified for ID 1. (test.Test.doStuff2)")
  140. >         .in(source).onLine(5);
  141.     }
  142.   }

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  138.           .withErrorContaining(
  139.               "Multiple listener methods with return value specified for ID 1. (test.Test.doStuff2)")
  140. >         .in(source).onLine(5);
  141.     }
  142.   }

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  133.       );
  134.   
  135. >     assertAbout(javaSource()).that(source)
  136.           .processedWith(new ButterKnifeProcessor())
  137.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  134.   
  135.       assertAbout(javaSource()).that(source)
  136. >         .processedWith(new ButterKnifeProcessor())
  137.           .failsToCompile()
  138.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/OnTouchTest.java:135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  133.       );
  134.   
  135. >     assertAbout(javaSource()).that(source)
  136.           .processedWith(new ButterKnifeProcessor())
  137.           .failsToCompile()

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  124.       }
  125.       public static final class string {
  126. >         private string() {}
  127.   
  128.           public static int status_bar_notification_info_overflow = 0x7f150001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  124.       }
  125.       public static final class string {
  126. >         private string() {}
  127.   
  128.           public static int status_bar_notification_info_overflow = 0x7f150001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  124.       }
  125.       public static final class string {
  126. >         private string() {}
  127.   
  128.           public static int status_bar_notification_info_overflow = 0x7f150001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  124.       }
  125.       public static final class string {
  126. >         private string() {}
  127.   
  128.           public static int status_bar_notification_info_overflow = 0x7f150001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  124.       }
  125.       public static final class string {
  126. >         private string() {}
  127.   
  128.           public static int status_bar_notification_info_overflow = 0x7f150001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:126: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  124.       }
  125.       public static final class string {
  126. >         private string() {}
  127.   
  128.           public static int status_bar_notification_info_overflow = 0x7f150001;

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:180: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  178.       );
  179.   
  180. >     assertAbout(javaSource()).that(source)
  181.           .withCompilerOptions("-Xlint:-processing")
  182.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:182: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  180.       assertAbout(javaSource()).that(source)
  181.           .withCompilerOptions("-Xlint:-processing")
  182. >         .processedWith(new ButterKnifeProcessor())
  183.           .compilesWithoutWarnings()
  184.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  179.   
  180.       assertAbout(javaSource()).that(source)
  181. >         .withCompilerOptions("-Xlint:-processing")
  182.           .processedWith(new ButterKnifeProcessor())
  183.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  181.           .withCompilerOptions("-Xlint:-processing")
  182.           .processedWith(new ButterKnifeProcessor())
  183. >         .compilesWithoutWarnings()
  184.           .and()
  185.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:184: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  182.           .processedWith(new ButterKnifeProcessor())
  183.           .compilesWithoutWarnings()
  184. >         .and()
  185.           .generatesSources(bindingSource);
  186.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:185: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  183.           .compilesWithoutWarnings()
  184.           .and()
  185. >         .generatesSources(bindingSource);
  186.     }
  187.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  178.       );
  179.   
  180. >     assertAbout(javaSource()).that(source)
  181.           .withCompilerOptions("-Xlint:-processing")
  182.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  179.   
  180.       assertAbout(javaSource()).that(source)
  181. >         .withCompilerOptions("-Xlint:-processing")
  182.           .processedWith(new ButterKnifeProcessor())
  183.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:143: warning: GRADUAL_DEREFERENCE
  dereference of pointer `$T1_103`.
  141.       }
  142.   
  143. >     debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  144.   
  145.       typeUtils = env.getTypeUtils();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:134: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  132.       if (sdk != null) {
  133.         try {
  134. >         this.sdk = Integer.parseInt(sdk);
  135.         } catch (NumberFormatException e) {
  136.           env.getMessager()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:145: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  143.       debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  144.   
  145. >     typeUtils = env.getTypeUtils();
  146.       filer = env.getFiler();
  147.       try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:146: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  144.   
  145.       typeUtils = env.getTypeUtils();
  146. >     filer = env.getFiler();
  147.       try {
  148.         trees = Trees.instance(processingEnv);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  146.       filer = env.getFiler();
  147.       try {
  148. >       trees = Trees.instance(processingEnv);
  149.       } catch (IllegalArgumentException ignored) {
  150.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `"false"`.
  141.       }
  142.   
  143. >     debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  144.   
  145.       typeUtils = env.getTypeUtils();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  129.       super.init(env);
  130.   
  131. >     String sdk = env.getOptions().get(OPTION_SDK_INT);
  132.       if (sdk != null) {
  133.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  134.           this.sdk = Integer.parseInt(sdk);
  135.         } catch (NumberFormatException e) {
  136. >         env.getMessager()
  137.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  138.                   + sdk

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  141.       }
  142.   
  143. >     debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  144.   
  145.       typeUtils = env.getTypeUtils();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  143.       debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  144.   
  145. >     typeUtils = env.getTypeUtils();
  146.       filer = env.getFiler();
  147.       try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:146: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  144.   
  145.       typeUtils = env.getTypeUtils();
  146. >     filer = env.getFiler();
  147.       try {
  148.         trees = Trees.instance(processingEnv);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  135.         } catch (NumberFormatException e) {
  136.           env.getMessager()
  137. >             .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  138.                   + sdk
  139.                   + "'. Falling back to API 1 support.");

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  134.           this.sdk = Integer.parseInt(sdk);
  135.         } catch (NumberFormatException e) {
  136. >         env.getMessager()
  137.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  138.                   + sdk

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  134.           this.sdk = Integer.parseInt(sdk);
  135.         } catch (NumberFormatException e) {
  136. >         env.getMessager()
  137.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  138.                   + sdk

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  134.           this.sdk = Integer.parseInt(sdk);
  135.         } catch (NumberFormatException e) {
  136. >         env.getMessager()
  137.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  138.                   + sdk

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  134.           this.sdk = Integer.parseInt(sdk);
  135.         } catch (NumberFormatException e) {
  136. >         env.getMessager()
  137.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  138.                   + sdk

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:143: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  141.       }
  142.   
  143. >     debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  144.   
  145.       typeUtils = env.getTypeUtils();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  129.       super.init(env);
  130.   
  131. >     String sdk = env.getOptions().get(OPTION_SDK_INT);
  132.       if (sdk != null) {
  133.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:129: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  127.   
  128.     @Override public synchronized void init(ProcessingEnvironment env) {
  129. >     super.init(env);
  130.   
  131.       String sdk = env.getOptions().get(OPTION_SDK_INT);

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:183: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  181.       );
  182.   
  183. >     assertAbout(javaSource()).that(source)
  184.           .withCompilerOptions("-Xlint:-processing")
  185.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:185: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  183.       assertAbout(javaSource()).that(source)
  184.           .withCompilerOptions("-Xlint:-processing")
  185. >         .processedWith(new ButterKnifeProcessor())
  186.           .compilesWithoutWarnings()
  187.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:184: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  182.   
  183.       assertAbout(javaSource()).that(source)
  184. >         .withCompilerOptions("-Xlint:-processing")
  185.           .processedWith(new ButterKnifeProcessor())
  186.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  184.           .withCompilerOptions("-Xlint:-processing")
  185.           .processedWith(new ButterKnifeProcessor())
  186. >         .compilesWithoutWarnings()
  187.           .and()
  188.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  185.           .processedWith(new ButterKnifeProcessor())
  186.           .compilesWithoutWarnings()
  187. >         .and()
  188.           .generatesSources(bindingSource);
  189.     }

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:188: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  186.           .compilesWithoutWarnings()
  187.           .and()
  188. >         .generatesSources(bindingSource);
  189.     }
  190.   

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  181.       );
  182.   
  183. >     assertAbout(javaSource()).that(source)
  184.           .withCompilerOptions("-Xlint:-processing")
  185.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:184: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  182.   
  183.       assertAbout(javaSource()).that(source)
  184. >         .withCompilerOptions("-Xlint:-processing")
  185.           .processedWith(new ButterKnifeProcessor())
  186.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:310: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$12`.
  308.       );
  309.   
  310. >     assertAbout(javaSources())
  311.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  312.           .withCompilerOptions("-Xlint:-processing")

butterknife-runtime/src/test/java/butterknife/RClassTest.java:311: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$33`.
  309.   
  310.       assertAbout(javaSources())
  311. >         .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  312.           .withCompilerOptions("-Xlint:-processing")
  313.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:318: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$64`.
  316.           .generatesSources(bindingSourceBar);
  317.   
  318. >     assertAbout(javaSources())
  319.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  320.           .withCompilerOptions("-Xlint:-processing")

butterknife-runtime/src/test/java/butterknife/RClassTest.java:319: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$85`.
  317.   
  318.       assertAbout(javaSources())
  319. >         .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  320.           .withCompilerOptions("-Xlint:-processing")
  321.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:323: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$102`.
  321.           .processedWith(new ButterKnifeProcessor())
  322.           .compilesWithoutWarnings()
  323. >         .and()
  324.           .generatesSources(bindingSourceFoo);
  325.     }

butterknife-runtime/src/test/java/butterknife/RClassTest.java:324: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$105`.
  322.           .compilesWithoutWarnings()
  323.           .and()
  324. >         .generatesSources(bindingSourceFoo);
  325.     }
  326.   

butterknife-runtime/src/test/java/butterknife/RClassTest.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  309.   
  310.       assertAbout(javaSources())
  311. >         .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  312.           .withCompilerOptions("-Xlint:-processing")
  313.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:312: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  310.       assertAbout(javaSources())
  311.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  312. >         .withCompilerOptions("-Xlint:-processing")
  313.           .processedWith(new ButterKnifeProcessor())
  314.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:313: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  311.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  312.           .withCompilerOptions("-Xlint:-processing")
  313. >         .processedWith(new ButterKnifeProcessor())
  314.           .compilesWithoutWarnings()
  315.           .and()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:312: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  310.       assertAbout(javaSources())
  311.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  312. >         .withCompilerOptions("-Xlint:-processing")
  313.           .processedWith(new ButterKnifeProcessor())
  314.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:314: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$47`.
  312.           .withCompilerOptions("-Xlint:-processing")
  313.           .processedWith(new ButterKnifeProcessor())
  314. >         .compilesWithoutWarnings()
  315.           .and()
  316.           .generatesSources(bindingSourceBar);

butterknife-runtime/src/test/java/butterknife/RClassTest.java:315: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  313.           .processedWith(new ButterKnifeProcessor())
  314.           .compilesWithoutWarnings()
  315. >         .and()
  316.           .generatesSources(bindingSourceBar);
  317.   

butterknife-runtime/src/test/java/butterknife/RClassTest.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  314.           .compilesWithoutWarnings()
  315.           .and()
  316. >         .generatesSources(bindingSourceBar);
  317.   
  318.       assertAbout(javaSources())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  317.   
  318.       assertAbout(javaSources())
  319. >         .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  320.           .withCompilerOptions("-Xlint:-processing")
  321.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:320: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$84`.
  318.       assertAbout(javaSources())
  319.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  320. >         .withCompilerOptions("-Xlint:-processing")
  321.           .processedWith(new ButterKnifeProcessor())
  322.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:321: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$91`.
  319.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  320.           .withCompilerOptions("-Xlint:-processing")
  321. >         .processedWith(new ButterKnifeProcessor())
  322.           .compilesWithoutWarnings()
  323.           .and()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:320: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$92`.
  318.       assertAbout(javaSources())
  319.           .that(asList(customView, fooSource, barSource, nonFinalRBar, nonFinalRFoo, r2Bar, r2Foo))
  320. >         .withCompilerOptions("-Xlint:-processing")
  321.           .processedWith(new ButterKnifeProcessor())
  322.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:322: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$99`.
  320.           .withCompilerOptions("-Xlint:-processing")
  321.           .processedWith(new ButterKnifeProcessor())
  322. >         .compilesWithoutWarnings()
  323.           .and()
  324.           .generatesSources(bindingSourceFoo);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:132: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`.
  130.   
  131.     private MethodSpec createBindingViewDelegateConstructor() {
  132. >     return MethodSpec.constructorBuilder()
  133.           .addJavadoc("@deprecated Use {@link #$T($T, $T)} for direct creation.\n    "
  134.                   + "Only present for runtime invocation through {@code ButterKnife.bind()}.\n",

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:132: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$1`,dereference of pointer `this`.
  130.   
  131.     private MethodSpec createBindingViewDelegateConstructor() {
  132. >     return MethodSpec.constructorBuilder()
  133.           .addJavadoc("@deprecated Use {@link #$T($T, $T)} for direct creation.\n    "
  134.                   + "Only present for runtime invocation through {@code ButterKnife.bind()}.\n",

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:137: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$21`.
  135.               bindingClassName, targetTypeName, CONTEXT)
  136.           .addAnnotation(Deprecated.class)
  137. >         .addAnnotation(UI_THREAD)
  138.           .addModifiers(PUBLIC)
  139.           .addParameter(targetTypeName, "target")

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  131.     private MethodSpec createBindingViewDelegateConstructor() {
  132.       return MethodSpec.constructorBuilder()
  133. >         .addJavadoc("@deprecated Use {@link #$T($T, $T)} for direct creation.\n    "
  134.                   + "Only present for runtime invocation through {@code ButterKnife.bind()}.\n",
  135.               bindingClassName, targetTypeName, CONTEXT)

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  134.                   + "Only present for runtime invocation through {@code ButterKnife.bind()}.\n",
  135.               bindingClassName, targetTypeName, CONTEXT)
  136. >         .addAnnotation(Deprecated.class)
  137.           .addAnnotation(UI_THREAD)
  138.           .addModifiers(PUBLIC)

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  135.               bindingClassName, targetTypeName, CONTEXT)
  136.           .addAnnotation(Deprecated.class)
  137. >         .addAnnotation(UI_THREAD)
  138.           .addModifiers(PUBLIC)
  139.           .addParameter(targetTypeName, "target")

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:138: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  136.           .addAnnotation(Deprecated.class)
  137.           .addAnnotation(UI_THREAD)
  138. >         .addModifiers(PUBLIC)
  139.           .addParameter(targetTypeName, "target")
  140.           .addParameter(VIEW, "source")

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`,dereference of pointer `this`.
  137.           .addAnnotation(UI_THREAD)
  138.           .addModifiers(PUBLIC)
  139. >         .addParameter(targetTypeName, "target")
  140.           .addParameter(VIEW, "source")
  141.           .addStatement(("this(target, source.getContext())"))

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  138.           .addModifiers(PUBLIC)
  139.           .addParameter(targetTypeName, "target")
  140. >         .addParameter(VIEW, "source")
  141.           .addStatement(("this(target, source.getContext())"))
  142.           .build();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:141: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  139.           .addParameter(targetTypeName, "target")
  140.           .addParameter(VIEW, "source")
  141. >         .addStatement(("this(target, source.getContext())"))
  142.           .build();
  143.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  140.           .addParameter(VIEW, "source")
  141.           .addStatement(("this(target, source.getContext())"))
  142. >         .build();
  143.     }
  144.   

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  129.       }
  130.       public static final class style {
  131. >         private style() {}
  132.   
  133.           public static int TextAppearance_Compat_Notification = 0x7f160001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  129.       }
  130.       public static final class style {
  131. >         private style() {}
  132.   
  133.           public static int TextAppearance_Compat_Notification = 0x7f160001;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  129.       }
  130.       public static final class style {
  131. >         private style() {}
  132.   
  133.           public static int TextAppearance_Compat_Notification = 0x7f160001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  129.       }
  130.       public static final class style {
  131. >         private style() {}
  132.   
  133.           public static int TextAppearance_Compat_Notification = 0x7f160001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  129.       }
  130.       public static final class style {
  131. >         private style() {}
  132.   
  133.           public static int TextAppearance_Compat_Notification = 0x7f160001;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:131: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  129.       }
  130.       public static final class style {
  131. >         private style() {}
  132.   
  133.           public static int TextAppearance_Compat_Notification = 0x7f160001;

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  134.         return "<unavailable while editing>";
  135.       }
  136. >     return view.getContext().getResources().getResourceEntryName(id);
  137.     }
  138.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  134.         return "<unavailable while editing>";
  135.       }
  136. >     return view.getContext().getResources().getResourceEntryName(id);
  137.     }
  138.   

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:133: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  131.   
  132.     private static String getResourceEntryName(View view, @IdRes int id) {
  133. >     if (view.isInEditMode()) {
  134.         return "<unavailable while editing>";
  135.       }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:136: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  134.         return "<unavailable while editing>";
  135.       }
  136. >     return view.getContext().getResources().getResourceEntryName(id);
  137.     }
  138.   

butterknife/src/main/java/butterknife/ButterKnife.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  132.     @NonNull @UiThread
  133.     public static Unbinder bind(@NonNull Object target, @NonNull Activity source) {
  134. >     View sourceView = source.getWindow().getDecorView();
  135.       return bind(target, sourceView);
  136.     }

butterknife/src/main/java/butterknife/ButterKnife.java:134: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  132.     @NonNull @UiThread
  133.     public static Unbinder bind(@NonNull Object target, @NonNull Activity source) {
  134. >     View sourceView = source.getWindow().getDecorView();
  135.       return bind(target, sourceView);
  136.     }

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:147: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  145.       assertAbout(javaSource()).that(source)
  146.           .processedWith(new ButterKnifeProcessor())
  147. >         .failsToCompile()
  148.           .withErrorContaining(
  149.               "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (test.Test.one)")

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:148: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  146.           .processedWith(new ButterKnifeProcessor())
  147.           .failsToCompile()
  148. >         .withErrorContaining(
  149.               "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (test.Test.one)")
  150.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:150: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  148.           .withErrorContaining(
  149.               "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (test.Test.one)")
  150. >         .in(source).onLine(5);
  151.     }
  152.   }

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:150: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  148.           .withErrorContaining(
  149.               "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (test.Test.one)")
  150. >         .in(source).onLine(5);
  151.     }
  152.   }

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  143.       );
  144.   
  145. >     assertAbout(javaSource()).that(source)
  146.           .processedWith(new ButterKnifeProcessor())
  147.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:146: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  144.   
  145.       assertAbout(javaSource()).that(source)
  146. >         .processedWith(new ButterKnifeProcessor())
  147.           .failsToCompile()
  148.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindFontTest.java:145: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  143.       );
  144.   
  145. >     assertAbout(javaSource()).that(source)
  146.           .processedWith(new ButterKnifeProcessor())
  147.           .failsToCompile()

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:140: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  138.   
  139.     private Utils() {
  140. >     throw new AssertionError("No instances.");
  141.     }
  142.   }

butterknife-runtime/src/main/java/butterknife/internal/Utils.java:139: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  137.     }
  138.   
  139. >   private Utils() {
  140.       throw new AssertionError("No instances.");
  141.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:175: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  173.       );
  174.   
  175. >     assertAbout(javaSource()).that(source)
  176.           .withCompilerOptions("-Xlint:-processing")
  177.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  175.       assertAbout(javaSource()).that(source)
  176.           .withCompilerOptions("-Xlint:-processing")
  177. >         .processedWith(new ButterKnifeProcessor())
  178.           .compilesWithoutWarnings()
  179.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:176: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  174.   
  175.       assertAbout(javaSource()).that(source)
  176. >         .withCompilerOptions("-Xlint:-processing")
  177.           .processedWith(new ButterKnifeProcessor())
  178.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:178: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  176.           .withCompilerOptions("-Xlint:-processing")
  177.           .processedWith(new ButterKnifeProcessor())
  178. >         .compilesWithoutWarnings()
  179.           .and()
  180.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:179: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  177.           .processedWith(new ButterKnifeProcessor())
  178.           .compilesWithoutWarnings()
  179. >         .and()
  180.           .generatesSources(bindingSource);
  181.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  178.           .compilesWithoutWarnings()
  179.           .and()
  180. >         .generatesSources(bindingSource);
  181.     }
  182.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  173.       );
  174.   
  175. >     assertAbout(javaSource()).that(source)
  176.           .withCompilerOptions("-Xlint:-processing")
  177.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:176: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  174.   
  175.       assertAbout(javaSource()).that(source)
  176. >         .withCompilerOptions("-Xlint:-processing")
  177.           .processedWith(new ButterKnifeProcessor())
  178.           .compilesWithoutWarnings()

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  140.       }
  141.       public static final class styleable {
  142. >         private styleable() {}
  143.   
  144.           public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  140.       }
  141.       public static final class styleable {
  142. >         private styleable() {}
  143.   
  144.           public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  140.       }
  141.       public static final class styleable {
  142. >         private styleable() {}
  143.   
  144.           public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  140.       }
  141.       public static final class styleable {
  142. >         private styleable() {}
  143.   
  144.           public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  140.       }
  141.       public static final class styleable {
  142. >         private styleable() {}
  143.   
  144.           public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:142: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  140.       }
  141.       public static final class styleable {
  142. >         private styleable() {}
  143.   
  144.           public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  142.           private styleable() {}
  143.   
  144. >         public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };
  145.           public static int ColorStateListItem_alpha = 0;
  146.           public static int ColorStateListItem_android_alpha = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  153.           public static int FontFamily_fontProviderPackage = 4;
  154.           public static int FontFamily_fontProviderQuery = 5;
  155. >         public static int[] FontFamilyFont = { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x7f040002, 0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c };
  156.           public static int FontFamilyFont_android_font = 0;
  157.           public static int FontFamilyFont_android_fontStyle = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:166: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  164.           public static int FontFamilyFont_fontWeight = 8;
  165.           public static int FontFamilyFont_ttcIndex = 9;
  166. >         public static int[] GradientColor = { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 };
  167.           public static int GradientColor_android_centerColor = 0;
  168.           public static int GradientColor_android_centerX = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:179: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  177.           public static int GradientColor_android_tileMode = 10;
  178.           public static int GradientColor_android_type = 11;
  179. >         public static int[] GradientColorItem = { 0x10101a5, 0x1010514 };
  180.           public static int GradientColorItem_android_color = 0;
  181.           public static int GradientColorItem_android_offset = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/customview/R.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  146.           public static int ColorStateListItem_android_alpha = 1;
  147.           public static int ColorStateListItem_android_color = 2;
  148. >         public static int[] FontFamily = { 0x7f040003, 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008 };
  149.           public static int FontFamily_fontProviderAuthority = 0;
  150.           public static int FontFamily_fontProviderCerts = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  142.           private styleable() {}
  143.   
  144. >         public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };
  145.           public static int ColorStateListItem_alpha = 0;
  146.           public static int ColorStateListItem_android_alpha = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  153.           public static int FontFamily_fontProviderPackage = 4;
  154.           public static int FontFamily_fontProviderQuery = 5;
  155. >         public static int[] FontFamilyFont = { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x7f040002, 0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c };
  156.           public static int FontFamilyFont_android_font = 0;
  157.           public static int FontFamilyFont_android_fontStyle = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:166: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  164.           public static int FontFamilyFont_fontWeight = 8;
  165.           public static int FontFamilyFont_ttcIndex = 9;
  166. >         public static int[] GradientColor = { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 };
  167.           public static int GradientColor_android_centerColor = 0;
  168.           public static int GradientColor_android_centerX = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:179: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  177.           public static int GradientColor_android_tileMode = 10;
  178.           public static int GradientColor_android_type = 11;
  179. >         public static int[] GradientColorItem = { 0x10101a5, 0x1010514 };
  180.           public static int GradientColorItem_android_color = 0;
  181.           public static int GradientColorItem_android_offset = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/viewpager/R.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  146.           public static int ColorStateListItem_android_alpha = 1;
  147.           public static int ColorStateListItem_android_color = 2;
  148. >         public static int[] FontFamily = { 0x7f040003, 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008 };
  149.           public static int FontFamily_fontProviderAuthority = 0;
  150.           public static int FontFamily_fontProviderCerts = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  142.           private styleable() {}
  143.   
  144. >         public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };
  145.           public static int ColorStateListItem_alpha = 0;
  146.           public static int ColorStateListItem_android_alpha = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  153.           public static int FontFamily_fontProviderPackage = 4;
  154.           public static int FontFamily_fontProviderQuery = 5;
  155. >         public static int[] FontFamilyFont = { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x7f040002, 0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c };
  156.           public static int FontFamilyFont_android_font = 0;
  157.           public static int FontFamilyFont_android_fontStyle = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:166: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  164.           public static int FontFamilyFont_fontWeight = 8;
  165.           public static int FontFamilyFont_ttcIndex = 9;
  166. >         public static int[] GradientColor = { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 };
  167.           public static int GradientColor_android_centerColor = 0;
  168.           public static int GradientColor_android_centerX = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:179: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  177.           public static int GradientColor_android_tileMode = 10;
  178.           public static int GradientColor_android_type = 11;
  179. >         public static int[] GradientColorItem = { 0x10101a5, 0x1010514 };
  180.           public static int GradientColorItem_android_color = 0;
  181.           public static int GradientColorItem_android_offset = 1;

butterknife-reflect/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/reflect/R.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  146.           public static int ColorStateListItem_android_alpha = 1;
  147.           public static int ColorStateListItem_android_color = 2;
  148. >         public static int[] FontFamily = { 0x7f040003, 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008 };
  149.           public static int FontFamily_fontProviderAuthority = 0;
  150.           public static int FontFamily_fontProviderCerts = 1;

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:202: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  200.       );
  201.   
  202. >     assertAbout(javaSource()).that(source)
  203.               .withCompilerOptions("-Xlint:-processing")
  204.               .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  202.       assertAbout(javaSource()).that(source)
  203.               .withCompilerOptions("-Xlint:-processing")
  204. >             .processedWith(new ButterKnifeProcessor())
  205.               .compilesWithoutWarnings()
  206.               .and()

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  201.   
  202.       assertAbout(javaSource()).that(source)
  203. >             .withCompilerOptions("-Xlint:-processing")
  204.               .processedWith(new ButterKnifeProcessor())
  205.               .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  203.               .withCompilerOptions("-Xlint:-processing")
  204.               .processedWith(new ButterKnifeProcessor())
  205. >             .compilesWithoutWarnings()
  206.               .and()
  207.               .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  204.               .processedWith(new ButterKnifeProcessor())
  205.               .compilesWithoutWarnings()
  206. >             .and()
  207.               .generatesSources(bindingSource);
  208.     }

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:207: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  205.               .compilesWithoutWarnings()
  206.               .and()
  207. >             .generatesSources(bindingSource);
  208.     }
  209.   

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:202: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  200.       );
  201.   
  202. >     assertAbout(javaSource()).that(source)
  203.               .withCompilerOptions("-Xlint:-processing")
  204.               .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  201.   
  202.       assertAbout(javaSource()).that(source)
  203. >             .withCompilerOptions("-Xlint:-processing")
  204.               .processedWith(new ButterKnifeProcessor())
  205.               .compilesWithoutWarnings()

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  142.           private styleable() {}
  143.   
  144. >         public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };
  145.           public static int ColorStateListItem_alpha = 0;
  146.           public static int ColorStateListItem_android_alpha = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  153.           public static int FontFamily_fontProviderPackage = 4;
  154.           public static int FontFamily_fontProviderQuery = 5;
  155. >         public static int[] FontFamilyFont = { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x7f040002, 0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c };
  156.           public static int FontFamilyFont_android_font = 0;
  157.           public static int FontFamilyFont_android_fontStyle = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:166: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  164.           public static int FontFamilyFont_fontWeight = 8;
  165.           public static int FontFamilyFont_ttcIndex = 9;
  166. >         public static int[] GradientColor = { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 };
  167.           public static int GradientColor_android_centerColor = 0;
  168.           public static int GradientColor_android_centerX = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:179: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  177.           public static int GradientColor_android_tileMode = 10;
  178.           public static int GradientColor_android_type = 11;
  179. >         public static int[] GradientColorItem = { 0x10101a5, 0x1010514 };
  180.           public static int GradientColorItem_android_color = 0;
  181.           public static int GradientColorItem_android_offset = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/androidx/core/R.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  146.           public static int ColorStateListItem_android_alpha = 1;
  147.           public static int ColorStateListItem_android_color = 2;
  148. >         public static int[] FontFamily = { 0x7f040003, 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008 };
  149.           public static int FontFamily_fontProviderAuthority = 0;
  150.           public static int FontFamily_fontProviderCerts = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  142.           private styleable() {}
  143.   
  144. >         public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };
  145.           public static int ColorStateListItem_alpha = 0;
  146.           public static int ColorStateListItem_android_alpha = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  153.           public static int FontFamily_fontProviderPackage = 4;
  154.           public static int FontFamily_fontProviderQuery = 5;
  155. >         public static int[] FontFamilyFont = { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x7f040002, 0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c };
  156.           public static int FontFamilyFont_android_font = 0;
  157.           public static int FontFamilyFont_android_fontStyle = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:166: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  164.           public static int FontFamilyFont_fontWeight = 8;
  165.           public static int FontFamilyFont_ttcIndex = 9;
  166. >         public static int[] GradientColor = { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 };
  167.           public static int GradientColor_android_centerColor = 0;
  168.           public static int GradientColor_android_centerX = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:179: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  177.           public static int GradientColor_android_tileMode = 10;
  178.           public static int GradientColor_android_type = 11;
  179. >         public static int[] GradientColorItem = { 0x10101a5, 0x1010514 };
  180.           public static int GradientColorItem_android_color = 0;
  181.           public static int GradientColorItem_android_offset = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/R.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  146.           public static int ColorStateListItem_android_alpha = 1;
  147.           public static int ColorStateListItem_android_color = 2;
  148. >         public static int[] FontFamily = { 0x7f040003, 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008 };
  149.           public static int FontFamily_fontProviderAuthority = 0;
  150.           public static int FontFamily_fontProviderCerts = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:144: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  142.           private styleable() {}
  143.   
  144. >         public static int[] ColorStateListItem = { 0x7f040001, 0x101031f, 0x10101a5 };
  145.           public static int ColorStateListItem_alpha = 0;
  146.           public static int ColorStateListItem_android_alpha = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:155: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  153.           public static int FontFamily_fontProviderPackage = 4;
  154.           public static int FontFamily_fontProviderQuery = 5;
  155. >         public static int[] FontFamilyFont = { 0x1010532, 0x101053f, 0x1010570, 0x1010533, 0x101056f, 0x7f040002, 0x7f040009, 0x7f04000a, 0x7f04000b, 0x7f04000c };
  156.           public static int FontFamilyFont_android_font = 0;
  157.           public static int FontFamilyFont_android_fontStyle = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:166: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  164.           public static int FontFamilyFont_fontWeight = 8;
  165.           public static int FontFamilyFont_ttcIndex = 9;
  166. >         public static int[] GradientColor = { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 };
  167.           public static int GradientColor_android_centerColor = 0;
  168.           public static int GradientColor_android_centerX = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:179: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  177.           public static int GradientColor_android_tileMode = 10;
  178.           public static int GradientColor_android_type = 11;
  179. >         public static int[] GradientColorItem = { 0x10101a5, 0x1010514 };
  180.           public static int GradientColorItem_android_color = 0;
  181.           public static int GradientColorItem_android_offset = 1;

butterknife/build/generated/not_namespaced_r_class_sources/release/generateReleaseRFile/out/butterknife/runtime/R.java:148: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  146.           public static int ColorStateListItem_android_alpha = 1;
  147.           public static int ColorStateListItem_android_color = 2;
  148. >         public static int[] FontFamily = { 0x7f040003, 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008 };
  149.           public static int FontFamily_fontProviderAuthority = 0;
  150.           public static int FontFamily_fontProviderCerts = 1;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:147: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  145.     private MethodSpec createBindingConstructorForView() {
  146.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  147. >         .addAnnotation(UI_THREAD)
  148.           .addModifiers(PUBLIC)
  149.           .addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:151: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  149.           .addParameter(targetTypeName, "target");
  150.       if (constructorNeedsView()) {
  151. >       builder.addStatement("this(target, target)");
  152.       } else {
  153.         builder.addStatement("this(target, target.getContext())");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:153: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  151.         builder.addStatement("this(target, target)");
  152.       } else {
  153. >       builder.addStatement("this(target, target.getContext())");
  154.       }
  155.       return builder.build();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:155: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  153.         builder.addStatement("this(target, target.getContext())");
  154.       }
  155. >     return builder.build();
  156.     }
  157.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:147: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  145.     private MethodSpec createBindingConstructorForView() {
  146.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  147. >         .addAnnotation(UI_THREAD)
  148.           .addModifiers(PUBLIC)
  149.           .addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:149: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`,dereference of pointer `this`.
  147.           .addAnnotation(UI_THREAD)
  148.           .addModifiers(PUBLIC)
  149. >         .addParameter(targetTypeName, "target");
  150.       if (constructorNeedsView()) {
  151.         builder.addStatement("this(target, target)");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:148: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  146.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  147.           .addAnnotation(UI_THREAD)
  148. >         .addModifiers(PUBLIC)
  149.           .addParameter(targetTypeName, "target");
  150.       if (constructorNeedsView()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:150: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  148.           .addModifiers(PUBLIC)
  149.           .addParameter(targetTypeName, "target");
  150. >     if (constructorNeedsView()) {
  151.         builder.addStatement("this(target, target)");
  152.       } else {

butterknife/src/main/java/butterknife/ButterKnife.java:147: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  145.     @NonNull @UiThread
  146.     public static Unbinder bind(@NonNull Object target, @NonNull Dialog source) {
  147. >     View sourceView = source.getWindow().getDecorView();
  148.       return bind(target, sourceView);
  149.     }

butterknife/src/main/java/butterknife/ButterKnife.java:147: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  145.     @NonNull @UiThread
  146.     public static Unbinder bind(@NonNull Object target, @NonNull Dialog source) {
  147. >     View sourceView = source.getWindow().getDecorView();
  148.       return bind(target, sourceView);
  149.     }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:160: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotation`.
  158.       Set<String> types = new LinkedHashSet<>();
  159.       for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  160. >       types.add(annotation.getCanonicalName());
  161.       }
  162.       return types;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:158: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  156.   
  157.     @Override public Set<String> getSupportedAnnotationTypes() {
  158. >     Set<String> types = new LinkedHashSet<>();
  159.       for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  160.         types.add(annotation.getCanonicalName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  157.     @Override public Set<String> getSupportedAnnotationTypes() {
  158.       Set<String> types = new LinkedHashSet<>();
  159. >     for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  160.         types.add(annotation.getCanonicalName());
  161.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  157.     @Override public Set<String> getSupportedAnnotationTypes() {
  158.       Set<String> types = new LinkedHashSet<>();
  159. >     for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  160.         types.add(annotation.getCanonicalName());
  161.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  157.     @Override public Set<String> getSupportedAnnotationTypes() {
  158.       Set<String> types = new LinkedHashSet<>();
  159. >     for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  160.         types.add(annotation.getCanonicalName());
  161.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:160: warning: GRADUAL_DEREFERENCE
  method call on pointer `types`.
  158.       Set<String> types = new LinkedHashSet<>();
  159.       for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  160. >       types.add(annotation.getCanonicalName());
  161.       }
  162.       return types;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:160: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  158.     private MethodSpec createBindingConstructorForActivity() {
  159.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  160. >         .addAnnotation(UI_THREAD)
  161.           .addModifiers(PUBLIC)
  162.           .addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:164: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  162.           .addParameter(targetTypeName, "target");
  163.       if (constructorNeedsView()) {
  164. >       builder.addStatement("this(target, target.getWindow().getDecorView())");
  165.       } else {
  166.         builder.addStatement("this(target, target)");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:166: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  164.         builder.addStatement("this(target, target.getWindow().getDecorView())");
  165.       } else {
  166. >       builder.addStatement("this(target, target)");
  167.       }
  168.       return builder.build();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:168: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  166.         builder.addStatement("this(target, target)");
  167.       }
  168. >     return builder.build();
  169.     }
  170.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:160: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  158.     private MethodSpec createBindingConstructorForActivity() {
  159.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  160. >         .addAnnotation(UI_THREAD)
  161.           .addModifiers(PUBLIC)
  162.           .addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:162: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`,dereference of pointer `this`.
  160.           .addAnnotation(UI_THREAD)
  161.           .addModifiers(PUBLIC)
  162. >         .addParameter(targetTypeName, "target");
  163.       if (constructorNeedsView()) {
  164.         builder.addStatement("this(target, target.getWindow().getDecorView())");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  159.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  160.           .addAnnotation(UI_THREAD)
  161. >         .addModifiers(PUBLIC)
  162.           .addParameter(targetTypeName, "target");
  163.       if (constructorNeedsView()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:163: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  161.           .addModifiers(PUBLIC)
  162.           .addParameter(targetTypeName, "target");
  163. >     if (constructorNeedsView()) {
  164.         builder.addStatement("this(target, target.getWindow().getDecorView())");
  165.       } else {

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:159: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  157.           public static final int ttcIndex=0x7f01000b;
  158.       }
  159. >     public static final class color {
  160.           public static final int notification_action_color_filter=0x7f060000;
  161.           public static final int notification_icon_bg_color=0x7f060001;

butterknife/src/main/java/butterknife/ButterKnife.java:170: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  168.       //noinspection TryWithIdenticalCatches Resolves to API 19+ only type.
  169.       try {
  170. >       return constructor.newInstance(target, source);
  171.       } catch (IllegalAccessException e) {
  172.         throw new RuntimeException("Unable to invoke " + constructor, e);

butterknife/src/main/java/butterknife/ButterKnife.java:170: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  168.       //noinspection TryWithIdenticalCatches Resolves to API 19+ only type.
  169.       try {
  170. >       return constructor.newInstance(target, source);
  171.       } catch (IllegalAccessException e) {
  172.         throw new RuntimeException("Unable to invoke " + constructor, e);

butterknife/src/main/java/butterknife/ButterKnife.java:176: warning: GRADUAL_DEREFERENCE
  method call on pointer `e`.
  174.         throw new RuntimeException("Unable to invoke " + constructor, e);
  175.       } catch (InvocationTargetException e) {
  176. >       Throwable cause = e.getCause();
  177.         if (cause instanceof RuntimeException) {
  178.           throw (RuntimeException) cause;

butterknife/src/main/java/butterknife/ButterKnife.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  159.     public static Unbinder bind(@NonNull Object target, @NonNull View source) {
  160.       Class<?> targetClass = target.getClass();
  161. >     if (debug) Log.d(TAG, "Looking up binding for " + targetClass.getName());
  162.       Constructor<? extends Unbinder> constructor = findBindingConstructorForClass(targetClass);
  163.   

butterknife/src/main/java/butterknife/ButterKnife.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  170.         return constructor.newInstance(target, source);
  171.       } catch (IllegalAccessException e) {
  172. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174.         throw new RuntimeException("Unable to invoke " + constructor, e);

butterknife/src/main/java/butterknife/ButterKnife.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  170.         return constructor.newInstance(target, source);
  171.       } catch (IllegalAccessException e) {
  172. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174.         throw new RuntimeException("Unable to invoke " + constructor, e);

butterknife/src/main/java/butterknife/ButterKnife.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  170.         return constructor.newInstance(target, source);
  171.       } catch (IllegalAccessException e) {
  172. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174.         throw new RuntimeException("Unable to invoke " + constructor, e);

butterknife/src/main/java/butterknife/ButterKnife.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$49`.
  170.         return constructor.newInstance(target, source);
  171.       } catch (IllegalAccessException e) {
  172. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174.         throw new RuntimeException("Unable to invoke " + constructor, e);

butterknife/src/main/java/butterknife/ButterKnife.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  159.     public static Unbinder bind(@NonNull Object target, @NonNull View source) {
  160.       Class<?> targetClass = target.getClass();
  161. >     if (debug) Log.d(TAG, "Looking up binding for " + targetClass.getName());
  162.       Constructor<? extends Unbinder> constructor = findBindingConstructorForClass(targetClass);
  163.   

butterknife/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  172.         throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  175.       } catch (InvocationTargetException e) {
  176.         Throwable cause = e.getCause();

butterknife/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  172.         throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  175.       } catch (InvocationTargetException e) {
  176.         Throwable cause = e.getCause();

butterknife/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  172.         throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  175.       } catch (InvocationTargetException e) {
  176.         Throwable cause = e.getCause();

butterknife/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$67`.
  172.         throw new RuntimeException("Unable to invoke " + constructor, e);
  173.       } catch (InstantiationException e) {
  174. >       throw new RuntimeException("Unable to invoke " + constructor, e);
  175.       } catch (InvocationTargetException e) {
  176.         Throwable cause = e.getCause();

butterknife/src/main/java/butterknife/ButterKnife.java:183: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$84`.
  181.           throw (Error) cause;
  182.         }
  183. >       throw new RuntimeException("Unable to create binding instance.", cause);
  184.       }
  185.     }

butterknife/src/main/java/butterknife/ButterKnife.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  159.     public static Unbinder bind(@NonNull Object target, @NonNull View source) {
  160.       Class<?> targetClass = target.getClass();
  161. >     if (debug) Log.d(TAG, "Looking up binding for " + targetClass.getName());
  162.       Constructor<? extends Unbinder> constructor = findBindingConstructorForClass(targetClass);
  163.   

butterknife/src/main/java/butterknife/ButterKnife.java:161: warning: GRADUAL_DEREFERENCE
  method call on pointer `targetClass`.
  159.     public static Unbinder bind(@NonNull Object target, @NonNull View source) {
  160.       Class<?> targetClass = target.getClass();
  161. >     if (debug) Log.d(TAG, "Looking up binding for " + targetClass.getName());
  162.       Constructor<? extends Unbinder> constructor = findBindingConstructorForClass(targetClass);
  163.   

butterknife/src/main/java/butterknife/ButterKnife.java:160: warning: GRADUAL_DEREFERENCE
  method call on pointer `target`.
  158.     @NonNull @UiThread
  159.     public static Unbinder bind(@NonNull Object target, @NonNull View source) {
  160. >     Class<?> targetClass = target.getClass();
  161.       if (debug) Log.d(TAG, "Looking up binding for " + targetClass.getName());
  162.       Constructor<? extends Unbinder> constructor = findBindingConstructorForClass(targetClass);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:204: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  202.       );
  203.   
  204. >     assertAbout(javaSource()).that(source)
  205.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  206.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  204.       assertAbout(javaSource()).that(source)
  205.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  206. >         .processedWith(new ButterKnifeProcessor())
  207.           .compilesWithoutWarnings()
  208.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  203.   
  204.       assertAbout(javaSource()).that(source)
  205. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  206.           .processedWith(new ButterKnifeProcessor())
  207.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:207: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  205.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  206.           .processedWith(new ButterKnifeProcessor())
  207. >         .compilesWithoutWarnings()
  208.           .and()
  209.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:208: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  206.           .processedWith(new ButterKnifeProcessor())
  207.           .compilesWithoutWarnings()
  208. >         .and()
  209.           .generatesSources(bindingSource);
  210.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  207.           .compilesWithoutWarnings()
  208.           .and()
  209. >         .generatesSources(bindingSource);
  210.     }
  211.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  202.       );
  203.   
  204. >     assertAbout(javaSource()).that(source)
  205.           .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  206.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  203.   
  204.       assertAbout(javaSource()).that(source)
  205. >         .withCompilerOptions("-Xlint:-processing", "-Abutterknife.debuggable=false")
  206.           .processedWith(new ButterKnifeProcessor())
  207.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:168: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  166.       Set<Class<? extends Annotation>> annotations = new LinkedHashSet<>();
  167.   
  168. >     annotations.add(BindAnim.class);
  169.       annotations.add(BindArray.class);
  170.       annotations.add(BindBitmap.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:169: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  167.   
  168.       annotations.add(BindAnim.class);
  169. >     annotations.add(BindArray.class);
  170.       annotations.add(BindBitmap.class);
  171.       annotations.add(BindBool.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:170: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  168.       annotations.add(BindAnim.class);
  169.       annotations.add(BindArray.class);
  170. >     annotations.add(BindBitmap.class);
  171.       annotations.add(BindBool.class);
  172.       annotations.add(BindColor.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:171: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  169.       annotations.add(BindArray.class);
  170.       annotations.add(BindBitmap.class);
  171. >     annotations.add(BindBool.class);
  172.       annotations.add(BindColor.class);
  173.       annotations.add(BindDimen.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:172: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  170.       annotations.add(BindBitmap.class);
  171.       annotations.add(BindBool.class);
  172. >     annotations.add(BindColor.class);
  173.       annotations.add(BindDimen.class);
  174.       annotations.add(BindDrawable.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  171.       annotations.add(BindBool.class);
  172.       annotations.add(BindColor.class);
  173. >     annotations.add(BindDimen.class);
  174.       annotations.add(BindDrawable.class);
  175.       annotations.add(BindFloat.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  172.       annotations.add(BindColor.class);
  173.       annotations.add(BindDimen.class);
  174. >     annotations.add(BindDrawable.class);
  175.       annotations.add(BindFloat.class);
  176.       annotations.add(BindFont.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  173.       annotations.add(BindDimen.class);
  174.       annotations.add(BindDrawable.class);
  175. >     annotations.add(BindFloat.class);
  176.       annotations.add(BindFont.class);
  177.       annotations.add(BindInt.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:176: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  174.       annotations.add(BindDrawable.class);
  175.       annotations.add(BindFloat.class);
  176. >     annotations.add(BindFont.class);
  177.       annotations.add(BindInt.class);
  178.       annotations.add(BindString.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  175.       annotations.add(BindFloat.class);
  176.       annotations.add(BindFont.class);
  177. >     annotations.add(BindInt.class);
  178.       annotations.add(BindString.class);
  179.       annotations.add(BindView.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:178: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  176.       annotations.add(BindFont.class);
  177.       annotations.add(BindInt.class);
  178. >     annotations.add(BindString.class);
  179.       annotations.add(BindView.class);
  180.       annotations.add(BindViews.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:179: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  177.       annotations.add(BindInt.class);
  178.       annotations.add(BindString.class);
  179. >     annotations.add(BindView.class);
  180.       annotations.add(BindViews.class);
  181.       annotations.addAll(LISTENERS);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:180: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  178.       annotations.add(BindString.class);
  179.       annotations.add(BindView.class);
  180. >     annotations.add(BindViews.class);
  181.       annotations.addAll(LISTENERS);
  182.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotations`.
  179.       annotations.add(BindView.class);
  180.       annotations.add(BindViews.class);
  181. >     annotations.addAll(LISTENERS);
  182.   
  183.       return annotations;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:166: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  164.   
  165.     private Set<Class<? extends Annotation>> getSupportedAnnotations() {
  166. >     Set<Class<? extends Annotation>> annotations = new LinkedHashSet<>();
  167.   
  168.       annotations.add(BindAnim.class);

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:165: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  163.           public static final int secondary_text_default_material_light=0x7f060003;
  164.       }
  165. >     public static final class dimen {
  166.           public static final int compat_button_inset_horizontal_material=0x7f050004;
  167.           public static final int compat_button_inset_vertical_material=0x7f050005;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:173: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  171.     private MethodSpec createBindingConstructorForDialog() {
  172.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  173. >         .addAnnotation(UI_THREAD)
  174.           .addModifiers(PUBLIC)
  175.           .addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:177: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  175.           .addParameter(targetTypeName, "target");
  176.       if (constructorNeedsView()) {
  177. >       builder.addStatement("this(target, target.getWindow().getDecorView())");
  178.       } else {
  179.         builder.addStatement("this(target, target.getContext())");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:179: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  177.         builder.addStatement("this(target, target.getWindow().getDecorView())");
  178.       } else {
  179. >       builder.addStatement("this(target, target.getContext())");
  180.       }
  181.       return builder.build();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:181: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  179.         builder.addStatement("this(target, target.getContext())");
  180.       }
  181. >     return builder.build();
  182.     }
  183.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:173: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  171.     private MethodSpec createBindingConstructorForDialog() {
  172.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  173. >         .addAnnotation(UI_THREAD)
  174.           .addModifiers(PUBLIC)
  175.           .addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:175: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`,dereference of pointer `this`.
  173.           .addAnnotation(UI_THREAD)
  174.           .addModifiers(PUBLIC)
  175. >         .addParameter(targetTypeName, "target");
  176.       if (constructorNeedsView()) {
  177.         builder.addStatement("this(target, target.getWindow().getDecorView())");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  172.       MethodSpec.Builder builder = MethodSpec.constructorBuilder()
  173.           .addAnnotation(UI_THREAD)
  174. >         .addModifiers(PUBLIC)
  175.           .addParameter(targetTypeName, "target");
  176.       if (constructorNeedsView()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:176: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  174.           .addModifiers(PUBLIC)
  175.           .addParameter(targetTypeName, "target");
  176. >     if (constructorNeedsView()) {
  177.         builder.addStatement("this(target, target.getWindow().getDecorView())");
  178.       } else {

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:232: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  230.       );
  231.   
  232. >     assertAbout(javaSource()).that(source)
  233.           .withCompilerOptions("-Xlint:-processing")
  234.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  232.       assertAbout(javaSource()).that(source)
  233.           .withCompilerOptions("-Xlint:-processing")
  234. >         .processedWith(new ButterKnifeProcessor())
  235.           .compilesWithoutWarnings()
  236.           .and()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:233: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  231.   
  232.       assertAbout(javaSource()).that(source)
  233. >         .withCompilerOptions("-Xlint:-processing")
  234.           .processedWith(new ButterKnifeProcessor())
  235.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:235: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  233.           .withCompilerOptions("-Xlint:-processing")
  234.           .processedWith(new ButterKnifeProcessor())
  235. >         .compilesWithoutWarnings()
  236.           .and()
  237.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:236: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  234.           .processedWith(new ButterKnifeProcessor())
  235.           .compilesWithoutWarnings()
  236. >         .and()
  237.           .generatesSources(bindingSource);
  238.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  235.           .compilesWithoutWarnings()
  236.           .and()
  237. >         .generatesSources(bindingSource);
  238.     }
  239.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:232: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  230.       );
  231.   
  232. >     assertAbout(javaSource()).that(source)
  233.           .withCompilerOptions("-Xlint:-processing")
  234.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:233: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  231.   
  232.       assertAbout(javaSource()).that(source)
  233. >         .withCompilerOptions("-Xlint:-processing")
  234.           .processedWith(new ButterKnifeProcessor())
  235.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:254: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  252.       );
  253.   
  254. >     assertAbout(javaSources()).that(asList(baseSource, testSource))
  255.           .withCompilerOptions("-Xlint:-processing")
  256.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:258: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  256.           .processedWith(new ButterKnifeProcessor())
  257.           .compilesWithoutWarnings()
  258. >         .and()
  259.           .generatesSources(bindingBaseSource, bindingTestSource);
  260.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:254: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$7`.
  252.       );
  253.   
  254. >     assertAbout(javaSources()).that(asList(baseSource, testSource))
  255.           .withCompilerOptions("-Xlint:-processing")
  256.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:255: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  253.   
  254.       assertAbout(javaSources()).that(asList(baseSource, testSource))
  255. >         .withCompilerOptions("-Xlint:-processing")
  256.           .processedWith(new ButterKnifeProcessor())
  257.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:256: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  254.       assertAbout(javaSources()).that(asList(baseSource, testSource))
  255.           .withCompilerOptions("-Xlint:-processing")
  256. >         .processedWith(new ButterKnifeProcessor())
  257.           .compilesWithoutWarnings()
  258.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:255: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  253.   
  254.       assertAbout(javaSources()).that(asList(baseSource, testSource))
  255. >         .withCompilerOptions("-Xlint:-processing")
  256.           .processedWith(new ButterKnifeProcessor())
  257.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:257: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  255.           .withCompilerOptions("-Xlint:-processing")
  256.           .processedWith(new ButterKnifeProcessor())
  257. >         .compilesWithoutWarnings()
  258.           .and()
  259.           .generatesSources(bindingBaseSource, bindingTestSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  256.           .processedWith(new ButterKnifeProcessor())
  257.           .compilesWithoutWarnings()
  258. >         .and()
  259.           .generatesSources(bindingBaseSource, bindingTestSource);
  260.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:259: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  257.           .compilesWithoutWarnings()
  258.           .and()
  259. >         .generatesSources(bindingBaseSource, bindingTestSource);
  260.     }
  261.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  252.       );
  253.   
  254. >     assertAbout(javaSources()).that(asList(baseSource, testSource))
  255.           .withCompilerOptions("-Xlint:-processing")
  256.           .processedWith(new ButterKnifeProcessor())

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:232: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$131`.
  230.         if (hasViewLocal()) {
  231.           // Local variable in which all views will be temporarily stored.
  232. >         constructor.addStatement("$T view", VIEW);
  233.         }
  234.         for (ViewBinding binding : viewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:190: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$15`.
  188.   
  189.       if (hasMethodBindings()) {
  190. >       constructor.addParameter(targetTypeName, "target", FINAL);
  191.       } else {
  192.         constructor.addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:238: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$169`.
  236.         }
  237.         for (FieldCollectionViewBinding binding : collectionBindings) {
  238. >         constructor.addStatement("$L", binding.render(debuggable));
  239.         }
  240.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:248: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$198`.
  246.       if (!resourceBindings.isEmpty()) {
  247.         if (constructorNeedsView()) {
  248. >         constructor.addStatement("$T context = source.getContext()", CONTEXT);
  249.         }
  250.         if (hasResourceBindingsNeedingResource(sdk)) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:251: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$209`.
  249.         }
  250.         if (hasResourceBindingsNeedingResource(sdk)) {
  251. >         constructor.addStatement("$T res = context.getResources()", RESOURCES);
  252.         }
  253.         for (ResourceBinding binding : resourceBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:254: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$229`.
  252.         }
  253.         for (ResourceBinding binding : resourceBindings) {
  254. >         constructor.addStatement("$L", binding.render(sdk));
  255.         }
  256.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:203: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$51`.
  201.       if (hasUnqualifiedResourceBindings()) {
  202.         // Aapt can change IDs out from underneath us, just suppress since all will work at runtime.
  203. >       constructor.addAnnotation(AnnotationSpec.builder(SuppressWarnings.class)
  204.             .addMember("value", "$S", "ResourceType")
  205.             .build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:186: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  184.     private MethodSpec createBindingConstructor(int sdk, boolean debuggable) {
  185.       MethodSpec.Builder constructor = MethodSpec.constructorBuilder()
  186. >         .addAnnotation(UI_THREAD)
  187.           .addModifiers(PUBLIC);
  188.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:209: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$70`.
  207.   
  208.       if (hasOnTouchMethodBindings()) {
  209. >       constructor.addAnnotation(AnnotationSpec.builder(SUPPRESS_LINT)
  210.             .addMember("value", "$S", "ClickableViewAccessibility")
  211.             .build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:214: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  212.       }
  213.   
  214. >     if (parentBinding != null) {
  215.         if (parentBinding.constructorNeedsView()) {
  216.           constructor.addStatement("super(target, source)");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:238: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  236.         }
  237.         for (FieldCollectionViewBinding binding : collectionBindings) {
  238. >         constructor.addStatement("$L", binding.render(debuggable));
  239.         }
  240.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  252.         }
  253.         for (ResourceBinding binding : resourceBindings) {
  254. >         constructor.addStatement("$L", binding.render(sdk));
  255.         }
  256.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:196: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  194.   
  195.       if (constructorNeedsView()) {
  196. >       constructor.addParameter(VIEW, "source");
  197.       } else {
  198.         constructor.addParameter(CONTEXT, "context");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:198: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  196.         constructor.addParameter(VIEW, "source");
  197.       } else {
  198. >       constructor.addParameter(CONTEXT, "context");
  199.       }
  200.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  201.       if (hasUnqualifiedResourceBindings()) {
  202.         // Aapt can change IDs out from underneath us, just suppress since all will work at runtime.
  203. >       constructor.addAnnotation(AnnotationSpec.builder(SuppressWarnings.class)
  204.             .addMember("value", "$S", "ResourceType")
  205.             .build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  207.   
  208.       if (hasOnTouchMethodBindings()) {
  209. >       constructor.addAnnotation(AnnotationSpec.builder(SUPPRESS_LINT)
  210.             .addMember("value", "$S", "ClickableViewAccessibility")
  211.             .build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:216: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  214.       if (parentBinding != null) {
  215.         if (parentBinding.constructorNeedsView()) {
  216. >         constructor.addStatement("super(target, source)");
  217.         } else if (constructorNeedsView()) {
  218.           constructor.addStatement("super(target, source.getContext())");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:218: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  216.           constructor.addStatement("super(target, source)");
  217.         } else if (constructorNeedsView()) {
  218. >         constructor.addStatement("super(target, source.getContext())");
  219.         } else {
  220.           constructor.addStatement("super(target, context)");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  218.           constructor.addStatement("super(target, source.getContext())");
  219.         } else {
  220. >         constructor.addStatement("super(target, context)");
  221.         }
  222.         constructor.addCode("\n");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  220.           constructor.addStatement("super(target, context)");
  221.         }
  222. >       constructor.addCode("\n");
  223.       }
  224.       if (hasTargetField()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:225: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  223.       }
  224.       if (hasTargetField()) {
  225. >       constructor.addStatement("this.target = target");
  226.         constructor.addCode("\n");
  227.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:226: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  224.       if (hasTargetField()) {
  225.         constructor.addStatement("this.target = target");
  226. >       constructor.addCode("\n");
  227.       }
  228.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:232: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  230.         if (hasViewLocal()) {
  231.           // Local variable in which all views will be temporarily stored.
  232. >         constructor.addStatement("$T view", VIEW);
  233.         }
  234.         for (ViewBinding binding : viewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:238: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  236.         }
  237.         for (FieldCollectionViewBinding binding : collectionBindings) {
  238. >         constructor.addStatement("$L", binding.render(debuggable));
  239.         }
  240.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:242: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  240.   
  241.         if (!resourceBindings.isEmpty()) {
  242. >         constructor.addCode("\n");
  243.         }
  244.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:248: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  246.       if (!resourceBindings.isEmpty()) {
  247.         if (constructorNeedsView()) {
  248. >         constructor.addStatement("$T context = source.getContext()", CONTEXT);
  249.         }
  250.         if (hasResourceBindingsNeedingResource(sdk)) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:251: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  249.         }
  250.         if (hasResourceBindingsNeedingResource(sdk)) {
  251. >         constructor.addStatement("$T res = context.getResources()", RESOURCES);
  252.         }
  253.         for (ResourceBinding binding : resourceBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  252.         }
  253.         for (ResourceBinding binding : resourceBindings) {
  254. >         constructor.addStatement("$L", binding.render(sdk));
  255.         }
  256.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`.
  256.       }
  257.   
  258. >     return constructor.build();
  259.     }
  260.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`,dereference of pointer `this`.
  188.   
  189.       if (hasMethodBindings()) {
  190. >       constructor.addParameter(targetTypeName, "target", FINAL);
  191.       } else {
  192.         constructor.addParameter(targetTypeName, "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:192: warning: GRADUAL_DEREFERENCE
  method call on pointer `constructor`,dereference of pointer `this`.
  190.         constructor.addParameter(targetTypeName, "target", FINAL);
  191.       } else {
  192. >       constructor.addParameter(targetTypeName, "target");
  193.       }
  194.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:186: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  184.     private MethodSpec createBindingConstructor(int sdk, boolean debuggable) {
  185.       MethodSpec.Builder constructor = MethodSpec.constructorBuilder()
  186. >         .addAnnotation(UI_THREAD)
  187.           .addModifiers(PUBLIC);
  188.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$141`.
  232.           constructor.addStatement("$T view", VIEW);
  233.         }
  234. >       for (ViewBinding binding : viewBindings) {
  235.           addViewBinding(constructor, binding, debuggable);
  236.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$159`.
  235.           addViewBinding(constructor, binding, debuggable);
  236.         }
  237. >       for (FieldCollectionViewBinding binding : collectionBindings) {
  238.           constructor.addStatement("$L", binding.render(debuggable));
  239.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:253: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$219`.
  251.           constructor.addStatement("$T res = context.getResources()", RESOURCES);
  252.         }
  253. >       for (ResourceBinding binding : resourceBindings) {
  254.           constructor.addStatement("$L", binding.render(sdk));
  255.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  185.       MethodSpec.Builder constructor = MethodSpec.constructorBuilder()
  186.           .addAnnotation(UI_THREAD)
  187. >         .addModifiers(PUBLIC);
  188.   
  189.       if (hasMethodBindings()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:204: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  202.         // Aapt can change IDs out from underneath us, just suppress since all will work at runtime.
  203.         constructor.addAnnotation(AnnotationSpec.builder(SuppressWarnings.class)
  204. >           .addMember("value", "$S", "ResourceType")
  205.             .build());
  206.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  203.         constructor.addAnnotation(AnnotationSpec.builder(SuppressWarnings.class)
  204.             .addMember("value", "$S", "ResourceType")
  205. >           .build());
  206.       }
  207.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:210: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$69`.
  208.       if (hasOnTouchMethodBindings()) {
  209.         constructor.addAnnotation(AnnotationSpec.builder(SUPPRESS_LINT)
  210. >           .addMember("value", "$S", "ClickableViewAccessibility")
  211.             .build());
  212.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$75`.
  209.         constructor.addAnnotation(AnnotationSpec.builder(SUPPRESS_LINT)
  210.             .addMember("value", "$S", "ClickableViewAccessibility")
  211. >           .build());
  212.       }
  213.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:237: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.collectionBindings`,dereference of pointer `this`.
  235.           addViewBinding(constructor, binding, debuggable);
  236.         }
  237. >       for (FieldCollectionViewBinding binding : collectionBindings) {
  238.           constructor.addStatement("$L", binding.render(debuggable));
  239.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:215: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.parentBinding`,dereference of pointer `this`.
  213.   
  214.       if (parentBinding != null) {
  215. >       if (parentBinding.constructorNeedsView()) {
  216.           constructor.addStatement("super(target, source)");
  217.         } else if (constructorNeedsView()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:241: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.resourceBindings`,dereference of pointer `this`.
  239.         }
  240.   
  241. >       if (!resourceBindings.isEmpty()) {
  242.           constructor.addCode("\n");
  243.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:246: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.resourceBindings`,dereference of pointer `this`.
  244.       }
  245.   
  246. >     if (!resourceBindings.isEmpty()) {
  247.         if (constructorNeedsView()) {
  248.           constructor.addStatement("$T context = source.getContext()", CONTEXT);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:253: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.resourceBindings`,dereference of pointer `this`.
  251.           constructor.addStatement("$T res = context.getResources()", RESOURCES);
  252.         }
  253. >       for (ResourceBinding binding : resourceBindings) {
  254.           constructor.addStatement("$L", binding.render(sdk));
  255.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  232.           constructor.addStatement("$T view", VIEW);
  233.         }
  234. >       for (ViewBinding binding : viewBindings) {
  235.           addViewBinding(constructor, binding, debuggable);
  236.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  187.           .addModifiers(PUBLIC);
  188.   
  189. >     if (hasMethodBindings()) {
  190.         constructor.addParameter(targetTypeName, "target", FINAL);
  191.       } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:195: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  193.       }
  194.   
  195. >     if (constructorNeedsView()) {
  196.         constructor.addParameter(VIEW, "source");
  197.       } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  199.       }
  200.   
  201. >     if (hasUnqualifiedResourceBindings()) {
  202.         // Aapt can change IDs out from underneath us, just suppress since all will work at runtime.
  203.         constructor.addAnnotation(AnnotationSpec.builder(SuppressWarnings.class)

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:208: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  206.       }
  207.   
  208. >     if (hasOnTouchMethodBindings()) {
  209.         constructor.addAnnotation(AnnotationSpec.builder(SUPPRESS_LINT)
  210.             .addMember("value", "$S", "ClickableViewAccessibility")

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:217: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  215.         if (parentBinding.constructorNeedsView()) {
  216.           constructor.addStatement("super(target, source)");
  217. >       } else if (constructorNeedsView()) {
  218.           constructor.addStatement("super(target, source.getContext())");
  219.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:224: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  222.         constructor.addCode("\n");
  223.       }
  224. >     if (hasTargetField()) {
  225.         constructor.addStatement("this.target = target");
  226.         constructor.addCode("\n");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:229: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  227.       }
  228.   
  229. >     if (hasViewBindings()) {
  230.         if (hasViewLocal()) {
  231.           // Local variable in which all views will be temporarily stored.

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:230: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  228.   
  229.       if (hasViewBindings()) {
  230. >       if (hasViewLocal()) {
  231.           // Local variable in which all views will be temporarily stored.
  232.           constructor.addStatement("$T view", VIEW);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:235: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  233.         }
  234.         for (ViewBinding binding : viewBindings) {
  235. >         addViewBinding(constructor, binding, debuggable);
  236.         }
  237.         for (FieldCollectionViewBinding binding : collectionBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:247: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  245.   
  246.       if (!resourceBindings.isEmpty()) {
  247. >       if (constructorNeedsView()) {
  248.           constructor.addStatement("$T context = source.getContext()", CONTEXT);
  249.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:250: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  248.           constructor.addStatement("$T context = source.getContext()", CONTEXT);
  249.         }
  250. >       if (hasResourceBindingsNeedingResource(sdk)) {
  251.           constructor.addStatement("$T res = context.getResources()", RESOURCES);
  252.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:197: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$41`.
  195.           javaFile.writeTo(filer);
  196.         } catch (IOException e) {
  197. >         error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
  198.         }
  199.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindingMap`.
  187.       Map<TypeElement, BindingSet> bindingMap = findAndParseTargets(env);
  188.   
  189. >     for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {
  190.         TypeElement typeElement = entry.getKey();
  191.         BindingSet binding = entry.getValue();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:193: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`,dereference of pointer `this`,dereference of pointer `this`.
  191.         BindingSet binding = entry.getValue();
  192.   
  193. >       JavaFile javaFile = binding.brewJava(sdk, debuggable);
  194.         try {
  195.           javaFile.writeTo(filer);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:197: warning: GRADUAL_DEREFERENCE
  method call on pointer `e`.
  195.           javaFile.writeTo(filer);
  196.         } catch (IOException e) {
  197. >         error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
  198.         }
  199.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `entry`.
  188.   
  189.       for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {
  190. >       TypeElement typeElement = entry.getKey();
  191.         BindingSet binding = entry.getValue();
  192.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:191: warning: GRADUAL_DEREFERENCE
  method call on pointer `entry`.
  189.       for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {
  190.         TypeElement typeElement = entry.getKey();
  191. >       BindingSet binding = entry.getValue();
  192.   
  193.         JavaFile javaFile = binding.brewJava(sdk, debuggable);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:195: warning: GRADUAL_DEREFERENCE
  method call on pointer `javaFile`,dereference of pointer `this`.
  193.         JavaFile javaFile = binding.brewJava(sdk, debuggable);
  194.         try {
  195. >         javaFile.writeTo(filer);
  196.         } catch (IOException e) {
  197.           error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  187.       Map<TypeElement, BindingSet> bindingMap = findAndParseTargets(env);
  188.   
  189. >     for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {
  190.         TypeElement typeElement = entry.getKey();
  191.         BindingSet binding = entry.getValue();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  187.       Map<TypeElement, BindingSet> bindingMap = findAndParseTargets(env);
  188.   
  189. >     for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {
  190.         TypeElement typeElement = entry.getKey();
  191.         BindingSet binding = entry.getValue();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:187: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  185.   
  186.     @Override public boolean process(Set<? extends TypeElement> elements, RoundEnvironment env) {
  187. >     Map<TypeElement, BindingSet> bindingMap = findAndParseTargets(env);
  188.   
  189.       for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:197: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  195.           javaFile.writeTo(filer);
  196.         } catch (IOException e) {
  197. >         error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
  198.         }
  199.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:844: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  842.           ArgumentTransformer argumentTransformer =
  843.               createArgumentTransformer(method, ON_PAGE_SCROLLED_TYPES);
  844. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  845.             @Override public void onPageScrolled(int position, float positionOffset,
  846.                 int positionOffsetPixels) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:844: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  842.           ArgumentTransformer argumentTransformer =
  843.               createArgumentTransformer(method, ON_PAGE_SCROLLED_TYPES);
  844. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  845.             @Override public void onPageScrolled(int position, float positionOffset,
  846.                 int positionOffsetPixels) {

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:241: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  239.       );
  240.   
  241. >     assertAbout(javaSource()).that(source)
  242.           .withCompilerOptions("-Xlint:-processing")
  243.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:243: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  241.       assertAbout(javaSource()).that(source)
  242.           .withCompilerOptions("-Xlint:-processing")
  243. >         .processedWith(new ButterKnifeProcessor())
  244.           // found raw type: test.Test
  245.           //   missing type arguments for generic class test.Test<T>

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:242: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  240.   
  241.       assertAbout(javaSource()).that(source)
  242. >         .withCompilerOptions("-Xlint:-processing")
  243.           .processedWith(new ButterKnifeProcessor())
  244.           // found raw type: test.Test

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:246: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  244.           // found raw type: test.Test
  245.           //   missing type arguments for generic class test.Test<T>
  246. >         .compilesWithoutError()
  247.           .and()
  248.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:247: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  245.           //   missing type arguments for generic class test.Test<T>
  246.           .compilesWithoutError()
  247. >         .and()
  248.           .generatesSources(bindingSource);
  249.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:248: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  246.           .compilesWithoutError()
  247.           .and()
  248. >         .generatesSources(bindingSource);
  249.     }
  250.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:241: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  239.       );
  240.   
  241. >     assertAbout(javaSource()).that(source)
  242.           .withCompilerOptions("-Xlint:-processing")
  243.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:242: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  240.   
  241.       assertAbout(javaSource()).that(source)
  242. >         .withCompilerOptions("-Xlint:-processing")
  243.           .processedWith(new ButterKnifeProcessor())
  244.           // found raw type: test.Test

butterknife/src/main/java/butterknife/ButterKnife.java:203: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$51`.
  201.         Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203. >       bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindingClass`.
  201.         Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203. >       bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.ButterKnife.butterknife.ButterKnife.BINDINGS`.
  187.     @Nullable @CheckResult @UiThread
  188.     private static Constructor<? extends Unbinder> findBindingConstructorForClass(Class<?> cls) {
  189. >     Constructor<? extends Unbinder> bindingCtor = BINDINGS.get(cls);
  190.       if (bindingCtor != null || BINDINGS.containsKey(cls)) {
  191.         if (debug) Log.d(TAG, "HIT: Cached in binding map.");

butterknife/src/main/java/butterknife/ButterKnife.java:190: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.ButterKnife.butterknife.ButterKnife.BINDINGS`.
  188.     private static Constructor<? extends Unbinder> findBindingConstructorForClass(Class<?> cls) {
  189.       Constructor<? extends Unbinder> bindingCtor = BINDINGS.get(cls);
  190. >     if (bindingCtor != null || BINDINGS.containsKey(cls)) {
  191.         if (debug) Log.d(TAG, "HIT: Cached in binding map.");
  192.         return bindingCtor;

butterknife/src/main/java/butterknife/ButterKnife.java:211: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.ButterKnife.butterknife.ButterKnife.BINDINGS`.
  209.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  210.       }
  211. >     BINDINGS.put(cls, bindingCtor);
  212.       return bindingCtor;
  213.     }

butterknife/src/main/java/butterknife/ButterKnife.java:195: warning: GRADUAL_DEREFERENCE
  method call on pointer `clsName`.
  193.       }
  194.       String clsName = cls.getName();
  195. >     if (clsName.startsWith("android.") || clsName.startsWith("java.")
  196.           || clsName.startsWith("androidx.")) {
  197.         if (debug) Log.d(TAG, "MISS: Reached framework class. Abandoning search.");

butterknife/src/main/java/butterknife/ButterKnife.java:196: warning: GRADUAL_DEREFERENCE
  method call on pointer `clsName`.
  194.       String clsName = cls.getName();
  195.       if (clsName.startsWith("android.") || clsName.startsWith("java.")
  196. >         || clsName.startsWith("androidx.")) {
  197.         if (debug) Log.d(TAG, "MISS: Reached framework class. Abandoning search.");
  198.         return null;

butterknife/src/main/java/butterknife/ButterKnife.java:194: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  192.         return bindingCtor;
  193.       }
  194. >     String clsName = cls.getName();
  195.       if (clsName.startsWith("android.") || clsName.startsWith("java.")
  196.           || clsName.startsWith("androidx.")) {

butterknife/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  199.       }
  200.       try {
  201. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {
  206. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:207: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  205.       } catch (ClassNotFoundException e) {
  206.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  207. >       bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {
  209.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);

butterknife/src/main/java/butterknife/ButterKnife.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {
  209. >       throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  210.       }
  211.       BINDINGS.put(cls, bindingCtor);

butterknife/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  199.       }
  200.       try {
  201. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

butterknife/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  199.       }
  200.       try {
  201. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

butterknife/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  199.       }
  200.       try {
  201. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

butterknife/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  199.       }
  200.       try {
  201. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  202.         //noinspection unchecked
  203.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {
  206. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$67`.
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {
  206. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {
  206. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$77`.
  204.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  205.       } catch (ClassNotFoundException e) {
  206. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {

butterknife/src/main/java/butterknife/ButterKnife.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$89`.
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {
  209. >       throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  210.       }
  211.       BINDINGS.put(cls, bindingCtor);

butterknife/src/main/java/butterknife/ButterKnife.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$93`.
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {
  209. >       throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  210.       }
  211.       BINDINGS.put(cls, bindingCtor);

butterknife/src/main/java/butterknife/ButterKnife.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$97`.
  207.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  208.       } catch (NoSuchMethodException e) {
  209. >       throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  210.       }
  211.       BINDINGS.put(cls, bindingCtor);

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:189: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  187.           public static final int notification_top_pad_large_text=0x7f050015;
  188.       }
  189. >     public static final class drawable {
  190.           public static final int notification_action_background=0x7f020000;
  191.           public static final int notification_bg=0x7f020001;

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:505: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$19`.
  503.       );
  504.   
  505. >     assertAbout(javaSources())
  506.           .that(asList(
  507.               sourceA,

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:506: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$42`.
  504.   
  505.       assertAbout(javaSources())
  506. >         .that(asList(
  507.               sourceA,
  508.               sourceB,

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:518: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$63`.
  516.           .processedWith(new ButterKnifeProcessor())
  517.           .compilesWithoutWarnings()
  518. >         .and()
  519.           .generatesSources(
  520.               bindingASource,

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  504.   
  505.       assertAbout(javaSources())
  506. >         .that(asList(
  507.               sourceA,
  508.               sourceB,

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:515: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  513.               sourceG,
  514.               sourceH))
  515. >         .withCompilerOptions("-Xlint:-processing")
  516.           .processedWith(new ButterKnifeProcessor())
  517.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:516: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  514.               sourceH))
  515.           .withCompilerOptions("-Xlint:-processing")
  516. >         .processedWith(new ButterKnifeProcessor())
  517.           .compilesWithoutWarnings()
  518.           .and()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:515: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$49`.
  513.               sourceG,
  514.               sourceH))
  515. >         .withCompilerOptions("-Xlint:-processing")
  516.           .processedWith(new ButterKnifeProcessor())
  517.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:517: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  515.           .withCompilerOptions("-Xlint:-processing")
  516.           .processedWith(new ButterKnifeProcessor())
  517. >         .compilesWithoutWarnings()
  518.           .and()
  519.           .generatesSources(

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:518: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  516.           .processedWith(new ButterKnifeProcessor())
  517.           .compilesWithoutWarnings()
  518. >         .and()
  519.           .generatesSources(
  520.               bindingASource,

butterknife-runtime/src/test/java/butterknife/UnbinderTest.java:519: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  517.           .compilesWithoutWarnings()
  518.           .and()
  519. >         .generatesSources(
  520.               bindingASource,
  521.               bindingBSource,

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:273: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  271.       );
  272.   
  273. >     assertAbout(javaSource()).that(source)
  274.           .withCompilerOptions("-Xlint:-processing")
  275.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:275: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  273.       assertAbout(javaSource()).that(source)
  274.           .withCompilerOptions("-Xlint:-processing")
  275. >         .processedWith(new ButterKnifeProcessor())
  276.           .compilesWithoutWarnings()
  277.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:274: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  272.   
  273.       assertAbout(javaSource()).that(source)
  274. >         .withCompilerOptions("-Xlint:-processing")
  275.           .processedWith(new ButterKnifeProcessor())
  276.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:276: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  274.           .withCompilerOptions("-Xlint:-processing")
  275.           .processedWith(new ButterKnifeProcessor())
  276. >         .compilesWithoutWarnings()
  277.           .and()
  278.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:277: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  275.           .processedWith(new ButterKnifeProcessor())
  276.           .compilesWithoutWarnings()
  277. >         .and()
  278.           .generatesSources(bindingSource);
  279.     }

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:278: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  276.           .compilesWithoutWarnings()
  277.           .and()
  278. >         .generatesSources(bindingSource);
  279.     }
  280.   }

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:273: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  271.       );
  272.   
  273. >     assertAbout(javaSource()).that(source)
  274.           .withCompilerOptions("-Xlint:-processing")
  275.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java:274: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  272.   
  273.       assertAbout(javaSource()).that(source)
  274. >         .withCompilerOptions("-Xlint:-processing")
  275.           .processedWith(new ButterKnifeProcessor())
  276.           .compilesWithoutWarnings()

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:203: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  201.           public static final int notify_panel_notification_icon_bg=0x7f020009;
  202.       }
  203. >     public static final class id {
  204.           public static final int action_container=0x7f08000d;
  205.           public static final int action_divider=0x7f080019;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:358: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindingMap`.
  356.         TypeElement parentType = findParentType(type, erasedTargetNames);
  357.         if (parentType == null) {
  358. >         bindingMap.put(type, builder.build());
  359.         } else {
  360.           BindingSet parentBinding = bindingMap.get(parentType);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:360: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindingMap`.
  358.           bindingMap.put(type, builder.build());
  359.         } else {
  360. >         BindingSet parentBinding = bindingMap.get(parentType);
  361.           if (parentBinding != null) {
  362.             builder.setParent(parentBinding);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:363: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindingMap`.
  361.           if (parentBinding != null) {
  362.             builder.setParent(parentBinding);
  363. >           bindingMap.put(type, builder.build());
  364.           } else {
  365.             // Has a superclass binding but we haven't built it yet. Re-enqueue for later.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:348: warning: GRADUAL_DEREFERENCE
  method call on pointer `builderMap`.
  346.       // which starts at the roots (superclasses) and walks to the leafs (subclasses).
  347.       Deque<Map.Entry<TypeElement, BindingSet.Builder>> entries =
  348. >         new ArrayDeque<>(builderMap.entrySet());
  349.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  350.       while (!entries.isEmpty()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:358: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  356.         TypeElement parentType = findParentType(type, erasedTargetNames);
  357.         if (parentType == null) {
  358. >         bindingMap.put(type, builder.build());
  359.         } else {
  360.           BindingSet parentBinding = bindingMap.get(parentType);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:362: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  360.           BindingSet parentBinding = bindingMap.get(parentType);
  361.           if (parentBinding != null) {
  362. >           builder.setParent(parentBinding);
  363.             bindingMap.put(type, builder.build());
  364.           } else {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:363: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  361.           if (parentBinding != null) {
  362.             builder.setParent(parentBinding);
  363. >           bindingMap.put(type, builder.build());
  364.           } else {
  365.             // Has a superclass binding but we haven't built it yet. Re-enqueue for later.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:341: warning: GRADUAL_DEREFERENCE
  method call on pointer `compiler.ButterKnifeProcessor.butterknife.compiler.ButterKnifeProcessor.LISTENERS`.
  339.   
  340.       // Process each annotation that corresponds to a listener.
  341. >     for (Class<? extends Annotation> listener : LISTENERS) {
  342.         findAndParseListener(env, listener, builderMap, erasedTargetNames);
  343.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:350: warning: GRADUAL_DEREFERENCE
  method call on pointer `entries`.
  348.           new ArrayDeque<>(builderMap.entrySet());
  349.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  350. >     while (!entries.isEmpty()) {
  351.         Map.Entry<TypeElement, BindingSet.Builder> entry = entries.removeFirst();
  352.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:351: warning: GRADUAL_DEREFERENCE
  method call on pointer `entries`.
  349.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  350.       while (!entries.isEmpty()) {
  351. >       Map.Entry<TypeElement, BindingSet.Builder> entry = entries.removeFirst();
  352.   
  353.         TypeElement type = entry.getKey();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:366: warning: GRADUAL_DEREFERENCE
  method call on pointer `entries`.
  364.           } else {
  365.             // Has a superclass binding but we haven't built it yet. Re-enqueue for later.
  366. >           entries.addLast(entry);
  367.           }
  368.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:353: warning: GRADUAL_DEREFERENCE
  method call on pointer `entry`.
  351.         Map.Entry<TypeElement, BindingSet.Builder> entry = entries.removeFirst();
  352.   
  353. >       TypeElement type = entry.getKey();
  354.         BindingSet.Builder builder = entry.getValue();
  355.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `entry`.
  352.   
  353.         TypeElement type = entry.getKey();
  354. >       BindingSet.Builder builder = entry.getValue();
  355.   
  356.         TypeElement parentType = findParentType(type, erasedTargetNames);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  207.   
  208.       // Process each @BindAnim element.
  209. >     for (Element element : env.getElementsAnnotatedWith(BindAnim.class)) {
  210.         if (!SuperficialValidation.validateElement(element)) continue;
  211.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:219: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  217.   
  218.       // Process each @BindArray element.
  219. >     for (Element element : env.getElementsAnnotatedWith(BindArray.class)) {
  220.         if (!SuperficialValidation.validateElement(element)) continue;
  221.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:229: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  227.   
  228.       // Process each @BindBitmap element.
  229. >     for (Element element : env.getElementsAnnotatedWith(BindBitmap.class)) {
  230.         if (!SuperficialValidation.validateElement(element)) continue;
  231.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:239: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  237.   
  238.       // Process each @BindBool element.
  239. >     for (Element element : env.getElementsAnnotatedWith(BindBool.class)) {
  240.         if (!SuperficialValidation.validateElement(element)) continue;
  241.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  247.   
  248.       // Process each @BindColor element.
  249. >     for (Element element : env.getElementsAnnotatedWith(BindColor.class)) {
  250.         if (!SuperficialValidation.validateElement(element)) continue;
  251.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:259: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  257.   
  258.       // Process each @BindDimen element.
  259. >     for (Element element : env.getElementsAnnotatedWith(BindDimen.class)) {
  260.         if (!SuperficialValidation.validateElement(element)) continue;
  261.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  267.   
  268.       // Process each @BindDrawable element.
  269. >     for (Element element : env.getElementsAnnotatedWith(BindDrawable.class)) {
  270.         if (!SuperficialValidation.validateElement(element)) continue;
  271.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:279: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  277.   
  278.       // Process each @BindFloat element.
  279. >     for (Element element : env.getElementsAnnotatedWith(BindFloat.class)) {
  280.         if (!SuperficialValidation.validateElement(element)) continue;
  281.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  287.   
  288.       // Process each @BindFont element.
  289. >     for (Element element : env.getElementsAnnotatedWith(BindFont.class)) {
  290.         if (!SuperficialValidation.validateElement(element)) continue;
  291.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:299: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  297.   
  298.       // Process each @BindInt element.
  299. >     for (Element element : env.getElementsAnnotatedWith(BindInt.class)) {
  300.         if (!SuperficialValidation.validateElement(element)) continue;
  301.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  307.   
  308.       // Process each @BindString element.
  309. >     for (Element element : env.getElementsAnnotatedWith(BindString.class)) {
  310.         if (!SuperficialValidation.validateElement(element)) continue;
  311.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  317.   
  318.       // Process each @BindView element.
  319. >     for (Element element : env.getElementsAnnotatedWith(BindView.class)) {
  320.         // we don't SuperficialValidation.validateElement(element)
  321.         // so that an unresolved View type can be generated by later processing rounds

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:330: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  328.   
  329.       // Process each @BindViews element.
  330. >     for (Element element : env.getElementsAnnotatedWith(BindViews.class)) {
  331.         // we don't SuperficialValidation.validateElement(element)
  332.         // so that an unresolved View type can be generated by later processing rounds

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:205: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  203.   
  204.     private Map<TypeElement, BindingSet> findAndParseTargets(RoundEnvironment env) {
  205. >     Map<TypeElement, BindingSet.Builder> builderMap = new LinkedHashMap<>();
  206.       Set<TypeElement> erasedTargetNames = new LinkedHashSet<>();
  207.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$118`.
  247.   
  248.       // Process each @BindColor element.
  249. >     for (Element element : env.getElementsAnnotatedWith(BindColor.class)) {
  250.         if (!SuperficialValidation.validateElement(element)) continue;
  251.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$121`.
  247.   
  248.       // Process each @BindColor element.
  249. >     for (Element element : env.getElementsAnnotatedWith(BindColor.class)) {
  250.         if (!SuperficialValidation.validateElement(element)) continue;
  251.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:259: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$146`.
  257.   
  258.       // Process each @BindDimen element.
  259. >     for (Element element : env.getElementsAnnotatedWith(BindDimen.class)) {
  260.         if (!SuperficialValidation.validateElement(element)) continue;
  261.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:259: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$149`.
  257.   
  258.       // Process each @BindDimen element.
  259. >     for (Element element : env.getElementsAnnotatedWith(BindDimen.class)) {
  260.         if (!SuperficialValidation.validateElement(element)) continue;
  261.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$174`.
  267.   
  268.       // Process each @BindDrawable element.
  269. >     for (Element element : env.getElementsAnnotatedWith(BindDrawable.class)) {
  270.         if (!SuperficialValidation.validateElement(element)) continue;
  271.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$177`.
  267.   
  268.       // Process each @BindDrawable element.
  269. >     for (Element element : env.getElementsAnnotatedWith(BindDrawable.class)) {
  270.         if (!SuperficialValidation.validateElement(element)) continue;
  271.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:279: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$202`.
  277.   
  278.       // Process each @BindFloat element.
  279. >     for (Element element : env.getElementsAnnotatedWith(BindFloat.class)) {
  280.         if (!SuperficialValidation.validateElement(element)) continue;
  281.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:279: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$205`.
  277.   
  278.       // Process each @BindFloat element.
  279. >     for (Element element : env.getElementsAnnotatedWith(BindFloat.class)) {
  280.         if (!SuperficialValidation.validateElement(element)) continue;
  281.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$230`.
  287.   
  288.       // Process each @BindFont element.
  289. >     for (Element element : env.getElementsAnnotatedWith(BindFont.class)) {
  290.         if (!SuperficialValidation.validateElement(element)) continue;
  291.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$233`.
  287.   
  288.       // Process each @BindFont element.
  289. >     for (Element element : env.getElementsAnnotatedWith(BindFont.class)) {
  290.         if (!SuperficialValidation.validateElement(element)) continue;
  291.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:299: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$258`.
  297.   
  298.       // Process each @BindInt element.
  299. >     for (Element element : env.getElementsAnnotatedWith(BindInt.class)) {
  300.         if (!SuperficialValidation.validateElement(element)) continue;
  301.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:299: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$261`.
  297.   
  298.       // Process each @BindInt element.
  299. >     for (Element element : env.getElementsAnnotatedWith(BindInt.class)) {
  300.         if (!SuperficialValidation.validateElement(element)) continue;
  301.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$286`.
  307.   
  308.       // Process each @BindString element.
  309. >     for (Element element : env.getElementsAnnotatedWith(BindString.class)) {
  310.         if (!SuperficialValidation.validateElement(element)) continue;
  311.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$289`.
  307.   
  308.       // Process each @BindString element.
  309. >     for (Element element : env.getElementsAnnotatedWith(BindString.class)) {
  310.         if (!SuperficialValidation.validateElement(element)) continue;
  311.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:206: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  204.     private Map<TypeElement, BindingSet> findAndParseTargets(RoundEnvironment env) {
  205.       Map<TypeElement, BindingSet.Builder> builderMap = new LinkedHashMap<>();
  206. >     Set<TypeElement> erasedTargetNames = new LinkedHashSet<>();
  207.   
  208.       // Process each @BindAnim element.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$314`.
  317.   
  318.       // Process each @BindView element.
  319. >     for (Element element : env.getElementsAnnotatedWith(BindView.class)) {
  320.         // we don't SuperficialValidation.validateElement(element)
  321.         // so that an unresolved View type can be generated by later processing rounds

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$317`.
  317.   
  318.       // Process each @BindView element.
  319. >     for (Element element : env.getElementsAnnotatedWith(BindView.class)) {
  320.         // we don't SuperficialValidation.validateElement(element)
  321.         // so that an unresolved View type can be generated by later processing rounds

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:330: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$339`.
  328.   
  329.       // Process each @BindViews element.
  330. >     for (Element element : env.getElementsAnnotatedWith(BindViews.class)) {
  331.         // we don't SuperficialValidation.validateElement(element)
  332.         // so that an unresolved View type can be generated by later processing rounds

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:330: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$342`.
  328.   
  329.       // Process each @BindViews element.
  330. >     for (Element element : env.getElementsAnnotatedWith(BindViews.class)) {
  331.         // we don't SuperficialValidation.validateElement(element)
  332.         // so that an unresolved View type can be generated by later processing rounds

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:219: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  217.   
  218.       // Process each @BindArray element.
  219. >     for (Element element : env.getElementsAnnotatedWith(BindArray.class)) {
  220.         if (!SuperficialValidation.validateElement(element)) continue;
  221.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:341: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$364`.
  339.   
  340.       // Process each annotation that corresponds to a listener.
  341. >     for (Class<? extends Annotation> listener : LISTENERS) {
  342.         findAndParseListener(env, listener, builderMap, erasedTargetNames);
  343.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:219: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  217.   
  218.       // Process each @BindArray element.
  219. >     for (Element element : env.getElementsAnnotatedWith(BindArray.class)) {
  220.         if (!SuperficialValidation.validateElement(element)) continue;
  221.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:348: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$383`.
  346.       // which starts at the roots (superclasses) and walks to the leafs (subclasses).
  347.       Deque<Map.Entry<TypeElement, BindingSet.Builder>> entries =
  348. >         new ArrayDeque<>(builderMap.entrySet());
  349.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  350.       while (!entries.isEmpty()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:349: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$386`.
  347.       Deque<Map.Entry<TypeElement, BindingSet.Builder>> entries =
  348.           new ArrayDeque<>(builderMap.entrySet());
  349. >     Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  350.       while (!entries.isEmpty()) {
  351.         Map.Entry<TypeElement, BindingSet.Builder> entry = entries.removeFirst();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:229: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  227.   
  228.       // Process each @BindBitmap element.
  229. >     for (Element element : env.getElementsAnnotatedWith(BindBitmap.class)) {
  230.         if (!SuperficialValidation.validateElement(element)) continue;
  231.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:229: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$65`.
  227.   
  228.       // Process each @BindBitmap element.
  229. >     for (Element element : env.getElementsAnnotatedWith(BindBitmap.class)) {
  230.         if (!SuperficialValidation.validateElement(element)) continue;
  231.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  207.   
  208.       // Process each @BindAnim element.
  209. >     for (Element element : env.getElementsAnnotatedWith(BindAnim.class)) {
  210.         if (!SuperficialValidation.validateElement(element)) continue;
  211.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:239: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  237.   
  238.       // Process each @BindBool element.
  239. >     for (Element element : env.getElementsAnnotatedWith(BindBool.class)) {
  240.         if (!SuperficialValidation.validateElement(element)) continue;
  241.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:239: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$93`.
  237.   
  238.       // Process each @BindBool element.
  239. >     for (Element element : env.getElementsAnnotatedWith(BindBool.class)) {
  240.         if (!SuperficialValidation.validateElement(element)) continue;
  241.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:209: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  207.   
  208.       // Process each @BindAnim element.
  209. >     for (Element element : env.getElementsAnnotatedWith(BindAnim.class)) {
  210.         if (!SuperficialValidation.validateElement(element)) continue;
  211.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:212: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  210.         if (!SuperficialValidation.validateElement(element)) continue;
  211.         try {
  212. >         parseResourceAnimation(element, builderMap, erasedTargetNames);
  213.         } catch (Exception e) {
  214.           logParsingError(element, BindAnim.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:214: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  212.           parseResourceAnimation(element, builderMap, erasedTargetNames);
  213.         } catch (Exception e) {
  214. >         logParsingError(element, BindAnim.class, e);
  215.         }
  216.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  220.         if (!SuperficialValidation.validateElement(element)) continue;
  221.         try {
  222. >         parseResourceArray(element, builderMap, erasedTargetNames);
  223.         } catch (Exception e) {
  224.           logParsingError(element, BindArray.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:224: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  222.           parseResourceArray(element, builderMap, erasedTargetNames);
  223.         } catch (Exception e) {
  224. >         logParsingError(element, BindArray.class, e);
  225.         }
  226.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:232: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  230.         if (!SuperficialValidation.validateElement(element)) continue;
  231.         try {
  232. >         parseResourceBitmap(element, builderMap, erasedTargetNames);
  233.         } catch (Exception e) {
  234.           logParsingError(element, BindBitmap.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:234: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  232.           parseResourceBitmap(element, builderMap, erasedTargetNames);
  233.         } catch (Exception e) {
  234. >         logParsingError(element, BindBitmap.class, e);
  235.         }
  236.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:242: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  240.         if (!SuperficialValidation.validateElement(element)) continue;
  241.         try {
  242. >         parseResourceBool(element, builderMap, erasedTargetNames);
  243.         } catch (Exception e) {
  244.           logParsingError(element, BindBool.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:244: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  242.           parseResourceBool(element, builderMap, erasedTargetNames);
  243.         } catch (Exception e) {
  244. >         logParsingError(element, BindBool.class, e);
  245.         }
  246.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  250.         if (!SuperficialValidation.validateElement(element)) continue;
  251.         try {
  252. >         parseResourceColor(element, builderMap, erasedTargetNames);
  253.         } catch (Exception e) {
  254.           logParsingError(element, BindColor.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  252.           parseResourceColor(element, builderMap, erasedTargetNames);
  253.         } catch (Exception e) {
  254. >         logParsingError(element, BindColor.class, e);
  255.         }
  256.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:262: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  260.         if (!SuperficialValidation.validateElement(element)) continue;
  261.         try {
  262. >         parseResourceDimen(element, builderMap, erasedTargetNames);
  263.         } catch (Exception e) {
  264.           logParsingError(element, BindDimen.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:264: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  262.           parseResourceDimen(element, builderMap, erasedTargetNames);
  263.         } catch (Exception e) {
  264. >         logParsingError(element, BindDimen.class, e);
  265.         }
  266.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:272: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  270.         if (!SuperficialValidation.validateElement(element)) continue;
  271.         try {
  272. >         parseResourceDrawable(element, builderMap, erasedTargetNames);
  273.         } catch (Exception e) {
  274.           logParsingError(element, BindDrawable.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:274: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  272.           parseResourceDrawable(element, builderMap, erasedTargetNames);
  273.         } catch (Exception e) {
  274. >         logParsingError(element, BindDrawable.class, e);
  275.         }
  276.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  280.         if (!SuperficialValidation.validateElement(element)) continue;
  281.         try {
  282. >         parseResourceFloat(element, builderMap, erasedTargetNames);
  283.         } catch (Exception e) {
  284.           logParsingError(element, BindFloat.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:284: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  282.           parseResourceFloat(element, builderMap, erasedTargetNames);
  283.         } catch (Exception e) {
  284. >         logParsingError(element, BindFloat.class, e);
  285.         }
  286.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  290.         if (!SuperficialValidation.validateElement(element)) continue;
  291.         try {
  292. >         parseResourceFont(element, builderMap, erasedTargetNames);
  293.         } catch (Exception e) {
  294.           logParsingError(element, BindFont.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  292.           parseResourceFont(element, builderMap, erasedTargetNames);
  293.         } catch (Exception e) {
  294. >         logParsingError(element, BindFont.class, e);
  295.         }
  296.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  300.         if (!SuperficialValidation.validateElement(element)) continue;
  301.         try {
  302. >         parseResourceInt(element, builderMap, erasedTargetNames);
  303.         } catch (Exception e) {
  304.           logParsingError(element, BindInt.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:304: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  302.           parseResourceInt(element, builderMap, erasedTargetNames);
  303.         } catch (Exception e) {
  304. >         logParsingError(element, BindInt.class, e);
  305.         }
  306.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:312: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  310.         if (!SuperficialValidation.validateElement(element)) continue;
  311.         try {
  312. >         parseResourceString(element, builderMap, erasedTargetNames);
  313.         } catch (Exception e) {
  314.           logParsingError(element, BindString.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:314: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  312.           parseResourceString(element, builderMap, erasedTargetNames);
  313.         } catch (Exception e) {
  314. >         logParsingError(element, BindString.class, e);
  315.         }
  316.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:323: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  321.         // so that an unresolved View type can be generated by later processing rounds
  322.         try {
  323. >         parseBindView(element, builderMap, erasedTargetNames);
  324.         } catch (Exception e) {
  325.           logParsingError(element, BindView.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  323.           parseBindView(element, builderMap, erasedTargetNames);
  324.         } catch (Exception e) {
  325. >         logParsingError(element, BindView.class, e);
  326.         }
  327.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:334: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  332.         // so that an unresolved View type can be generated by later processing rounds
  333.         try {
  334. >         parseBindViews(element, builderMap, erasedTargetNames);
  335.         } catch (Exception e) {
  336.           logParsingError(element, BindViews.class, e);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:336: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  334.           parseBindViews(element, builderMap, erasedTargetNames);
  335.         } catch (Exception e) {
  336. >         logParsingError(element, BindViews.class, e);
  337.         }
  338.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:342: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  340.       // Process each annotation that corresponds to a listener.
  341.       for (Class<? extends Annotation> listener : LISTENERS) {
  342. >       findAndParseListener(env, listener, builderMap, erasedTargetNames);
  343.       }
  344.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  354.         BindingSet.Builder builder = entry.getValue();
  355.   
  356. >       TypeElement parentType = findParentType(type, erasedTargetNames);
  357.         if (parentType == null) {
  358.           bindingMap.put(type, builder.build());

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:219: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  217.       );
  218.   
  219. >     assertAbout(javaSource()).that(source)
  220.               .withCompilerOptions("-Xlint:-processing")
  221.               .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:221: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  219.       assertAbout(javaSource()).that(source)
  220.               .withCompilerOptions("-Xlint:-processing")
  221. >             .processedWith(new ButterKnifeProcessor())
  222.               .failsToCompile();
  223.     }

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  218.   
  219.       assertAbout(javaSource()).that(source)
  220. >             .withCompilerOptions("-Xlint:-processing")
  221.               .processedWith(new ButterKnifeProcessor())
  222.               .failsToCompile();

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:222: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  220.               .withCompilerOptions("-Xlint:-processing")
  221.               .processedWith(new ButterKnifeProcessor())
  222. >             .failsToCompile();
  223.     }
  224.   

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:219: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  217.       );
  218.   
  219. >     assertAbout(javaSource()).that(source)
  220.               .withCompilerOptions("-Xlint:-processing")
  221.               .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java:220: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  218.   
  219.       assertAbout(javaSource()).that(source)
  220. >             .withCompilerOptions("-Xlint:-processing")
  221.               .processedWith(new ButterKnifeProcessor())
  222.               .failsToCompile();

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:230: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$40`.
  228.   
  229.       // now the GeneratingProcessor should let it compile
  230. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  231.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  232.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:230: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$41`.
  228.   
  229.       // now the GeneratingProcessor should let it compile
  230. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  231.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  232.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:225: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  223.       // w/o the GeneratingProcessor it can't find `class GeneratedView`
  224.       assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  225. >         .processedWith(new ButterKnifeProcessor())
  226.           .failsToCompile()
  227.           .withErrorContaining("cannot find symbol");

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:224: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  222.   
  223.       // w/o the GeneratingProcessor it can't find `class GeneratedView`
  224. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  225.           .processedWith(new ButterKnifeProcessor())
  226.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:226: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  224.       assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  225.           .processedWith(new ButterKnifeProcessor())
  226. >         .failsToCompile()
  227.           .withErrorContaining("cannot find symbol");
  228.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:227: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  225.           .processedWith(new ButterKnifeProcessor())
  226.           .failsToCompile()
  227. >         .withErrorContaining("cannot find symbol");
  228.   
  229.       // now the GeneratingProcessor should let it compile

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:230: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  228.   
  229.       // now the GeneratingProcessor should let it compile
  230. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  231.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  232.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:231: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  229.       // now the GeneratingProcessor should let it compile
  230.       assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  231. >         .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  232.               "package test;",
  233.               "import android.content.Context;",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:230: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  228.   
  229.       // now the GeneratingProcessor should let it compile
  230. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  231.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  232.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:224: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  222.   
  223.       // w/o the GeneratingProcessor it can't find `class GeneratedView`
  224. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  225.           .processedWith(new ButterKnifeProcessor())
  226.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:230: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  228.   
  229.       // now the GeneratingProcessor should let it compile
  230. >     assertAbout(javaSources()).that(ImmutableList.of(source, TestGeneratingProcessor.ANNOTATION))
  231.           .processedWith(new ButterKnifeProcessor(), new TestGeneratingProcessor("GeneratedView",
  232.               "package test;",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:241: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  239.               "}"
  240.           ))
  241. >         .compilesWithoutError()
  242.           .withNoteContaining("@BindViews List or array with unresolved type (GeneratedView)").and()
  243.           .withNoteContaining("must elsewhere be generated as a View or interface").and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:242: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  240.           ))
  241.           .compilesWithoutError()
  242. >         .withNoteContaining("@BindViews List or array with unresolved type (GeneratedView)").and()
  243.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  244.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:242: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  240.           ))
  241.           .compilesWithoutError()
  242. >         .withNoteContaining("@BindViews List or array with unresolved type (GeneratedView)").and()
  243.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  244.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:243: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$69`.
  241.           .compilesWithoutError()
  242.           .withNoteContaining("@BindViews List or array with unresolved type (GeneratedView)").and()
  243. >         .withNoteContaining("must elsewhere be generated as a View or interface").and()
  244.           .and()
  245.           .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:243: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  241.           .compilesWithoutError()
  242.           .withNoteContaining("@BindViews List or array with unresolved type (GeneratedView)").and()
  243. >         .withNoteContaining("must elsewhere be generated as a View or interface").and()
  244.           .and()
  245.           .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:244: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$76`.
  242.           .withNoteContaining("@BindViews List or array with unresolved type (GeneratedView)").and()
  243.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  244. >         .and()
  245.           .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");
  246.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:245: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  243.           .withNoteContaining("must elsewhere be generated as a View or interface").and()
  244.           .and()
  245. >         .generatesFileNamed(StandardLocation.CLASS_OUTPUT, "test", "Test_ViewBinding.class");
  246.     }
  247.   

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:240: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  238.           public static final int word=0x7f080020;
  239.       }
  240. >     public static final class integer {
  241.           public static final int status_bar_notification_info_maxnum=0x7f090000;
  242.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `android.view.View`.
  247.       int id = bindView.value();
  248.       Class<?> viewClass = field.getType();
  249. >     if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  250.         throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:247: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindView`.
  245.       validateMember(field);
  246.   
  247. >     int id = bindView.value();
  248.       Class<?> viewClass = field.getType();
  249.       if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:241: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  239.   
  240.     private static @Nullable Unbinder parseBindView(Object target, Field field, View source) {
  241. >     BindView bindView = field.getAnnotation(BindView.class);
  242.       if (bindView == null) {
  243.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:248: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  246.   
  247.       int id = bindView.value();
  248. >     Class<?> viewClass = field.getType();
  249.       if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  250.         throw new IllegalStateException(

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  250.         throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("
  252. >               + field.getDeclaringClass().getName()
  253.                 + '.'
  254.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  252.                 + field.getDeclaringClass().getName()
  253.                 + '.'
  254. >               + field.getName()
  255.                 + ')');
  256.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  256.       }
  257.   
  258. >     String who = "field '" + field.getName() + "'";
  259.       Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  260.       trySet(field, target, view);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:250: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  248.       Class<?> viewClass = field.getType();
  249.       if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  250. >       throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("
  252.                 + field.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  250.         throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("
  252. >               + field.getDeclaringClass().getName()
  253.                 + '.'
  254.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  250.         throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("
  252. >               + field.getDeclaringClass().getName()
  253.                 + '.'
  254.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  250.         throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("
  252. >               + field.getDeclaringClass().getName()
  253.                 + '.'
  254.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  252.                 + field.getDeclaringClass().getName()
  253.                 + '.'
  254. >               + field.getName()
  255.                 + ')');
  256.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  252.                 + field.getDeclaringClass().getName()
  253.                 + '.'
  254. >               + field.getName()
  255.                 + ')');
  256.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  252.                 + field.getDeclaringClass().getName()
  253.                 + '.'
  254. >               + field.getName()
  255.                 + ')');
  256.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  252.                 + field.getDeclaringClass().getName()
  253.                 + '.'
  254. >               + field.getName()
  255.                 + ')');
  256.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  256.       }
  257.   
  258. >     String who = "field '" + field.getName() + "'";
  259.       Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  260.       trySet(field, target, view);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  256.       }
  257.   
  258. >     String who = "field '" + field.getName() + "'";
  259.       Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  260.       trySet(field, target, view);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$67`.
  256.       }
  257.   
  258. >     String who = "field '" + field.getName() + "'";
  259.       Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  260.       trySet(field, target, view);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:258: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  256.       }
  257.   
  258. >     String who = "field '" + field.getName() + "'";
  259.       Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  260.       trySet(field, target, view);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:262: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$83`.
  260.       trySet(field, target, view);
  261.   
  262. >     return new FieldUnbinder(target, field);
  263.     }
  264.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewClass`.
  247.       int id = bindView.value();
  248.       Class<?> viewClass = field.getType();
  249. >     if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  250.         throw new IllegalStateException(
  251.             "@BindView fields must extend from View or be an interface. ("

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:251: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  249.       assertAbout(javaSource()).that(source)
  250.           .processedWith(new ButterKnifeProcessor())
  251. >         .failsToCompile()
  252.           .withErrorContaining(
  253.               "@OnClick-annotated class incorrectly in Java framework package. (java.test.Test)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:252: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  250.           .processedWith(new ButterKnifeProcessor())
  251.           .failsToCompile()
  252. >         .withErrorContaining(
  253.               "@OnClick-annotated class incorrectly in Java framework package. (java.test.Test)")
  254.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  252.           .withErrorContaining(
  253.               "@OnClick-annotated class incorrectly in Java framework package. (java.test.Test)")
  254. >         .in(source).onLine(4);
  255.     }
  256.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:254: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  252.           .withErrorContaining(
  253.               "@OnClick-annotated class incorrectly in Java framework package. (java.test.Test)")
  254. >         .in(source).onLine(4);
  255.     }
  256.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  247.       );
  248.   
  249. >     assertAbout(javaSource()).that(source)
  250.           .processedWith(new ButterKnifeProcessor())
  251.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:250: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  248.   
  249.       assertAbout(javaSource()).that(source)
  250. >         .processedWith(new ButterKnifeProcessor())
  251.           .failsToCompile()
  252.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:249: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  247.       );
  248.   
  249. >     assertAbout(javaSource()).that(source)
  250.           .processedWith(new ButterKnifeProcessor())
  251.           .failsToCompile()

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:243: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  241.           public static final int status_bar_notification_info_maxnum=0x7f090000;
  242.       }
  243. >     public static final class layout {
  244.           public static final int notification_action=0x7f030000;
  245.           public static final int notification_action_tombstone=0x7f030001;

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:289: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  287.       );
  288.   
  289. >     assertAbout(javaSource()).that(source)
  290.           .withCompilerOptions("-Xlint:-processing")
  291.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:291: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  289.       assertAbout(javaSource()).that(source)
  290.           .withCompilerOptions("-Xlint:-processing")
  291. >         .processedWith(new ButterKnifeProcessor())
  292.           .compilesWithoutWarnings()
  293.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:290: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  288.   
  289.       assertAbout(javaSource()).that(source)
  290. >         .withCompilerOptions("-Xlint:-processing")
  291.           .processedWith(new ButterKnifeProcessor())
  292.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  290.           .withCompilerOptions("-Xlint:-processing")
  291.           .processedWith(new ButterKnifeProcessor())
  292. >         .compilesWithoutWarnings()
  293.           .and()
  294.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:293: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  291.           .processedWith(new ButterKnifeProcessor())
  292.           .compilesWithoutWarnings()
  293. >         .and()
  294.           .generatesSources(bindingSource);
  295.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  292.           .compilesWithoutWarnings()
  293.           .and()
  294. >         .generatesSources(bindingSource);
  295.     }
  296.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  287.       );
  288.   
  289. >     assertAbout(javaSource()).that(source)
  290.           .withCompilerOptions("-Xlint:-processing")
  291.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:290: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  288.   
  289.       assertAbout(javaSource()).that(source)
  290. >         .withCompilerOptions("-Xlint:-processing")
  291.           .processedWith(new ButterKnifeProcessor())
  292.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:303: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  301.       );
  302.   
  303. >     assertAbout(javaSource()).that(source)
  304.           .withCompilerOptions("-Xlint:-processing")
  305.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:305: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  303.       assertAbout(javaSource()).that(source)
  304.           .withCompilerOptions("-Xlint:-processing")
  305. >         .processedWith(new ButterKnifeProcessor())
  306.           .compilesWithoutWarnings()
  307.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:304: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  302.   
  303.       assertAbout(javaSource()).that(source)
  304. >         .withCompilerOptions("-Xlint:-processing")
  305.           .processedWith(new ButterKnifeProcessor())
  306.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:306: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  304.           .withCompilerOptions("-Xlint:-processing")
  305.           .processedWith(new ButterKnifeProcessor())
  306. >         .compilesWithoutWarnings()
  307.           .and()
  308.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:307: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  305.           .processedWith(new ButterKnifeProcessor())
  306.           .compilesWithoutWarnings()
  307. >         .and()
  308.           .generatesSources(bindingSource);
  309.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:308: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  306.           .compilesWithoutWarnings()
  307.           .and()
  308. >         .generatesSources(bindingSource);
  309.     }
  310.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:303: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  301.       );
  302.   
  303. >     assertAbout(javaSource()).that(source)
  304.           .withCompilerOptions("-Xlint:-processing")
  305.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:304: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  302.   
  303.       assertAbout(javaSource()).that(source)
  304. >         .withCompilerOptions("-Xlint:-processing")
  305.           .processedWith(new ButterKnifeProcessor())
  306.           .compilesWithoutWarnings()

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:253: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  251.           public static final int simple_list_item=0x7f030007;
  252.       }
  253. >     public static final class string {
  254.           public static final int app_name=0x7f040001;
  255.           public static final int by_jake_wharton=0x7f040002;

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:268: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  266.       assertAbout(javaSource()).that(source)
  267.           .processedWith(new ButterKnifeProcessor())
  268. >         .failsToCompile()
  269.           .withErrorContaining(
  270.               "@OnClick-annotated class incorrectly in Android framework package. (android.test.Test)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  267.           .processedWith(new ButterKnifeProcessor())
  268.           .failsToCompile()
  269. >         .withErrorContaining(
  270.               "@OnClick-annotated class incorrectly in Android framework package. (android.test.Test)")
  271.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:271: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  269.           .withErrorContaining(
  270.               "@OnClick-annotated class incorrectly in Android framework package. (android.test.Test)")
  271. >         .in(source).onLine(4);
  272.     }
  273.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:271: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  269.           .withErrorContaining(
  270.               "@OnClick-annotated class incorrectly in Android framework package. (android.test.Test)")
  271. >         .in(source).onLine(4);
  272.     }
  273.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:266: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  264.       );
  265.   
  266. >     assertAbout(javaSource()).that(source)
  267.           .processedWith(new ButterKnifeProcessor())
  268.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:267: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  265.   
  266.       assertAbout(javaSource()).that(source)
  267. >         .processedWith(new ButterKnifeProcessor())
  268.           .failsToCompile()
  269.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:266: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  264.       );
  265.   
  266. >     assertAbout(javaSource()).that(source)
  267.           .processedWith(new ButterKnifeProcessor())
  268.           .failsToCompile()

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:260: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  258.           public static final int status_bar_notification_info_overflow=0x7f040000;
  259.       }
  260. >     public static final class style {
  261.           public static final int TextAppearance_Compat_Notification=0x7f070000;
  262.           public static final int TextAppearance_Compat_Notification_Info=0x7f070001;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:275: warning: GRADUAL_DEREFERENCE
  dereference of pointer `$T2_122`.
  273.         result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,
  274.             "Bindings already cleared.");
  275. >       result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  276.         result.addCode("\n");
  277.         for (ViewBinding binding : viewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:283: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$111`,dereference of pointer `binding`.
  281.         }
  282.         for (FieldCollectionViewBinding binding : collectionBindings) {
  283. >         result.addStatement("target.$L = null", binding.name);
  284.         }
  285.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:271: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`,dereference of pointer `this`.
  269.       if (hasTargetField()) {
  270.         if (hasFieldBindings()) {
  271. >         result.addStatement("$T target = this.target", targetTypeName);
  272.         }
  273.         result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:273: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$33`.
  271.           result.addStatement("$T target = this.target", targetTypeName);
  272.         }
  273. >       result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,
  274.             "Bindings already cleared.");
  275.         result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:263: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$4`.
  261.     private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass) {
  262.       MethodSpec.Builder result = MethodSpec.methodBuilder("unbind")
  263. >         .addAnnotation(Override.class)
  264.           .addModifiers(PUBLIC);
  265.       if (!isFinal && parentBinding == null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:279: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$85`.
  277.         for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {
  279. >           result.addStatement("target.$L = null", binding.getFieldBinding().getName());
  280.           }
  281.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:265: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  263.           .addAnnotation(Override.class)
  264.           .addModifiers(PUBLIC);
  265. >     if (!isFinal && parentBinding == null) {
  266.         result.addAnnotation(CALL_SUPER);
  267.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:294: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  292.       }
  293.   
  294. >     if (parentBinding != null) {
  295.         result.addCode("\n");
  296.         result.addStatement("super.unbind()");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:275: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T5_122`.
  273.         result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,
  274.             "Bindings already cleared.");
  275. >       result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  276.         result.addCode("\n");
  277.         for (ViewBinding binding : viewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:278: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  276.         result.addCode("\n");
  277.         for (ViewBinding binding : viewBindings) {
  278. >         if (binding.getFieldBinding() != null) {
  279.             result.addStatement("target.$L = null", binding.getFieldBinding().getName());
  280.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:279: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  277.         for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {
  279. >           result.addStatement("target.$L = null", binding.getFieldBinding().getName());
  280.           }
  281.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:263: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  261.     private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass) {
  262.       MethodSpec.Builder result = MethodSpec.methodBuilder("unbind")
  263. >         .addAnnotation(Override.class)
  264.           .addModifiers(PUBLIC);
  265.       if (!isFinal && parentBinding == null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$101`.
  280.           }
  281.         }
  282. >       for (FieldCollectionViewBinding binding : collectionBindings) {
  283.           result.addStatement("target.$L = null", binding.name);
  284.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$130`.
  287.       if (hasMethodBindings()) {
  288.         result.addCode("\n");
  289. >       for (ViewBinding binding : viewBindings) {
  290.           addFieldAndUnbindStatement(bindingClass, result, binding);
  291.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:264: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  262.       MethodSpec.Builder result = MethodSpec.methodBuilder("unbind")
  263.           .addAnnotation(Override.class)
  264. >         .addModifiers(PUBLIC);
  265.       if (!isFinal && parentBinding == null) {
  266.         result.addAnnotation(CALL_SUPER);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:277: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`.
  275.         result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  276.         result.addCode("\n");
  277. >       for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {
  279.             result.addStatement("target.$L = null", binding.getFieldBinding().getName());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:279: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$88`.
  277.         for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {
  279. >           result.addStatement("target.$L = null", binding.getFieldBinding().getName());
  280.           }
  281.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:266: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  264.           .addModifiers(PUBLIC);
  265.       if (!isFinal && parentBinding == null) {
  266. >       result.addAnnotation(CALL_SUPER);
  267.       }
  268.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:271: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  269.       if (hasTargetField()) {
  270.         if (hasFieldBindings()) {
  271. >         result.addStatement("$T target = this.target", targetTypeName);
  272.         }
  273.         result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:273: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  271.           result.addStatement("$T target = this.target", targetTypeName);
  272.         }
  273. >       result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,
  274.             "Bindings already cleared.");
  275.         result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:276: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  274.             "Bindings already cleared.");
  275.         result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  276. >       result.addCode("\n");
  277.         for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:279: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  277.         for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {
  279. >           result.addStatement("target.$L = null", binding.getFieldBinding().getName());
  280.           }
  281.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:283: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  281.         }
  282.         for (FieldCollectionViewBinding binding : collectionBindings) {
  283. >         result.addStatement("target.$L = null", binding.name);
  284.         }
  285.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:288: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  286.   
  287.       if (hasMethodBindings()) {
  288. >       result.addCode("\n");
  289.         for (ViewBinding binding : viewBindings) {
  290.           addFieldAndUnbindStatement(bindingClass, result, binding);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:295: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  293.   
  294.       if (parentBinding != null) {
  295. >       result.addCode("\n");
  296.         result.addStatement("super.unbind()");
  297.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:296: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  294.       if (parentBinding != null) {
  295.         result.addCode("\n");
  296. >       result.addStatement("super.unbind()");
  297.       }
  298.       return result.build();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:298: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  296.         result.addStatement("super.unbind()");
  297.       }
  298. >     return result.build();
  299.     }
  300.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:282: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.collectionBindings`,dereference of pointer `this`.
  280.           }
  281.         }
  282. >       for (FieldCollectionViewBinding binding : collectionBindings) {
  283.           result.addStatement("target.$L = null", binding.name);
  284.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:277: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  275.         result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  276.         result.addCode("\n");
  277. >       for (ViewBinding binding : viewBindings) {
  278.           if (binding.getFieldBinding() != null) {
  279.             result.addStatement("target.$L = null", binding.getFieldBinding().getName());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  287.       if (hasMethodBindings()) {
  288.         result.addCode("\n");
  289. >       for (ViewBinding binding : viewBindings) {
  290.           addFieldAndUnbindStatement(bindingClass, result, binding);
  291.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  267.       }
  268.   
  269. >     if (hasTargetField()) {
  270.         if (hasFieldBindings()) {
  271.           result.addStatement("$T target = this.target", targetTypeName);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:270: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  268.   
  269.       if (hasTargetField()) {
  270. >       if (hasFieldBindings()) {
  271.           result.addStatement("$T target = this.target", targetTypeName);
  272.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:275: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  273.         result.addStatement("if (target == null) throw new $T($S)", IllegalStateException.class,
  274.             "Bindings already cleared.");
  275. >       result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  276.         result.addCode("\n");
  277.         for (ViewBinding binding : viewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  285.       }
  286.   
  287. >     if (hasMethodBindings()) {
  288.         result.addCode("\n");
  289.         for (ViewBinding binding : viewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:290: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  288.         result.addCode("\n");
  289.         for (ViewBinding binding : viewBindings) {
  290. >         addFieldAndUnbindStatement(bindingClass, result, binding);
  291.         }
  292.       }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:299: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  297.       );
  298.   
  299. >     assertAbout(javaSource()).that(source)
  300.           .withCompilerOptions("-Xlint:-processing")
  301.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:301: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  299.       assertAbout(javaSource()).that(source)
  300.           .withCompilerOptions("-Xlint:-processing")
  301. >         .processedWith(new ButterKnifeProcessor())
  302.           .compilesWithoutWarnings()
  303.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  298.   
  299.       assertAbout(javaSource()).that(source)
  300. >         .withCompilerOptions("-Xlint:-processing")
  301.           .processedWith(new ButterKnifeProcessor())
  302.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  300.           .withCompilerOptions("-Xlint:-processing")
  301.           .processedWith(new ButterKnifeProcessor())
  302. >         .compilesWithoutWarnings()
  303.           .and()
  304.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:303: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  301.           .processedWith(new ButterKnifeProcessor())
  302.           .compilesWithoutWarnings()
  303. >         .and()
  304.           .generatesSources(bindingSource);
  305.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:304: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  302.           .compilesWithoutWarnings()
  303.           .and()
  304. >         .generatesSources(bindingSource);
  305.     }
  306.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:299: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  297.       );
  298.   
  299. >     assertAbout(javaSource()).that(source)
  300.           .withCompilerOptions("-Xlint:-processing")
  301.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  298.   
  299.       assertAbout(javaSource()).that(source)
  300. >         .withCompilerOptions("-Xlint:-processing")
  301.           .processedWith(new ButterKnifeProcessor())
  302.           .compilesWithoutWarnings()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:317: warning: GRADUAL_DEREFERENCE
  dereference of pointer `ids`.
  315.       List<Object> views = new ArrayList<>(ids.length);
  316.       String who = "field '" + field.getName() + "'";
  317. >     for (int id : ids) {
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  319.         if (view != null) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:280: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$27`.
  278.         Type fieldType = field.getGenericType();
  279.         if (fieldType instanceof ParameterizedType) {
  280. >         Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];
  281.           // TODO real rawType impl!!!!
  282.           viewClass = (Class<?>) viewType;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:297: warning: GRADUAL_DEREFERENCE
  method call on pointer `android.view.View`.
  295.             + ')');
  296.       }
  297. >     if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  298.         throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:306: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindViews`.
  304.       }
  305.   
  306. >     int[] ids = bindViews.value();
  307.       if (ids.length == 0) {
  308.         throw new IllegalStateException("@BindViews must specify at least one ID. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:274: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldClass`.
  272.       Class<?> fieldClass = field.getType();
  273.       Class<?> viewClass;
  274. >     boolean isArray = fieldClass.isArray();
  275.       if (isArray) {
  276.         viewClass = fieldClass.getComponentType();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:276: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldClass`.
  274.       boolean isArray = fieldClass.isArray();
  275.       if (isArray) {
  276. >       viewClass = fieldClass.getComponentType();
  277.       } else if (fieldClass == List.class) {
  278.         Type fieldType = field.getGenericType();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:280: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldType`.
  278.         Type fieldType = field.getGenericType();
  279.         if (fieldType instanceof ParameterizedType) {
  280. >         Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];
  281.           // TODO real rawType impl!!!!
  282.           viewClass = (Class<?>) viewType;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:266: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  264.   
  265.     private static @Nullable Unbinder parseBindViews(Object target, Field field, View source) {
  266. >     BindViews bindViews = field.getAnnotation(BindViews.class);
  267.       if (bindViews == null) {
  268.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:272: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  270.       validateMember(field);
  271.   
  272. >     Class<?> fieldClass = field.getType();
  273.       Class<?> viewClass;
  274.       boolean isArray = fieldClass.isArray();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:278: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  276.         viewClass = fieldClass.getComponentType();
  277.       } else if (fieldClass == List.class) {
  278. >       Type fieldType = field.getGenericType();
  279.         if (fieldType instanceof ParameterizedType) {
  280.           Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  283.         } else {
  284.           throw new IllegalStateException("@BindViews List must have a generic component. ("
  285. >             + field.getDeclaringClass().getName()
  286.               + '.'
  287.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  285.               + field.getDeclaringClass().getName()
  286.               + '.'
  287. >             + field.getName()
  288.               + ')');
  289.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  290.       } else {
  291.         throw new IllegalStateException("@BindViews must be a List or array. ("
  292. >           + field.getDeclaringClass().getName()
  293.             + '.'
  294.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  292.             + field.getDeclaringClass().getName()
  293.             + '.'
  294. >           + field.getName()
  295.             + ')');
  296.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  298.         throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("
  300. >               + field.getDeclaringClass().getName()
  301.                 + '.'
  302.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  300.                 + field.getDeclaringClass().getName()
  301.                 + '.'
  302. >               + field.getName()
  303.                 + ')');
  304.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  307.       if (ids.length == 0) {
  308.         throw new IllegalStateException("@BindViews must specify at least one ID. ("
  309. >           + field.getDeclaringClass().getName()
  310.             + '.'
  311.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  309.             + field.getDeclaringClass().getName()
  310.             + '.'
  311. >           + field.getName()
  312.             + ')');
  313.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  314.   
  315.       List<Object> views = new ArrayList<>(ids.length);
  316. >     String who = "field '" + field.getName() + "'";
  317.       for (int id : ids) {
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:298: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$110`.
  296.       }
  297.       if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  298. >       throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("
  300.                 + field.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$114`.
  298.         throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("
  300. >               + field.getDeclaringClass().getName()
  301.                 + '.'
  302.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$117`.
  298.         throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("
  300. >               + field.getDeclaringClass().getName()
  301.                 + '.'
  302.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:300: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$124`.
  298.         throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("
  300. >               + field.getDeclaringClass().getName()
  301.                 + '.'
  302.                 + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$127`.
  300.                 + field.getDeclaringClass().getName()
  301.                 + '.'
  302. >               + field.getName()
  303.                 + ')');
  304.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$134`.
  300.                 + field.getDeclaringClass().getName()
  301.                 + '.'
  302. >               + field.getName()
  303.                 + ')');
  304.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$137`.
  300.                 + field.getDeclaringClass().getName()
  301.                 + '.'
  302. >               + field.getName()
  303.                 + ')');
  304.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$141`.
  300.                 + field.getDeclaringClass().getName()
  301.                 + '.'
  302. >               + field.getName()
  303.                 + ')');
  304.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:308: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$151`.
  306.       int[] ids = bindViews.value();
  307.       if (ids.length == 0) {
  308. >       throw new IllegalStateException("@BindViews must specify at least one ID. ("
  309.             + field.getDeclaringClass().getName()
  310.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$155`.
  307.       if (ids.length == 0) {
  308.         throw new IllegalStateException("@BindViews must specify at least one ID. ("
  309. >           + field.getDeclaringClass().getName()
  310.             + '.'
  311.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$158`.
  307.       if (ids.length == 0) {
  308.         throw new IllegalStateException("@BindViews must specify at least one ID. ("
  309. >           + field.getDeclaringClass().getName()
  310.             + '.'
  311.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:309: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$165`.
  307.       if (ids.length == 0) {
  308.         throw new IllegalStateException("@BindViews must specify at least one ID. ("
  309. >           + field.getDeclaringClass().getName()
  310.             + '.'
  311.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$168`.
  309.             + field.getDeclaringClass().getName()
  310.             + '.'
  311. >           + field.getName()
  312.             + ')');
  313.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$175`.
  309.             + field.getDeclaringClass().getName()
  310.             + '.'
  311. >           + field.getName()
  312.             + ')');
  313.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$178`.
  309.             + field.getDeclaringClass().getName()
  310.             + '.'
  311. >           + field.getName()
  312.             + ')');
  313.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$182`.
  309.             + field.getDeclaringClass().getName()
  310.             + '.'
  311. >           + field.getName()
  312.             + ')');
  313.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:315: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$186`.
  313.       }
  314.   
  315. >     List<Object> views = new ArrayList<>(ids.length);
  316.       String who = "field '" + field.getName() + "'";
  317.       for (int id : ids) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$191`.
  314.   
  315.       List<Object> views = new ArrayList<>(ids.length);
  316. >     String who = "field '" + field.getName() + "'";
  317.       for (int id : ids) {
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$195`.
  314.   
  315.       List<Object> views = new ArrayList<>(ids.length);
  316. >     String who = "field '" + field.getName() + "'";
  317.       for (int id : ids) {
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$202`.
  314.   
  315.       List<Object> views = new ArrayList<>(ids.length);
  316. >     String who = "field '" + field.getName() + "'";
  317.       for (int id : ids) {
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:316: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$205`.
  314.   
  315.       List<Object> views = new ArrayList<>(ids.length);
  316. >     String who = "field '" + field.getName() + "'";
  317.       for (int id : ids) {
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:333: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$249`.
  331.   
  332.       trySet(field, target, value);
  333. >     return new FieldUnbinder(target, field);
  334.     }
  335.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:284: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  282.           viewClass = (Class<?>) viewType;
  283.         } else {
  284. >         throw new IllegalStateException("@BindViews List must have a generic component. ("
  285.               + field.getDeclaringClass().getName()
  286.               + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  283.         } else {
  284.           throw new IllegalStateException("@BindViews List must have a generic component. ("
  285. >             + field.getDeclaringClass().getName()
  286.               + '.'
  287.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  283.         } else {
  284.           throw new IllegalStateException("@BindViews List must have a generic component. ("
  285. >             + field.getDeclaringClass().getName()
  286.               + '.'
  287.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$47`.
  283.         } else {
  284.           throw new IllegalStateException("@BindViews List must have a generic component. ("
  285. >             + field.getDeclaringClass().getName()
  286.               + '.'
  287.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  285.               + field.getDeclaringClass().getName()
  286.               + '.'
  287. >             + field.getName()
  288.               + ')');
  289.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  285.               + field.getDeclaringClass().getName()
  286.               + '.'
  287. >             + field.getName()
  288.               + ')');
  289.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  285.               + field.getDeclaringClass().getName()
  286.               + '.'
  287. >             + field.getName()
  288.               + ')');
  289.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  285.               + field.getDeclaringClass().getName()
  286.               + '.'
  287. >             + field.getName()
  288.               + ')');
  289.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:291: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$68`.
  289.         }
  290.       } else {
  291. >       throw new IllegalStateException("@BindViews must be a List or array. ("
  292.             + field.getDeclaringClass().getName()
  293.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$72`.
  290.       } else {
  291.         throw new IllegalStateException("@BindViews must be a List or array. ("
  292. >           + field.getDeclaringClass().getName()
  293.             + '.'
  294.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$75`.
  290.       } else {
  291.         throw new IllegalStateException("@BindViews must be a List or array. ("
  292. >           + field.getDeclaringClass().getName()
  293.             + '.'
  294.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:292: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$82`.
  290.       } else {
  291.         throw new IllegalStateException("@BindViews must be a List or array. ("
  292. >           + field.getDeclaringClass().getName()
  293.             + '.'
  294.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$85`.
  292.             + field.getDeclaringClass().getName()
  293.             + '.'
  294. >           + field.getName()
  295.             + ')');
  296.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$92`.
  292.             + field.getDeclaringClass().getName()
  293.             + '.'
  294. >           + field.getName()
  295.             + ')');
  296.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$95`.
  292.             + field.getDeclaringClass().getName()
  293.             + '.'
  294. >           + field.getName()
  295.             + ')');
  296.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:294: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$99`.
  292.             + field.getDeclaringClass().getName()
  293.             + '.'
  294. >           + field.getName()
  295.             + ')');
  296.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:297: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewClass`.
  295.             + ')');
  296.       }
  297. >     if (!View.class.isAssignableFrom(viewClass) && !viewClass.isInterface()) {
  298.         throw new IllegalStateException(
  299.             "@BindViews List or array type must extend from View or be an interface. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:320: warning: GRADUAL_DEREFERENCE
  method call on pointer `views`.
  318.         Object view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  319.         if (view != null) {
  320. >         views.add(view);
  321.         }
  322.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:326: warning: GRADUAL_DEREFERENCE
  method call on pointer `views`.
  324.       Object value;
  325.       if (isArray) {
  326. >       Object[] viewArray = (Object[]) Array.newInstance(viewClass, views.size());
  327.         value = views.toArray(viewArray);
  328.       } else {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:327: warning: GRADUAL_DEREFERENCE
  method call on pointer `views`.
  325.       if (isArray) {
  326.         Object[] viewArray = (Object[]) Array.newInstance(viewClass, views.size());
  327. >       value = views.toArray(viewArray);
  328.       } else {
  329.         value = views;

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:269: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  267.           public static final int Widget_Compat_NotificationActionText=0x7f070005;
  268.       }
  269. >     public static final class styleable {
  270.           /** Attributes that can be used with a ColorStateListItem.
  271.              <p>Includes the following attributes:</p>

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:287: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  285.       assertAbout(javaSource()).that(source)
  286.           .processedWith(new ButterKnifeProcessor())
  287. >         .failsToCompile()
  288.           .withErrorContaining("@OnClick methods must have a 'void' return type. (test.Test.doStuff)")
  289.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:288: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  286.           .processedWith(new ButterKnifeProcessor())
  287.           .failsToCompile()
  288. >         .withErrorContaining("@OnClick methods must have a 'void' return type. (test.Test.doStuff)")
  289.           .in(source).onLine(5);
  290.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  287.           .failsToCompile()
  288.           .withErrorContaining("@OnClick methods must have a 'void' return type. (test.Test.doStuff)")
  289. >         .in(source).onLine(5);
  290.     }
  291.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:289: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  287.           .failsToCompile()
  288.           .withErrorContaining("@OnClick methods must have a 'void' return type. (test.Test.doStuff)")
  289. >         .in(source).onLine(5);
  290.     }
  291.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  283.       );
  284.   
  285. >     assertAbout(javaSource()).that(source)
  286.           .processedWith(new ButterKnifeProcessor())
  287.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:286: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  284.   
  285.       assertAbout(javaSource()).that(source)
  286. >         .processedWith(new ButterKnifeProcessor())
  287.           .failsToCompile()
  288.           .withErrorContaining("@OnClick methods must have a 'void' return type. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:285: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  283.       );
  284.   
  285. >     assertAbout(javaSource()).that(source)
  286.           .processedWith(new ButterKnifeProcessor())
  287.           .failsToCompile()

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:284: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  282.              @see #ColorStateListItem_android_color
  283.            */
  284. >         public static final int[] ColorStateListItem = {
  285.               0x010101a5, 0x0101031f, 0x7f010000
  286.           };

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:494: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  492.              @see #FontFamilyFont_ttcIndex
  493.            */
  494. >         public static final int[] FontFamilyFont = {
  495.               0x01010532, 0x01010533, 0x0101053f, 0x0101056f,
  496.               0x01010570, 0x7f010007, 0x7f010008, 0x7f010009,

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:657: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$25`.
  655.              @see #GradientColor_android_type
  656.            */
  657. >         public static final int[] GradientColor = {
  658.               0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2,
  659.               0x010101a3, 0x010101a4, 0x01010201, 0x0101020b,

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:789: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  787.              @see #GradientColorItem_android_offset
  788.            */
  789. >         public static final int[] GradientColorItem = {
  790.               0x010101a5, 0x01010514
  791.           };

butterknife-integration-test/build/generated/not_namespaced_r_class_sources/reflectRelease/processReflectReleaseResources/r/com/example/butterknife/R.java:338: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  336.              @see #FontFamily_fontProviderQuery
  337.            */
  338. >         public static final int[] FontFamily = {
  339.               0x7f010001, 0x7f010002, 0x7f010003, 0x7f010004,
  340.               0x7f010005, 0x7f010006

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:305: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  303.       assertAbout(javaSource()).that(source)
  304.           .processedWith(new ButterKnifeProcessor())
  305. >         .failsToCompile()
  306.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  307.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:306: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  304.           .processedWith(new ButterKnifeProcessor())
  305.           .failsToCompile()
  306. >         .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  307.           .in(source).onLine(5);
  308.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:307: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  305.           .failsToCompile()
  306.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  307. >         .in(source).onLine(5);
  308.     }
  309.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:307: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  305.           .failsToCompile()
  306.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  307. >         .in(source).onLine(5);
  308.     }
  309.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:303: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  301.       );
  302.   
  303. >     assertAbout(javaSource()).that(source)
  304.           .processedWith(new ButterKnifeProcessor())
  305.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:304: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  302.   
  303.       assertAbout(javaSource()).that(source)
  304. >         .processedWith(new ButterKnifeProcessor())
  305.           .failsToCompile()
  306.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:303: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  301.       );
  302.   
  303. >     assertAbout(javaSource()).that(source)
  304.           .processedWith(new ButterKnifeProcessor())
  305.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:338: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  336.       );
  337.   
  338. >     assertAbout(javaSource()).that(source)
  339.           .withCompilerOptions("-Xlint:-processing")
  340.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:340: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  338.       assertAbout(javaSource()).that(source)
  339.           .withCompilerOptions("-Xlint:-processing")
  340. >         .processedWith(new ButterKnifeProcessor())
  341.           // found raw type: test.Test
  342.           //   missing type arguments for generic class test.Test<T>

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:339: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  337.   
  338.       assertAbout(javaSource()).that(source)
  339. >         .withCompilerOptions("-Xlint:-processing")
  340.           .processedWith(new ButterKnifeProcessor())
  341.           // found raw type: test.Test

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:343: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  341.           // found raw type: test.Test
  342.           //   missing type arguments for generic class test.Test<T>
  343. >         .compilesWithoutError()
  344.           .and()
  345.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:344: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  342.           //   missing type arguments for generic class test.Test<T>
  343.           .compilesWithoutError()
  344. >         .and()
  345.           .generatesSources(bindingSource);
  346.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:345: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  343.           .compilesWithoutError()
  344.           .and()
  345. >         .generatesSources(bindingSource);
  346.     }
  347.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:338: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  336.       );
  337.   
  338. >     assertAbout(javaSource()).that(source)
  339.           .withCompilerOptions("-Xlint:-processing")
  340.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:339: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  337.   
  338.       assertAbout(javaSource()).that(source)
  339. >         .withCompilerOptions("-Xlint:-processing")
  340.           .processedWith(new ButterKnifeProcessor())
  341.           // found raw type: test.Test

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:330: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$101`.
  328.           TypeName listenerClassName = bestGuess(listenerClass.type());
  329.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330. >         result.addField(listenerClassName, listenerField, PRIVATE);
  331.         }
  332.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:335: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$116`.
  333.         String targetType = listenerClass.targetType();
  334.         if (!VIEW_TYPE.equals(targetType)) {
  335. >         unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
  336.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  337.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:336: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$116`.
  334.         if (!VIEW_TYPE.equals(targetType)) {
  335.           unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
  336. >             fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  337.         } else {
  338.           unbindMethod.addStatement("$N.$N($N)", fieldName,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:338: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$135`.
  336.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  337.         } else {
  338. >         unbindMethod.addStatement("$N.$N($N)", fieldName,
  339.               removerOrSetter(listenerClass, requiresRemoval), listenerField);
  340.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:339: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$135`.
  337.         } else {
  338.           unbindMethod.addStatement("$N.$N($N)", fieldName,
  339. >             removerOrSetter(listenerClass, requiresRemoval), listenerField);
  340.         }
  341.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:343: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$151`.
  341.   
  342.         if (requiresRemoval) {
  343. >         unbindMethod.addStatement("$N = null", listenerField);
  344.         }
  345.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:347: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$158`.
  345.       }
  346.   
  347. >     unbindMethod.addStatement("$N = null", fieldName);
  348.   
  349.       if (needsNullChecked) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:313: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  311.           bindings.isBoundToRoot()
  312.               ? "viewSource"
  313. >             : "view" + Integer.toHexString(bindings.getId().value);
  314.       result.addField(VIEW, fieldName, PRIVATE);
  315.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:314: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$32`.
  312.               ? "viewSource"
  313.               : "view" + Integer.toHexString(bindings.getId().value);
  314. >     result.addField(VIEW, fieldName, PRIVATE);
  315.   
  316.       // We only need to emit the null check if there are zero required bindings.

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:319: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$49`.
  317.       boolean needsNullChecked = bindings.getRequiredBindings().isEmpty();
  318.       if (needsNullChecked) {
  319. >       unbindMethod.beginControlFlow("if ($N != null)", fieldName);
  320.       }
  321.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `""`.
  323.         // We need to keep a reference to the listener
  324.         // in case we need to unbind it via a remove method.
  325. >       boolean requiresRemoval = !"".equals(listenerClass.remover());
  326.         String listenerField = "null";
  327.         if (requiresRemoval) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:334: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.view.View"`.
  332.   
  333.         String targetType = listenerClass.targetType();
  334. >       if (!VIEW_TYPE.equals(targetType)) {
  335.           unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
  336.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:305: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  303.       // Only add fields to the binding if there are method bindings.
  304.       Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
  305. >         bindings.getMethodBindings();
  306.       if (classMethodBindings.isEmpty()) {
  307.         return;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  309.   
  310.       String fieldName =
  311. >         bindings.isBoundToRoot()
  312.               ? "viewSource"
  313.               : "view" + Integer.toHexString(bindings.getId().value);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:313: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  311.           bindings.isBoundToRoot()
  312.               ? "viewSource"
  313. >             : "view" + Integer.toHexString(bindings.getId().value);
  314.       result.addField(VIEW, fieldName, PRIVATE);
  315.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:317: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  315.   
  316.       // We only need to emit the null check if there are zero required bindings.
  317. >     boolean needsNullChecked = bindings.getRequiredBindings().isEmpty();
  318.       if (needsNullChecked) {
  319.         unbindMethod.beginControlFlow("if ($N != null)", fieldName);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:306: warning: GRADUAL_DEREFERENCE
  method call on pointer `classMethodBindings`.
  304.       Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
  305.           bindings.getMethodBindings();
  306. >     if (classMethodBindings.isEmpty()) {
  307.         return;
  308.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:322: warning: GRADUAL_DEREFERENCE
  method call on pointer `classMethodBindings`.
  320.       }
  321.   
  322. >     for (ListenerClass listenerClass : classMethodBindings.keySet()) {
  323.         // We need to keep a reference to the listener
  324.         // in case we need to unbind it via a remove method.

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:329: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClassName`.
  327.         if (requiresRemoval) {
  328.           TypeName listenerClassName = bestGuess(listenerClass.type());
  329. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330.           result.addField(listenerClassName, listenerField, PRIVATE);
  331.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClass`.
  323.         // We need to keep a reference to the listener
  324.         // in case we need to unbind it via a remove method.
  325. >       boolean requiresRemoval = !"".equals(listenerClass.remover());
  326.         String listenerField = "null";
  327.         if (requiresRemoval) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:328: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClass`.
  326.         String listenerField = "null";
  327.         if (requiresRemoval) {
  328. >         TypeName listenerClassName = bestGuess(listenerClass.type());
  329.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330.           result.addField(listenerClassName, listenerField, PRIVATE);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:333: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClass`.
  331.         }
  332.   
  333. >       String targetType = listenerClass.targetType();
  334.         if (!VIEW_TYPE.equals(targetType)) {
  335.           unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  309.   
  310.       String fieldName =
  311. >         bindings.isBoundToRoot()
  312.               ? "viewSource"
  313.               : "view" + Integer.toHexString(bindings.getId().value);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:313: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  311.           bindings.isBoundToRoot()
  312.               ? "viewSource"
  313. >             : "view" + Integer.toHexString(bindings.getId().value);
  314.       result.addField(VIEW, fieldName, PRIVATE);
  315.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:313: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  311.           bindings.isBoundToRoot()
  312.               ? "viewSource"
  313. >             : "view" + Integer.toHexString(bindings.getId().value);
  314.       result.addField(VIEW, fieldName, PRIVATE);
  315.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:317: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  315.   
  316.       // We only need to emit the null check if there are zero required bindings.
  317. >     boolean needsNullChecked = bindings.getRequiredBindings().isEmpty();
  318.       if (needsNullChecked) {
  319.         unbindMethod.beginControlFlow("if ($N != null)", fieldName);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:322: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$58`.
  320.       }
  321.   
  322. >     for (ListenerClass listenerClass : classMethodBindings.keySet()) {
  323.         // We need to keep a reference to the listener
  324.         // in case we need to unbind it via a remove method.

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:322: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$61`.
  320.       }
  321.   
  322. >     for (ListenerClass listenerClass : classMethodBindings.keySet()) {
  323.         // We need to keep a reference to the listener
  324.         // in case we need to unbind it via a remove method.

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:329: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$84`.
  327.         if (requiresRemoval) {
  328.           TypeName listenerClassName = bestGuess(listenerClass.type());
  329. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330.           result.addField(listenerClassName, listenerField, PRIVATE);
  331.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:329: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$89`.
  327.         if (requiresRemoval) {
  328.           TypeName listenerClassName = bestGuess(listenerClass.type());
  329. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330.           result.addField(listenerClassName, listenerField, PRIVATE);
  331.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:329: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$97`.
  327.         if (requiresRemoval) {
  328.           TypeName listenerClassName = bestGuess(listenerClass.type());
  329. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330.           result.addField(listenerClassName, listenerField, PRIVATE);
  331.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:314: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  312.               ? "viewSource"
  313.               : "view" + Integer.toHexString(bindings.getId().value);
  314. >     result.addField(VIEW, fieldName, PRIVATE);
  315.   
  316.       // We only need to emit the null check if there are zero required bindings.

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:330: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  328.           TypeName listenerClassName = bestGuess(listenerClass.type());
  329.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  330. >         result.addField(listenerClassName, listenerField, PRIVATE);
  331.         }
  332.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:336: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  334.         if (!VIEW_TYPE.equals(targetType)) {
  335.           unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
  336. >             fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  337.         } else {
  338.           unbindMethod.addStatement("$N.$N($N)", fieldName,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:339: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  337.         } else {
  338.           unbindMethod.addStatement("$N.$N($N)", fieldName,
  339. >             removerOrSetter(listenerClass, requiresRemoval), listenerField);
  340.         }
  341.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:319: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbindMethod`.
  317.       boolean needsNullChecked = bindings.getRequiredBindings().isEmpty();
  318.       if (needsNullChecked) {
  319. >       unbindMethod.beginControlFlow("if ($N != null)", fieldName);
  320.       }
  321.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:335: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbindMethod`.
  333.         String targetType = listenerClass.targetType();
  334.         if (!VIEW_TYPE.equals(targetType)) {
  335. >         unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
  336.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  337.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:338: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbindMethod`.
  336.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  337.         } else {
  338. >         unbindMethod.addStatement("$N.$N($N)", fieldName,
  339.               removerOrSetter(listenerClass, requiresRemoval), listenerField);
  340.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:343: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbindMethod`.
  341.   
  342.         if (requiresRemoval) {
  343. >         unbindMethod.addStatement("$N = null", listenerField);
  344.         }
  345.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:347: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbindMethod`.
  345.       }
  346.   
  347. >     unbindMethod.addStatement("$N = null", fieldName);
  348.   
  349.       if (needsNullChecked) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:350: warning: GRADUAL_DEREFERENCE
  method call on pointer `unbindMethod`.
  348.   
  349.       if (needsNullChecked) {
  350. >       unbindMethod.endControlFlow();
  351.       }
  352.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:345: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  343.       );
  344.   
  345. >     assertAbout(javaSource()).that(source)
  346.           .withCompilerOptions("-Xlint:-processing")
  347.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:347: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  345.       assertAbout(javaSource()).that(source)
  346.           .withCompilerOptions("-Xlint:-processing")
  347. >         .processedWith(new ButterKnifeProcessor())
  348.           .compilesWithoutWarnings()
  349.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:346: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  344.   
  345.       assertAbout(javaSource()).that(source)
  346. >         .withCompilerOptions("-Xlint:-processing")
  347.           .processedWith(new ButterKnifeProcessor())
  348.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:348: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  346.           .withCompilerOptions("-Xlint:-processing")
  347.           .processedWith(new ButterKnifeProcessor())
  348. >         .compilesWithoutWarnings()
  349.           .and()
  350.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:349: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  347.           .processedWith(new ButterKnifeProcessor())
  348.           .compilesWithoutWarnings()
  349. >         .and()
  350.           .generatesSources(bindingSource);
  351.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:350: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  348.           .compilesWithoutWarnings()
  349.           .and()
  350. >         .generatesSources(bindingSource);
  351.     }
  352.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:345: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  343.       );
  344.   
  345. >     assertAbout(javaSource()).that(source)
  346.           .withCompilerOptions("-Xlint:-processing")
  347.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:346: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  344.   
  345.       assertAbout(javaSource()).that(source)
  346. >         .withCompilerOptions("-Xlint:-processing")
  347.           .processedWith(new ButterKnifeProcessor())
  348.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:323: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  321.       assertAbout(javaSource()).that(source)
  322.           .processedWith(new ButterKnifeProcessor())
  323. >         .failsToCompile()
  324.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  325.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:324: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  322.           .processedWith(new ButterKnifeProcessor())
  323.           .failsToCompile()
  324. >         .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  325.           .in(source).onLine(5);
  326.     }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  323.           .failsToCompile()
  324.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  325. >         .in(source).onLine(5);
  326.     }
  327.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:325: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  323.           .failsToCompile()
  324.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
  325. >         .in(source).onLine(5);
  326.     }
  327.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:321: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  319.       );
  320.   
  321. >     assertAbout(javaSource()).that(source)
  322.           .processedWith(new ButterKnifeProcessor())
  323.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:322: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  320.   
  321.       assertAbout(javaSource()).that(source)
  322. >         .processedWith(new ButterKnifeProcessor())
  323.           .failsToCompile()
  324.           .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:321: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  319.       );
  320.   
  321. >     assertAbout(javaSource()).that(source)
  322.           .processedWith(new ButterKnifeProcessor())
  323.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:354: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  352.       );
  353.   
  354. >     assertAbout(javaSource()).that(source)
  355.           .withCompilerOptions("-Xlint:-processing")
  356.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  354.       assertAbout(javaSource()).that(source)
  355.           .withCompilerOptions("-Xlint:-processing")
  356. >         .processedWith(new ButterKnifeProcessor())
  357.           .compilesWithoutWarnings()
  358.           .and()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:355: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  353.   
  354.       assertAbout(javaSource()).that(source)
  355. >         .withCompilerOptions("-Xlint:-processing")
  356.           .processedWith(new ButterKnifeProcessor())
  357.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:357: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  355.           .withCompilerOptions("-Xlint:-processing")
  356.           .processedWith(new ButterKnifeProcessor())
  357. >         .compilesWithoutWarnings()
  358.           .and()
  359.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:358: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  356.           .processedWith(new ButterKnifeProcessor())
  357.           .compilesWithoutWarnings()
  358. >         .and()
  359.           .generatesSources(bindingSource);
  360.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:359: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  357.           .compilesWithoutWarnings()
  358.           .and()
  359. >         .generatesSources(bindingSource);
  360.     }
  361.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  352.       );
  353.   
  354. >     assertAbout(javaSource()).that(source)
  355.           .withCompilerOptions("-Xlint:-processing")
  356.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:355: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  353.   
  354.       assertAbout(javaSource()).that(source)
  355. >         .withCompilerOptions("-Xlint:-processing")
  356.           .processedWith(new ButterKnifeProcessor())
  357.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:369: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$16`.
  367.       );
  368.   
  369. >     assertAbout(javaSources()).that(asList(source, FINAL_R))
  370.           .withCompilerOptions("-Xlint:-processing")
  371.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:369: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  367.       );
  368.   
  369. >     assertAbout(javaSources()).that(asList(source, FINAL_R))
  370.           .withCompilerOptions("-Xlint:-processing")
  371.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  368.   
  369.       assertAbout(javaSources()).that(asList(source, FINAL_R))
  370. >         .withCompilerOptions("-Xlint:-processing")
  371.           .processedWith(new ButterKnifeProcessor())
  372.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:371: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  369.       assertAbout(javaSources()).that(asList(source, FINAL_R))
  370.           .withCompilerOptions("-Xlint:-processing")
  371. >         .processedWith(new ButterKnifeProcessor())
  372.           .compilesWithoutWarnings()
  373.           .and()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  368.   
  369.       assertAbout(javaSources()).that(asList(source, FINAL_R))
  370. >         .withCompilerOptions("-Xlint:-processing")
  371.           .processedWith(new ButterKnifeProcessor())
  372.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:372: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  370.           .withCompilerOptions("-Xlint:-processing")
  371.           .processedWith(new ButterKnifeProcessor())
  372. >         .compilesWithoutWarnings()
  373.           .and()
  374.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/RClassTest.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  371.           .processedWith(new ButterKnifeProcessor())
  372.           .compilesWithoutWarnings()
  373. >         .and()
  374.           .generatesSources(bindingSource);
  375.     }

butterknife-runtime/src/test/java/butterknife/RClassTest.java:374: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  372.           .compilesWithoutWarnings()
  373.           .and()
  374. >         .generatesSources(bindingSource);
  375.     }
  376.   

butterknife-runtime/src/test/java/butterknife/RClassTest.java:369: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  367.       );
  368.   
  369. >     assertAbout(javaSources()).that(asList(source, FINAL_R))
  370.           .withCompilerOptions("-Xlint:-processing")
  371.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:341: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  339.       assertAbout(javaSource()).that(source)
  340.           .processedWith(new ButterKnifeProcessor())
  341. >         .failsToCompile()
  342.           .withErrorContaining(""
  343.               + "Unable to match @OnClick method arguments. (test.Test.doStuff)\n"

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:342: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  340.           .processedWith(new ButterKnifeProcessor())
  341.           .failsToCompile()
  342. >         .withErrorContaining(""
  343.               + "Unable to match @OnClick method arguments. (test.Test.doStuff)\n"
  344.               + "  \n"

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:353: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  351.               + "  \n"
  352.               + "  These may be listed in any order but will be searched for from top to bottom.")
  353. >         .in(source).onLine(5);
  354.     }
  355.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:353: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  351.               + "  \n"
  352.               + "  These may be listed in any order but will be searched for from top to bottom.")
  353. >         .in(source).onLine(5);
  354.     }
  355.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:339: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  337.       );
  338.   
  339. >     assertAbout(javaSource()).that(source)
  340.           .processedWith(new ButterKnifeProcessor())
  341.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:340: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  338.   
  339.       assertAbout(javaSource()).that(source)
  340. >         .processedWith(new ButterKnifeProcessor())
  341.           .failsToCompile()
  342.           .withErrorContaining(""

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:339: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  337.       );
  338.   
  339. >     assertAbout(javaSource()).that(source)
  340.           .processedWith(new ButterKnifeProcessor())
  341.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:343: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindAnim`.
  341.       validateMember(field);
  342.   
  343. >     int id = bindAnim.value();
  344.       Context context = source.getContext();
  345.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:337: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  335.   
  336.     private static @Nullable Unbinder parseBindAnim(Object target, Field field, View source) {
  337. >     BindAnim bindAnim = field.getAnnotation(BindAnim.class);
  338.       if (bindAnim == null) {
  339.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:347: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  345.   
  346.       Object value;
  347. >     Class<?> fieldType = field.getType();
  348.       if (fieldType == Animation.class) {
  349.         value = AnimationUtils.loadAnimation(context, id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:352: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  350.       } else {
  351.         throw new IllegalStateException("@BindAnim field type must be 'Animation'. ("
  352. >           + field.getDeclaringClass().getName()
  353.             + '.'
  354.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  352.             + field.getDeclaringClass().getName()
  353.             + '.'
  354. >           + field.getName()
  355.             + ')');
  356.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:351: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  349.         value = AnimationUtils.loadAnimation(context, id);
  350.       } else {
  351. >       throw new IllegalStateException("@BindAnim field type must be 'Animation'. ("
  352.             + field.getDeclaringClass().getName()
  353.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:352: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  350.       } else {
  351.         throw new IllegalStateException("@BindAnim field type must be 'Animation'. ("
  352. >           + field.getDeclaringClass().getName()
  353.             + '.'
  354.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:352: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  350.       } else {
  351.         throw new IllegalStateException("@BindAnim field type must be 'Animation'. ("
  352. >           + field.getDeclaringClass().getName()
  353.             + '.'
  354.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:352: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  350.       } else {
  351.         throw new IllegalStateException("@BindAnim field type must be 'Animation'. ("
  352. >           + field.getDeclaringClass().getName()
  353.             + '.'
  354.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  352.             + field.getDeclaringClass().getName()
  353.             + '.'
  354. >           + field.getName()
  355.             + ')');
  356.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  352.             + field.getDeclaringClass().getName()
  353.             + '.'
  354. >           + field.getName()
  355.             + ')');
  356.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  352.             + field.getDeclaringClass().getName()
  353.             + '.'
  354. >           + field.getName()
  355.             + ')');
  356.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:354: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  352.             + field.getDeclaringClass().getName()
  353.             + '.'
  354. >           + field.getName()
  355.             + ')');
  356.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:344: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  342.   
  343.       int id = bindAnim.value();
  344. >     Context context = source.getContext();
  345.   
  346.       Object value;

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:390: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  388.       );
  389.   
  390. >     assertAbout(javaSource()).that(source)
  391.           .withCompilerOptions("-Xlint:-processing")
  392.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:392: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  390.       assertAbout(javaSource()).that(source)
  391.           .withCompilerOptions("-Xlint:-processing")
  392. >         .processedWith(new ButterKnifeProcessor())
  393.           .compilesWithoutWarnings()
  394.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  389.   
  390.       assertAbout(javaSource()).that(source)
  391. >         .withCompilerOptions("-Xlint:-processing")
  392.           .processedWith(new ButterKnifeProcessor())
  393.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  391.           .withCompilerOptions("-Xlint:-processing")
  392.           .processedWith(new ButterKnifeProcessor())
  393. >         .compilesWithoutWarnings()
  394.           .and()
  395.           .generatesSources( bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:394: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  392.           .processedWith(new ButterKnifeProcessor())
  393.           .compilesWithoutWarnings()
  394. >         .and()
  395.           .generatesSources( bindingSource);
  396.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  393.           .compilesWithoutWarnings()
  394.           .and()
  395. >         .generatesSources( bindingSource);
  396.     }
  397.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:390: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  388.       );
  389.   
  390. >     assertAbout(javaSource()).that(source)
  391.           .withCompilerOptions("-Xlint:-processing")
  392.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  389.   
  390.       assertAbout(javaSource()).that(source)
  391. >         .withCompilerOptions("-Xlint:-processing")
  392.           .processedWith(new ButterKnifeProcessor())
  393.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:392: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  390.       );
  391.   
  392. >     assertAbout(javaSource()).that(source)
  393.           .withCompilerOptions("-Xlint:-processing")
  394.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:394: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  392.       assertAbout(javaSource()).that(source)
  393.           .withCompilerOptions("-Xlint:-processing")
  394. >         .processedWith(new ButterKnifeProcessor())
  395.           // found raw type: test.Test
  396.           //   missing type arguments for generic class test.Test<T>

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  391.   
  392.       assertAbout(javaSource()).that(source)
  393. >         .withCompilerOptions("-Xlint:-processing")
  394.           .processedWith(new ButterKnifeProcessor())
  395.           // found raw type: test.Test

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  395.           // found raw type: test.Test
  396.           //   missing type arguments for generic class test.Test<T>
  397. >         .compilesWithoutError()
  398.           .and()
  399.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  396.           //   missing type arguments for generic class test.Test<T>
  397.           .compilesWithoutError()
  398. >         .and()
  399.           .generatesSources(bindingSource);
  400.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:399: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  397.           .compilesWithoutError()
  398.           .and()
  399. >         .generatesSources(bindingSource);
  400.     }
  401.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:392: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  390.       );
  391.   
  392. >     assertAbout(javaSource()).that(source)
  393.           .withCompilerOptions("-Xlint:-processing")
  394.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  391.   
  392.       assertAbout(javaSource()).that(source)
  393. >         .withCompilerOptions("-Xlint:-processing")
  394.           .processedWith(new ButterKnifeProcessor())
  395.           // found raw type: test.Test

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:356: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClass`.
  354.     private String removerOrSetter(ListenerClass listenerClass, boolean requiresRemoval) {
  355.       return requiresRemoval
  356. >         ? listenerClass.remover()
  357.           : listenerClass.setter();
  358.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:357: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClass`.
  355.       return requiresRemoval
  356.           ? listenerClass.remover()
  357. >         : listenerClass.setter();
  358.     }
  359.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  368.       assertAbout(javaSource()).that(source)
  369.           .processedWith(new ButterKnifeProcessor())
  370. >         .failsToCompile()
  371.           .withErrorContaining(
  372.               "@OnClick methods can have at most 1 parameter(s). (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:371: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  369.           .processedWith(new ButterKnifeProcessor())
  370.           .failsToCompile()
  371. >         .withErrorContaining(
  372.               "@OnClick methods can have at most 1 parameter(s). (test.Test.doStuff)")
  373.           .in(source).onLine(6);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  371.           .withErrorContaining(
  372.               "@OnClick methods can have at most 1 parameter(s). (test.Test.doStuff)")
  373. >         .in(source).onLine(6);
  374.     }
  375.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  371.           .withErrorContaining(
  372.               "@OnClick methods can have at most 1 parameter(s). (test.Test.doStuff)")
  373. >         .in(source).onLine(6);
  374.     }
  375.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:368: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  366.       );
  367.   
  368. >     assertAbout(javaSource()).that(source)
  369.           .processedWith(new ButterKnifeProcessor())
  370.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:369: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  367.   
  368.       assertAbout(javaSource()).that(source)
  369. >         .processedWith(new ButterKnifeProcessor())
  370.           .failsToCompile()
  371.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:368: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  366.       );
  367.   
  368. >     assertAbout(javaSource()).that(source)
  369.           .processedWith(new ButterKnifeProcessor())
  370.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:384: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$109`.
  382.           }
  383.           if (requiresCast) {
  384. >           builder.add(", $T.class", fieldBinding.getRawType());
  385.           }
  386.           builder.add(")");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:388: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$124`.
  386.           builder.add(")");
  387.         }
  388. >       result.addStatement("$L", builder.build());
  389.         return;
  390.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:365: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$12`.
  363.         FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());
  364.         CodeBlock.Builder builder = CodeBlock.builder()
  365. >           .add("target.$L = ", fieldBinding.getName());
  366.   
  367.         boolean requiresCast = requiresCast(fieldBinding.getType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:394: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$142`,dereference of pointer `n$145`.
  392.       List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  393.       if (!debuggable || requiredBindings.isEmpty()) {
  394. >       result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395.       } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:396: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$157`.
  394.         result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395.       } else if (!binding.isBoundToRoot()) {
  396. >       result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  397.             binding.getId().code, asHumanDescription(requiredBindings));
  398.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:397: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$157`.
  395.       } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  397. >           binding.getId().code, asHumanDescription(requiredBindings));
  398.       }
  399.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:397: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$157`,dereference of pointer `n$162`.
  395.       } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  397. >           binding.getId().code, asHumanDescription(requiredBindings));
  398.       }
  399.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:370: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$34`.
  368.         if (!debuggable || (!requiresCast && !fieldBinding.isRequired())) {
  369.           if (requiresCast) {
  370. >           builder.add("($T) ", fieldBinding.getType());
  371.           }
  372.           builder.add("source.findViewById($L)", binding.getId().code);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:372: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$44`,dereference of pointer `n$47`.
  370.             builder.add("($T) ", fieldBinding.getType());
  371.           }
  372. >         builder.add("source.findViewById($L)", binding.getId().code);
  373.         } else {
  374.           builder.add("$T.find", UTILS);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:374: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$55`.
  372.           builder.add("source.findViewById($L)", binding.getId().code);
  373.         } else {
  374. >         builder.add("$T.find", UTILS);
  375.           builder.add(fieldBinding.isRequired() ? "RequiredView" : "OptionalView");
  376.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:379: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$81`,dereference of pointer `n$84`.
  377.             builder.add("AsType");
  378.           }
  379. >         builder.add("(source, $L", binding.getId().code);
  380.           if (fieldBinding.isRequired() || requiresCast) {
  381.             builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:381: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$97`.
  379.           builder.add("(source, $L", binding.getId().code);
  380.           if (fieldBinding.isRequired() || requiresCast) {
  381. >           builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));
  382.           }
  383.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T1_153`.
  373.         } else {
  374.           builder.add("$T.find", UTILS);
  375. >         builder.add(fieldBinding.isRequired() ? "RequiredView" : "OptionalView");
  376.           if (requiresCast) {
  377.             builder.add("AsType");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:361: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  359.   
  360.     private void addViewBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable) {
  361. >     if (binding.isSingleFieldBinding()) {
  362.         // Optimize the common case where there's a single binding directly to a field.
  363.         FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:363: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  361.       if (binding.isSingleFieldBinding()) {
  362.         // Optimize the common case where there's a single binding directly to a field.
  363. >       FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());
  364.         CodeBlock.Builder builder = CodeBlock.builder()
  365.             .add("target.$L = ", fieldBinding.getName());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:372: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  370.             builder.add("($T) ", fieldBinding.getType());
  371.           }
  372. >         builder.add("source.findViewById($L)", binding.getId().code);
  373.         } else {
  374.           builder.add("$T.find", UTILS);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:379: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  377.             builder.add("AsType");
  378.           }
  379. >         builder.add("(source, $L", binding.getId().code);
  380.           if (fieldBinding.isRequired() || requiresCast) {
  381.             builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:392: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  390.       }
  391.   
  392. >     List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  393.       if (!debuggable || requiredBindings.isEmpty()) {
  394.         result.addStatement("view = source.findViewById($L)", binding.getId().code);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:394: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  392.       List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  393.       if (!debuggable || requiredBindings.isEmpty()) {
  394. >       result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395.       } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  393.       if (!debuggable || requiredBindings.isEmpty()) {
  394.         result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395. >     } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  397.             binding.getId().code, asHumanDescription(requiredBindings));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  395.       } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  397. >           binding.getId().code, asHumanDescription(requiredBindings));
  398.       }
  399.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  368.         if (!debuggable || (!requiresCast && !fieldBinding.isRequired())) {
  369.           if (requiresCast) {
  370. >           builder.add("($T) ", fieldBinding.getType());
  371.           }
  372.           builder.add("source.findViewById($L)", binding.getId().code);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:372: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  370.             builder.add("($T) ", fieldBinding.getType());
  371.           }
  372. >         builder.add("source.findViewById($L)", binding.getId().code);
  373.         } else {
  374.           builder.add("$T.find", UTILS);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:374: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  372.           builder.add("source.findViewById($L)", binding.getId().code);
  373.         } else {
  374. >         builder.add("$T.find", UTILS);
  375.           builder.add(fieldBinding.isRequired() ? "RequiredView" : "OptionalView");
  376.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  375.           builder.add(fieldBinding.isRequired() ? "RequiredView" : "OptionalView");
  376.           if (requiresCast) {
  377. >           builder.add("AsType");
  378.           }
  379.           builder.add("(source, $L", binding.getId().code);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:379: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  377.             builder.add("AsType");
  378.           }
  379. >         builder.add("(source, $L", binding.getId().code);
  380.           if (fieldBinding.isRequired() || requiresCast) {
  381.             builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:381: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  379.           builder.add("(source, $L", binding.getId().code);
  380.           if (fieldBinding.isRequired() || requiresCast) {
  381. >           builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));
  382.           }
  383.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:384: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  382.           }
  383.           if (requiresCast) {
  384. >           builder.add(", $T.class", fieldBinding.getRawType());
  385.           }
  386.           builder.add(")");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  384.             builder.add(", $T.class", fieldBinding.getRawType());
  385.           }
  386. >         builder.add(")");
  387.         }
  388.         result.addStatement("$L", builder.build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:388: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  386.           builder.add(")");
  387.         }
  388. >       result.addStatement("$L", builder.build());
  389.         return;
  390.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:365: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  363.         FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());
  364.         CodeBlock.Builder builder = CodeBlock.builder()
  365. >           .add("target.$L = ", fieldBinding.getName());
  366.   
  367.         boolean requiresCast = requiresCast(fieldBinding.getType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:367: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  365.             .add("target.$L = ", fieldBinding.getName());
  366.   
  367. >       boolean requiresCast = requiresCast(fieldBinding.getType());
  368.         if (!debuggable || (!requiresCast && !fieldBinding.isRequired())) {
  369.           if (requiresCast) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:368: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  366.   
  367.         boolean requiresCast = requiresCast(fieldBinding.getType());
  368. >       if (!debuggable || (!requiresCast && !fieldBinding.isRequired())) {
  369.           if (requiresCast) {
  370.             builder.add("($T) ", fieldBinding.getType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  368.         if (!debuggable || (!requiresCast && !fieldBinding.isRequired())) {
  369.           if (requiresCast) {
  370. >           builder.add("($T) ", fieldBinding.getType());
  371.           }
  372.           builder.add("source.findViewById($L)", binding.getId().code);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  373.         } else {
  374.           builder.add("$T.find", UTILS);
  375. >         builder.add(fieldBinding.isRequired() ? "RequiredView" : "OptionalView");
  376.           if (requiresCast) {
  377.             builder.add("AsType");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:380: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  378.           }
  379.           builder.add("(source, $L", binding.getId().code);
  380. >         if (fieldBinding.isRequired() || requiresCast) {
  381.             builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));
  382.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:384: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  382.           }
  383.           if (requiresCast) {
  384. >           builder.add(", $T.class", fieldBinding.getRawType());
  385.           }
  386.           builder.add(")");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:365: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  363.         FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());
  364.         CodeBlock.Builder builder = CodeBlock.builder()
  365. >           .add("target.$L = ", fieldBinding.getName());
  366.   
  367.         boolean requiresCast = requiresCast(fieldBinding.getType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `requiredBindings`.
  391.   
  392.       List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  393. >     if (!debuggable || requiredBindings.isEmpty()) {
  394.         result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395.       } else if (!binding.isBoundToRoot()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:388: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  386.           builder.add(")");
  387.         }
  388. >       result.addStatement("$L", builder.build());
  389.         return;
  390.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:394: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  392.       List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  393.       if (!debuggable || requiredBindings.isEmpty()) {
  394. >       result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395.       } else if (!binding.isBoundToRoot()) {
  396.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:396: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  394.         result.addStatement("view = source.findViewById($L)", binding.getId().code);
  395.       } else if (!binding.isBoundToRoot()) {
  396. >       result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  397.             binding.getId().code, asHumanDescription(requiredBindings));
  398.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:400: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  398.       }
  399.   
  400. >     addFieldBinding(result, binding, debuggable);
  401.       addMethodBindings(result, binding, debuggable);
  402.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:401: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  399.   
  400.       addFieldBinding(result, binding, debuggable);
  401. >     addMethodBindings(result, binding, debuggable);
  402.     }
  403.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:369: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindArray`.
  367.       validateMember(field);
  368.   
  369. >     int id = bindArray.value();
  370.       Resources resources = source.getContext().getResources();
  371.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:376: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldType`.
  374.       if (fieldType == TypedArray.class) {
  375.         value = resources.obtainTypedArray(id);
  376. >     } else if (fieldType.isArray()) {
  377.         Class<?> componentType = fieldType.getComponentType();
  378.         if (componentType == String.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldType`.
  375.         value = resources.obtainTypedArray(id);
  376.       } else if (fieldType.isArray()) {
  377. >       Class<?> componentType = fieldType.getComponentType();
  378.         if (componentType == String.class) {
  379.           value = resources.getStringArray(id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:363: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  361.   
  362.     private static @Nullable Unbinder parseBindArray(Object target, Field field, View source) {
  363. >     BindArray bindArray = field.getAnnotation(BindArray.class);
  364.       if (bindArray == null) {
  365.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  371.   
  372.       Object value;
  373. >     Class<?> fieldType = field.getType();
  374.       if (fieldType == TypedArray.class) {
  375.         value = resources.obtainTypedArray(id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  385.           throw new IllegalStateException("@BindArray field type must be one of: "
  386.               + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  387. >             + field.getDeclaringClass().getName()
  388.               + '.'
  389.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  387.               + field.getDeclaringClass().getName()
  388.               + '.'
  389. >             + field.getName()
  390.               + ')');
  391.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  393.         throw new IllegalStateException("@BindArray field type must be one of: "
  394.             + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  395. >           + field.getDeclaringClass().getName()
  396.             + '.'
  397.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  395.             + field.getDeclaringClass().getName()
  396.             + '.'
  397. >           + field.getName()
  398.             + ')');
  399.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  395.             + field.getDeclaringClass().getName()
  396.             + '.'
  397. >           + field.getName()
  398.             + ')');
  399.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$107`.
  395.             + field.getDeclaringClass().getName()
  396.             + '.'
  397. >           + field.getName()
  398.             + ')');
  399.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$110`.
  395.             + field.getDeclaringClass().getName()
  396.             + '.'
  397. >           + field.getName()
  398.             + ')');
  399.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$114`.
  395.             + field.getDeclaringClass().getName()
  396.             + '.'
  397. >           + field.getName()
  398.             + ')');
  399.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  368.   
  369.       int id = bindArray.value();
  370. >     Resources resources = source.getContext().getResources();
  371.   
  372.       Object value;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:385: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  383.           value = resources.getTextArray(id);
  384.         } else {
  385. >         throw new IllegalStateException("@BindArray field type must be one of: "
  386.               + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  387.               + field.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  385.           throw new IllegalStateException("@BindArray field type must be one of: "
  386.               + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  387. >             + field.getDeclaringClass().getName()
  388.               + '.'
  389.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  385.           throw new IllegalStateException("@BindArray field type must be one of: "
  386.               + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  387. >             + field.getDeclaringClass().getName()
  388.               + '.'
  389.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$62`.
  385.           throw new IllegalStateException("@BindArray field type must be one of: "
  386.               + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  387. >             + field.getDeclaringClass().getName()
  388.               + '.'
  389.               + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$65`.
  387.               + field.getDeclaringClass().getName()
  388.               + '.'
  389. >             + field.getName()
  390.               + ')');
  391.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$72`.
  387.               + field.getDeclaringClass().getName()
  388.               + '.'
  389. >             + field.getName()
  390.               + ')');
  391.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$75`.
  387.               + field.getDeclaringClass().getName()
  388.               + '.'
  389. >             + field.getName()
  390.               + ')');
  391.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  387.               + field.getDeclaringClass().getName()
  388.               + '.'
  389. >             + field.getName()
  390.               + ')');
  391.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$83`.
  391.         }
  392.       } else {
  393. >       throw new IllegalStateException("@BindArray field type must be one of: "
  394.             + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  395.             + field.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$87`.
  393.         throw new IllegalStateException("@BindArray field type must be one of: "
  394.             + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  395. >           + field.getDeclaringClass().getName()
  396.             + '.'
  397.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$90`.
  393.         throw new IllegalStateException("@BindArray field type must be one of: "
  394.             + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  395. >           + field.getDeclaringClass().getName()
  396.             + '.'
  397.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$97`.
  393.         throw new IllegalStateException("@BindArray field type must be one of: "
  394.             + "String[], int[], CharSequence[], android.content.res.TypedArray. ("
  395. >           + field.getDeclaringClass().getName()
  396.             + '.'
  397.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  373.       Class<?> fieldType = field.getType();
  374.       if (fieldType == TypedArray.class) {
  375. >       value = resources.obtainTypedArray(id);
  376.       } else if (fieldType.isArray()) {
  377.         Class<?> componentType = fieldType.getComponentType();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:379: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  377.         Class<?> componentType = fieldType.getComponentType();
  378.         if (componentType == String.class) {
  379. >         value = resources.getStringArray(id);
  380.         } else if (componentType == int.class) {
  381.           value = resources.getIntArray(id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:381: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  379.           value = resources.getStringArray(id);
  380.         } else if (componentType == int.class) {
  381. >         value = resources.getIntArray(id);
  382.         } else if (componentType == CharSequence.class) {
  383.           value = resources.getTextArray(id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:383: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  381.           value = resources.getIntArray(id);
  382.         } else if (componentType == CharSequence.class) {
  383. >         value = resources.getTextArray(id);
  384.         } else {
  385.           throw new IllegalStateException("@BindArray field type must be one of: "

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:370: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  368.   
  369.       int id = bindArray.value();
  370. >     Resources resources = source.getContext().getResources();
  371.   
  372.       Object value;

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:373: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  371.       assertAbout(javaSource()).that(source)
  372.           .processedWith(new ButterKnifeProcessor())
  373. >         .failsToCompile()
  374.           .withErrorContaining("@OnItemClick annotation contains invalid ID -1. (test.Test.doStuff)")
  375.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:374: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  372.           .processedWith(new ButterKnifeProcessor())
  373.           .failsToCompile()
  374. >         .withErrorContaining("@OnItemClick annotation contains invalid ID -1. (test.Test.doStuff)")
  375.           .in(source).onLine(4);
  376.     }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  373.           .failsToCompile()
  374.           .withErrorContaining("@OnItemClick annotation contains invalid ID -1. (test.Test.doStuff)")
  375. >         .in(source).onLine(4);
  376.     }
  377.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:375: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  373.           .failsToCompile()
  374.           .withErrorContaining("@OnItemClick annotation contains invalid ID -1. (test.Test.doStuff)")
  375. >         .in(source).onLine(4);
  376.     }
  377.   

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:371: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  369.       );
  370.   
  371. >     assertAbout(javaSource()).that(source)
  372.           .processedWith(new ButterKnifeProcessor())
  373.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:372: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  370.   
  371.       assertAbout(javaSource()).that(source)
  372. >         .processedWith(new ButterKnifeProcessor())
  373.           .failsToCompile()
  374.           .withErrorContaining("@OnItemClick annotation contains invalid ID -1. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:371: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  369.       );
  370.   
  371. >     assertAbout(javaSource()).that(source)
  372.           .processedWith(new ButterKnifeProcessor())
  373.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:378: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$10`.
  376.       StringWriter stackTrace = new StringWriter();
  377.       e.printStackTrace(new PrintWriter(stackTrace));
  378. >     error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  379.     }
  380.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotation`.
  376.       StringWriter stackTrace = new StringWriter();
  377.       e.printStackTrace(new PrintWriter(stackTrace));
  378. >     error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  379.     }
  380.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `e`.
  375.         Exception e) {
  376.       StringWriter stackTrace = new StringWriter();
  377. >     e.printStackTrace(new PrintWriter(stackTrace));
  378.       error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  379.     }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:376: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  374.     private void logParsingError(Element element, Class<? extends Annotation> annotation,
  375.         Exception e) {
  376. >     StringWriter stackTrace = new StringWriter();
  377.       e.printStackTrace(new PrintWriter(stackTrace));
  378.       error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:377: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  375.         Exception e) {
  376.       StringWriter stackTrace = new StringWriter();
  377. >     e.printStackTrace(new PrintWriter(stackTrace));
  378.       error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  379.     }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:378: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  376.       StringWriter stackTrace = new StringWriter();
  377.       e.printStackTrace(new PrintWriter(stackTrace));
  378. >     error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  379.     }
  380.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:388: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  386.       assertAbout(javaSource()).that(source)
  387.           .processedWith(new ButterKnifeProcessor())
  388. >         .failsToCompile()
  389.           .withErrorContaining(
  390.               "@OnClick methods may only be contained in classes. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  387.           .processedWith(new ButterKnifeProcessor())
  388.           .failsToCompile()
  389. >         .withErrorContaining(
  390.               "@OnClick methods may only be contained in classes. (test.Test.doStuff)")
  391.           .in(source).onLine(3);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  389.           .withErrorContaining(
  390.               "@OnClick methods may only be contained in classes. (test.Test.doStuff)")
  391. >         .in(source).onLine(3);
  392.     }
  393.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  389.           .withErrorContaining(
  390.               "@OnClick methods may only be contained in classes. (test.Test.doStuff)")
  391. >         .in(source).onLine(3);
  392.     }
  393.   

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  384.       );
  385.   
  386. >     assertAbout(javaSource()).that(source)
  387.           .processedWith(new ButterKnifeProcessor())
  388.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  385.   
  386.       assertAbout(javaSource()).that(source)
  387. >         .processedWith(new ButterKnifeProcessor())
  388.           .failsToCompile()
  389.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:386: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  384.       );
  385.   
  386. >     assertAbout(javaSource()).that(source)
  387.           .processedWith(new ButterKnifeProcessor())
  388.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:418: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$16`.
  416.       );
  417.   
  418. >     assertAbout(javaSources()).that(asList(source, NON_FINAL_R))
  419.           .withCompilerOptions("-Xlint:-processing")
  420.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:418: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$5`.
  416.       );
  417.   
  418. >     assertAbout(javaSources()).that(asList(source, NON_FINAL_R))
  419.           .withCompilerOptions("-Xlint:-processing")
  420.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/RClassTest.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  417.   
  418.       assertAbout(javaSources()).that(asList(source, NON_FINAL_R))
  419. >         .withCompilerOptions("-Xlint:-processing")
  420.           .processedWith(new ButterKnifeProcessor())
  421.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  418.       assertAbout(javaSources()).that(asList(source, NON_FINAL_R))
  419.           .withCompilerOptions("-Xlint:-processing")
  420. >         .processedWith(new ButterKnifeProcessor())
  421.           .compilesWithoutWarnings()
  422.           .and()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  417.   
  418.       assertAbout(javaSources()).that(asList(source, NON_FINAL_R))
  419. >         .withCompilerOptions("-Xlint:-processing")
  420.           .processedWith(new ButterKnifeProcessor())
  421.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/RClassTest.java:421: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$30`.
  419.           .withCompilerOptions("-Xlint:-processing")
  420.           .processedWith(new ButterKnifeProcessor())
  421. >         .compilesWithoutWarnings()
  422.           .and()
  423.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/RClassTest.java:422: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$33`.
  420.           .processedWith(new ButterKnifeProcessor())
  421.           .compilesWithoutWarnings()
  422. >         .and()
  423.           .generatesSources(bindingSource);
  424.     }

butterknife-runtime/src/test/java/butterknife/RClassTest.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  421.           .compilesWithoutWarnings()
  422.           .and()
  423. >         .generatesSources(bindingSource);
  424.     }
  425.   }

butterknife-runtime/src/test/java/butterknife/RClassTest.java:418: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  416.       );
  417.   
  418. >     assertAbout(javaSources()).that(asList(source, NON_FINAL_R))
  419.           .withCompilerOptions("-Xlint:-processing")
  420.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:395: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  393.       assertAbout(javaSource()).that(source)
  394.           .processedWith(new ButterKnifeProcessor())
  395. >         .failsToCompile()
  396.           .withErrorContaining(""
  397.               + "Unable to match @OnItemClick method arguments. (test.Test.doStuff)\n"

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:396: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  394.           .processedWith(new ButterKnifeProcessor())
  395.           .failsToCompile()
  396. >         .withErrorContaining(""
  397.               + "Unable to match @OnItemClick method arguments. (test.Test.doStuff)\n"
  398.               + "  \n"

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:416: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  414.               + "  \n"
  415.               + "  These may be listed in any order but will be searched for from top to bottom.")
  416. >         .in(source).onLine(6);
  417.     }
  418.   }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:416: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  414.               + "  \n"
  415.               + "  These may be listed in any order but will be searched for from top to bottom.")
  416. >         .in(source).onLine(6);
  417.     }
  418.   }

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  391.       );
  392.   
  393. >     assertAbout(javaSource()).that(source)
  394.           .processedWith(new ButterKnifeProcessor())
  395.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:394: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  392.   
  393.       assertAbout(javaSource()).that(source)
  394. >         .processedWith(new ButterKnifeProcessor())
  395.           .failsToCompile()
  396.           .withErrorContaining(""

butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java:393: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  391.       );
  392.   
  393. >     assertAbout(javaSource()).that(source)
  394.           .processedWith(new ButterKnifeProcessor())
  395.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:390: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  388.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",
  390. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  391.             element.getSimpleName());
  392.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:391: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",
  390.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  391. >           element.getSimpleName());
  392.         hasError = true;
  393.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:398: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`.
  396.       if (enclosingElement.getKind() != CLASS) {
  397.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  399.             element.getSimpleName());
  400.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:399: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`.
  397.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  399. >           element.getSimpleName());
  400.         hasError = true;
  401.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:406: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$75`.
  404.       if (enclosingElement.getModifiers().contains(PRIVATE)) {
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  407.             element.getSimpleName());
  408.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:407: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$75`.
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  407. >           element.getSimpleName());
  408.         hasError = true;
  409.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:390: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  388.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",
  390. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  391.             element.getSimpleName());
  392.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  396.       if (enclosingElement.getKind() != CLASS) {
  397.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  399.             element.getSimpleName());
  400.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:406: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  404.       if (enclosingElement.getModifiers().contains(PRIVATE)) {
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  407.             element.getSimpleName());
  408.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:384: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  382.         String targetThing, Element element) {
  383.       boolean hasError = false;
  384. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  385.   
  386.       // Verify field or method modifiers.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:387: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  385.   
  386.       // Verify field or method modifiers.
  387. >     Set<Modifier> modifiers = element.getModifiers();
  388.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:391: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",
  390.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  391. >           element.getSimpleName());
  392.         hasError = true;
  393.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:399: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  397.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  399. >           element.getSimpleName());
  400.         hasError = true;
  401.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:407: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  407. >           element.getSimpleName());
  408.         hasError = true;
  409.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:390: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  388.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",
  390. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  391.             element.getSimpleName());
  392.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:396: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  394.   
  395.       // Verify containing type.
  396. >     if (enclosingElement.getKind() != CLASS) {
  397.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:398: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  396.       if (enclosingElement.getKind() != CLASS) {
  397.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  399.             element.getSimpleName());
  400.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:404: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  402.   
  403.       // Verify containing class visibility is not private.
  404. >     if (enclosingElement.getModifiers().contains(PRIVATE)) {
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:406: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  404.       if (enclosingElement.getModifiers().contains(PRIVATE)) {
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  407.             element.getSimpleName());
  408.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:388: warning: GRADUAL_DEREFERENCE
  method call on pointer `modifiers`.
  386.       // Verify field or method modifiers.
  387.       Set<Modifier> modifiers = element.getModifiers();
  388. >     if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  389.         error(element, "@%s %s must not be private or static. (%s.%s)",
  390.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:404: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$69`.
  402.   
  403.       // Verify containing class visibility is not private.
  404. >     if (enclosingElement.getModifiers().contains(PRIVATE)) {
  405.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:389: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  387.       Set<Modifier> modifiers = element.getModifiers();
  388.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  389. >       error(element, "@%s %s must not be private or static. (%s.%s)",
  390.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  391.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:397: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  395.       // Verify containing type.
  396.       if (enclosingElement.getKind() != CLASS) {
  397. >       error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  398.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  399.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:405: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  403.       // Verify containing class visibility is not private.
  404.       if (enclosingElement.getModifiers().contains(PRIVATE)) {
  405. >       error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  406.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  407.             element.getSimpleName());

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:407: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  405.       assertAbout(javaSource()).that(source)
  406.           .processedWith(new ButterKnifeProcessor())
  407. >         .failsToCompile()
  408.           .withErrorContaining(
  409.               "@OnClick annotation for method contains duplicate ID 1. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:408: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  406.           .processedWith(new ButterKnifeProcessor())
  407.           .failsToCompile()
  408. >         .withErrorContaining(
  409.               "@OnClick annotation for method contains duplicate ID 1. (test.Test.doStuff)")
  410.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:410: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  408.           .withErrorContaining(
  409.               "@OnClick annotation for method contains duplicate ID 1. (test.Test.doStuff)")
  410. >         .in(source).onLine(5);
  411.     }
  412.   }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:410: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  408.           .withErrorContaining(
  409.               "@OnClick annotation for method contains duplicate ID 1. (test.Test.doStuff)")
  410. >         .in(source).onLine(5);
  411.     }
  412.   }

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:405: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  403.       );
  404.   
  405. >     assertAbout(javaSource()).that(source)
  406.           .processedWith(new ButterKnifeProcessor())
  407.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:406: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  404.   
  405.       assertAbout(javaSource()).that(source)
  406. >         .processedWith(new ButterKnifeProcessor())
  407.           .failsToCompile()
  408.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/OnClickTest.java:405: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  403.       );
  404.   
  405. >     assertAbout(javaSource()).that(source)
  406.           .processedWith(new ButterKnifeProcessor())
  407.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:411: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  409.       assertAbout(javaSource()).that(source)
  410.           .processedWith(new ButterKnifeProcessor())
  411. >         .failsToCompile()
  412.           .withErrorContaining("@BindViews must specify at least one ID. (test.Test.thing)")
  413.           .in(source).onLine(6);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:412: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  410.           .processedWith(new ButterKnifeProcessor())
  411.           .failsToCompile()
  412. >         .withErrorContaining("@BindViews must specify at least one ID. (test.Test.thing)")
  413.           .in(source).onLine(6);
  414.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  411.           .failsToCompile()
  412.           .withErrorContaining("@BindViews must specify at least one ID. (test.Test.thing)")
  413. >         .in(source).onLine(6);
  414.     }
  415.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  411.           .failsToCompile()
  412.           .withErrorContaining("@BindViews must specify at least one ID. (test.Test.thing)")
  413. >         .in(source).onLine(6);
  414.     }
  415.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:409: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  407.       );
  408.   
  409. >     assertAbout(javaSource()).that(source)
  410.           .processedWith(new ButterKnifeProcessor())
  411.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:410: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  408.   
  409.       assertAbout(javaSource()).that(source)
  410. >         .processedWith(new ButterKnifeProcessor())
  411.           .failsToCompile()
  412.           .withErrorContaining("@BindViews must specify at least one ID. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:409: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  407.       );
  408.   
  409. >     assertAbout(javaSource()).that(source)
  410.           .processedWith(new ButterKnifeProcessor())
  411.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:454: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  452.       );
  453.   
  454. >     assertAbout(javaSource()).that(source)
  455.           .withCompilerOptions("-Xlint:-processing")
  456.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:456: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  454.       assertAbout(javaSource()).that(source)
  455.           .withCompilerOptions("-Xlint:-processing")
  456. >         .processedWith(new ButterKnifeProcessor())
  457.           .compilesWithoutWarnings()
  458.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  453.   
  454.       assertAbout(javaSource()).that(source)
  455. >         .withCompilerOptions("-Xlint:-processing")
  456.           .processedWith(new ButterKnifeProcessor())
  457.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:457: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  455.           .withCompilerOptions("-Xlint:-processing")
  456.           .processedWith(new ButterKnifeProcessor())
  457. >         .compilesWithoutWarnings()
  458.           .and()
  459.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:458: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  456.           .processedWith(new ButterKnifeProcessor())
  457.           .compilesWithoutWarnings()
  458. >         .and()
  459.           .generatesSources(bindingSource);
  460.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:459: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  457.           .compilesWithoutWarnings()
  458.           .and()
  459. >         .generatesSources(bindingSource);
  460.     }
  461.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:454: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  452.       );
  453.   
  454. >     assertAbout(javaSource()).that(source)
  455.           .withCompilerOptions("-Xlint:-processing")
  456.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  453.   
  454.       assertAbout(javaSource()).that(source)
  455. >         .withCompilerOptions("-Xlint:-processing")
  456.           .processedWith(new ButterKnifeProcessor())
  457.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:410: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  408.           if (debuggable) {
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410. >               fieldBinding.getName(), UTILS, binding.getId().code,
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:411: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`.
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410.                 fieldBinding.getName(), UTILS, binding.getId().code,
  411. >               asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {
  413.             result.addStatement("target.$L = ($T) view", fieldBinding.getName(),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:410: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$11`,dereference of pointer `n$21`.
  408.           if (debuggable) {
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410. >               fieldBinding.getName(), UTILS, binding.getId().code,
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:413: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$40`.
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {
  413. >           result.addStatement("target.$L = ($T) view", fieldBinding.getName(),
  414.                 fieldBinding.getType());
  415.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:414: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$40`.
  412.           } else {
  413.             result.addStatement("target.$L = ($T) view", fieldBinding.getName(),
  414. >               fieldBinding.getType());
  415.           }
  416.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:417: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$55`.
  415.           }
  416.         } else {
  417. >         result.addStatement("target.$L = view", fieldBinding.getName());
  418.         }
  419.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:405: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  403.   
  404.     private void addFieldBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable) {
  405. >     FieldViewBinding fieldBinding = binding.getFieldBinding();
  406.       if (fieldBinding != null) {
  407.         if (requiresCast(fieldBinding.getType())) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:410: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  408.           if (debuggable) {
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410. >               fieldBinding.getName(), UTILS, binding.getId().code,
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:407: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  405.       FieldViewBinding fieldBinding = binding.getFieldBinding();
  406.       if (fieldBinding != null) {
  407. >       if (requiresCast(fieldBinding.getType())) {
  408.           if (debuggable) {
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:410: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  408.           if (debuggable) {
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410. >               fieldBinding.getName(), UTILS, binding.getId().code,
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:411: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  409.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410.                 fieldBinding.getName(), UTILS, binding.getId().code,
  411. >               asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {
  413.             result.addStatement("target.$L = ($T) view", fieldBinding.getName(),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {
  413. >           result.addStatement("target.$L = ($T) view", fieldBinding.getName(),
  414.                 fieldBinding.getType());
  415.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:414: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  412.           } else {
  413.             result.addStatement("target.$L = ($T) view", fieldBinding.getName(),
  414. >               fieldBinding.getType());
  415.           }
  416.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  415.           }
  416.         } else {
  417. >         result.addStatement("target.$L = view", fieldBinding.getName());
  418.         }
  419.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:409: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  407.         if (requiresCast(fieldBinding.getType())) {
  408.           if (debuggable) {
  409. >           result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  410.                 fieldBinding.getName(), UTILS, binding.getId().code,
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  411.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  412.           } else {
  413. >           result.addStatement("target.$L = ($T) view", fieldBinding.getName(),
  414.                 fieldBinding.getType());
  415.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  415.           }
  416.         } else {
  417. >         result.addStatement("target.$L = view", fieldBinding.getName());
  418.         }
  419.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:412: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindBitmap`.
  410.       validateMember(field);
  411.   
  412. >     int id = bindBitmap.value();
  413.       Resources resources = source.getContext().getResources();
  414.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:406: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  404.   
  405.     private static @Nullable Unbinder parseBindBitmap(Object target, Field field, View source) {
  406. >     BindBitmap bindBitmap = field.getAnnotation(BindBitmap.class);
  407.       if (bindBitmap == null) {
  408.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:416: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  414.   
  415.       Object value;
  416. >     Class<?> fieldType = field.getType();
  417.       if (fieldType == Bitmap.class) {
  418.         value = BitmapFactory.decodeResource(resources, id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:421: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  419.       } else {
  420.         throw new IllegalStateException("@BindBitmap field type must be 'Bitmap'. ("
  421. >           + field.getDeclaringClass().getName()
  422.             + '.'
  423.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  421.             + field.getDeclaringClass().getName()
  422.             + '.'
  423. >           + field.getName()
  424.             + ')');
  425.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  411.   
  412.       int id = bindBitmap.value();
  413. >     Resources resources = source.getContext().getResources();
  414.   
  415.       Object value;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  418.         value = BitmapFactory.decodeResource(resources, id);
  419.       } else {
  420. >       throw new IllegalStateException("@BindBitmap field type must be 'Bitmap'. ("
  421.             + field.getDeclaringClass().getName()
  422.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:421: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  419.       } else {
  420.         throw new IllegalStateException("@BindBitmap field type must be 'Bitmap'. ("
  421. >           + field.getDeclaringClass().getName()
  422.             + '.'
  423.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:421: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  419.       } else {
  420.         throw new IllegalStateException("@BindBitmap field type must be 'Bitmap'. ("
  421. >           + field.getDeclaringClass().getName()
  422.             + '.'
  423.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:421: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  419.       } else {
  420.         throw new IllegalStateException("@BindBitmap field type must be 'Bitmap'. ("
  421. >           + field.getDeclaringClass().getName()
  422.             + '.'
  423.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  421.             + field.getDeclaringClass().getName()
  422.             + '.'
  423. >           + field.getName()
  424.             + ')');
  425.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  421.             + field.getDeclaringClass().getName()
  422.             + '.'
  423. >           + field.getName()
  424.             + ')');
  425.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  421.             + field.getDeclaringClass().getName()
  422.             + '.'
  423. >           + field.getName()
  424.             + ')');
  425.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:423: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  421.             + field.getDeclaringClass().getName()
  422.             + '.'
  423. >           + field.getName()
  424.             + ')');
  425.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:413: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  411.   
  412.       int id = bindBitmap.value();
  413. >     Resources resources = source.getContext().getResources();
  414.   
  415.       Object value;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:421: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$15`.
  419.       if (qualifiedName.startsWith("android.")) {
  420.         error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",
  421. >           annotationClass.getSimpleName(), qualifiedName);
  422.         return true;
  423.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:426: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$31`.
  424.       if (qualifiedName.startsWith("java.")) {
  425.         error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",
  426. >           annotationClass.getSimpleName(), qualifiedName);
  427.         return true;
  428.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:421: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  419.       if (qualifiedName.startsWith("android.")) {
  420.         error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",
  421. >           annotationClass.getSimpleName(), qualifiedName);
  422.         return true;
  423.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:426: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  424.       if (qualifiedName.startsWith("java.")) {
  425.         error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",
  426. >           annotationClass.getSimpleName(), qualifiedName);
  427.         return true;
  428.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:416: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  414.     private boolean isBindingInWrongPackage(Class<? extends Annotation> annotationClass,
  415.         Element element) {
  416. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  417.       String qualifiedName = enclosingElement.getQualifiedName().toString();
  418.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  415.         Element element) {
  416.       TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  417. >     String qualifiedName = enclosingElement.getQualifiedName().toString();
  418.   
  419.       if (qualifiedName.startsWith("android.")) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:417: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  415.         Element element) {
  416.       TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  417. >     String qualifiedName = enclosingElement.getQualifiedName().toString();
  418.   
  419.       if (qualifiedName.startsWith("android.")) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:419: warning: GRADUAL_DEREFERENCE
  method call on pointer `qualifiedName`.
  417.       String qualifiedName = enclosingElement.getQualifiedName().toString();
  418.   
  419. >     if (qualifiedName.startsWith("android.")) {
  420.         error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",
  421.             annotationClass.getSimpleName(), qualifiedName);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:424: warning: GRADUAL_DEREFERENCE
  method call on pointer `qualifiedName`.
  422.         return true;
  423.       }
  424. >     if (qualifiedName.startsWith("java.")) {
  425.         error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",
  426.             annotationClass.getSimpleName(), qualifiedName);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:420: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  418.   
  419.       if (qualifiedName.startsWith("android.")) {
  420. >       error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",
  421.             annotationClass.getSimpleName(), qualifiedName);
  422.         return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:425: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  423.       }
  424.       if (qualifiedName.startsWith("java.")) {
  425. >       error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",
  426.             annotationClass.getSimpleName(), qualifiedName);
  427.         return true;

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:428: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  426.       assertAbout(javaSource()).that(source)
  427.           .processedWith(new ButterKnifeProcessor())
  428. >         .failsToCompile()
  429.           .withErrorContaining("@BindViews List must have a generic component. (test.Test.thing)")
  430.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:429: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  427.           .processedWith(new ButterKnifeProcessor())
  428.           .failsToCompile()
  429. >         .withErrorContaining("@BindViews List must have a generic component. (test.Test.thing)")
  430.           .in(source).onLine(5);
  431.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:430: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  428.           .failsToCompile()
  429.           .withErrorContaining("@BindViews List must have a generic component. (test.Test.thing)")
  430. >         .in(source).onLine(5);
  431.     }
  432.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:430: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  428.           .failsToCompile()
  429.           .withErrorContaining("@BindViews List must have a generic component. (test.Test.thing)")
  430. >         .in(source).onLine(5);
  431.     }
  432.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:426: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  424.       );
  425.   
  426. >     assertAbout(javaSource()).that(source)
  427.           .processedWith(new ButterKnifeProcessor())
  428.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:427: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  425.   
  426.       assertAbout(javaSource()).that(source)
  427. >         .processedWith(new ButterKnifeProcessor())
  428.           .failsToCompile()
  429.           .withErrorContaining("@BindViews List must have a generic component. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:426: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  424.       );
  425.   
  426. >     assertAbout(javaSource()).that(source)
  427.           .processedWith(new ButterKnifeProcessor())
  428.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:518: warning: GRADUAL_DEREFERENCE
  dereference of pointer `$T2_904`.
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:521: warning: GRADUAL_DEREFERENCE
  dereference of pointer `$T2_951`.
  519.         } else {
  520.           result.addStatement("$N.$L($L)", bindName, listener.setter(),
  521. >             requiresRemoval ? listenerField : callback.build());
  522.         }
  523.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:455: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$110`.
  453.         for (ListenerMethod method : getListenerMethods(listener)) {
  454.           MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  455. >             .addAnnotation(Override.class)
  456.               .addModifiers(PUBLIC)
  457.               .returns(bestGuess(method.returnType()));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:472: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$189`.
  470.                 builder.add("return "); // TODO what about multiple methods?
  471.               }
  472. >             builder.add("target.$L(", methodBinding.getName());
  473.               List<Parameter> parameters = methodBinding.getParameters();
  474.               String[] listenerParameters = method.parameters();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:485: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$234`.
  483.                 if (parameter.requiresCast(listenerParameters[listenerPosition])) {
  484.                   if (debuggable) {
  485. >                   builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486.                         listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487.                         parameter.getType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:486: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$234`.
  484.                   if (debuggable) {
  485.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486. >                       listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487.                         parameter.getType());
  488.                   } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:487: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$234`.
  485.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486.                         listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487. >                       parameter.getType());
  488.                   } else {
  489.                     builder.add("($T) p$L", parameter.getType(), listenerPosition);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:489: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$268`.
  487.                         parameter.getType());
  488.                   } else {
  489. >                   builder.add("($T) p$L", parameter.getType(), listenerPosition);
  490.                   }
  491.                 } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:492: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$282`.
  490.                   }
  491.                 } else {
  492. >                 builder.add("p$L", listenerPosition);
  493.                 }
  494.               }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:500: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$304`.
  498.   
  499.           if (!"void".equals(method.returnType()) && !hasReturnValue) {
  500. >           builder.add("return $L;\n", method.defaultReturn());
  501.           }
  502.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:440: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$30`.
  438.       String bindName = "source";
  439.       if (!binding.isBoundToRoot()) {
  440. >       fieldName = "view" + Integer.toHexString(binding.getId().value);
  441.         bindName = "view";
  442.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:512: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$359`.
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512. >         result.addStatement("$L = $L", listenerField, callback.build());
  513.         }
  514.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:517: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$377`.
  515.         String targetType = listener.targetType();
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517. >         result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:518: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$377`.
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:520: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$414`.
  518.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  521.               requiresRemoval ? listenerField : callback.build());
  522.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:443: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$42`.
  441.         bindName = "view";
  442.       }
  443. >     result.addStatement("$L = $N", fieldName, bindName);
  444.   
  445.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:460: warning: GRADUAL_DEREFERENCE
  dereference of pointer `parameterTypes`.
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  460. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  461.           }
  462.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:516: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.view.View"`.
  514.   
  515.         String targetType = listener.targetType();
  516. >       if (!VIEW_TYPE.equals(targetType)) {
  517.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518.               listener.setter(), requiresRemoval ? listenerField : callback.build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:499: warning: GRADUAL_DEREFERENCE
  method call on pointer `"void"`.
  497.           }
  498.   
  499. >         if (!"void".equals(method.returnType()) && !hasReturnValue) {
  500.             builder.add("return $L;\n", method.defaultReturn());
  501.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:517: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T5_904`.
  515.         String targetType = listener.targetType();
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517. >         result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:520: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T5_951`.
  518.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  521.               requiresRemoval ? listenerField : callback.build());
  522.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:425: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  423.         boolean debuggable) {
  424.       Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
  425. >         binding.getMethodBindings();
  426.       if (classMethodBindings.isEmpty()) {
  427.         return;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:431: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  429.   
  430.       // We only need to emit the null check if there are zero required bindings.
  431. >     boolean needsNullChecked = binding.getRequiredBindings().isEmpty();
  432.       if (needsNullChecked) {
  433.         result.beginControlFlow("if (view != null)");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:439: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  437.       String fieldName = "viewSource";
  438.       String bindName = "source";
  439. >     if (!binding.isBoundToRoot()) {
  440.         fieldName = "view" + Integer.toHexString(binding.getId().value);
  441.         bindName = "view";

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:440: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  438.       String bindName = "source";
  439.       if (!binding.isBoundToRoot()) {
  440. >       fieldName = "view" + Integer.toHexString(binding.getId().value);
  441.         bindName = "view";
  442.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:470: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  468.               if (methodBinding.hasReturnValue()) {
  469.                 hasReturnValue = true;
  470. >               builder.add("return "); // TODO what about multiple methods?
  471.               }
  472.               builder.add("target.$L(", methodBinding.getName());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:472: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  470.                 builder.add("return "); // TODO what about multiple methods?
  471.               }
  472. >             builder.add("target.$L(", methodBinding.getName());
  473.               List<Parameter> parameters = methodBinding.getParameters();
  474.               String[] listenerParameters = method.parameters();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:477: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  475.               for (int i = 0, count = parameters.size(); i < count; i++) {
  476.                 if (i > 0) {
  477. >                 builder.add(", ");
  478.                 }
  479.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  483.                 if (parameter.requiresCast(listenerParameters[listenerPosition])) {
  484.                   if (debuggable) {
  485. >                   builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486.                         listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487.                         parameter.getType());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  487.                         parameter.getType());
  488.                   } else {
  489. >                   builder.add("($T) p$L", parameter.getType(), listenerPosition);
  490.                   }
  491.                 } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:492: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  490.                   }
  491.                 } else {
  492. >                 builder.add("p$L", listenerPosition);
  493.                 }
  494.               }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:495: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  493.                 }
  494.               }
  495. >             builder.add(");\n");
  496.             }
  497.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  498.   
  499.           if (!"void".equals(method.returnType()) && !hasReturnValue) {
  500. >           builder.add("return $L;\n", method.defaultReturn());
  501.           }
  502.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  501.           }
  502.   
  503. >         callbackMethod.addCode(builder.build());
  504.           callback.addMethod(callbackMethod.build());
  505.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:460: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackMethod`.
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  460. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  461.           }
  462.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackMethod`.
  501.           }
  502.   
  503. >         callbackMethod.addCode(builder.build());
  504.           callback.addMethod(callbackMethod.build());
  505.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackMethod`.
  502.   
  503.           callbackMethod.addCode(builder.build());
  504. >         callback.addMethod(callbackMethod.build());
  505.         }
  506.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  502.   
  503.           callbackMethod.addCode(builder.build());
  504. >         callback.addMethod(callbackMethod.build());
  505.         }
  506.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:512: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512. >         result.addStatement("$L = $L", listenerField, callback.build());
  513.         }
  514.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:518: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:521: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  519.         } else {
  520.           result.addStatement("$N.$L($L)", bindName, listener.setter(),
  521. >             requiresRemoval ? listenerField : callback.build());
  522.         }
  523.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:426: warning: GRADUAL_DEREFERENCE
  method call on pointer `classMethodBindings`.
  424.       Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
  425.           binding.getMethodBindings();
  426. >     if (classMethodBindings.isEmpty()) {
  427.         return;
  428.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `classMethodBindings`.
  444.   
  445.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e
  446. >         : classMethodBindings.entrySet()) {
  447.         ListenerClass listener = e.getKey();
  448.         Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `e`.
  445.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e
  446.           : classMethodBindings.entrySet()) {
  447. >       ListenerClass listener = e.getKey();
  448.         Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();
  449.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:448: warning: GRADUAL_DEREFERENCE
  method call on pointer `e`.
  446.           : classMethodBindings.entrySet()) {
  447.         ListenerClass listener = e.getKey();
  448. >       Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();
  449.   
  450.         TypeSpec.Builder callback = TypeSpec.anonymousClassBuilder("")

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `listenerClassName`.
  509.         if (requiresRemoval) {
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512.           result.addStatement("$L = $L", listenerField, callback.build());
  513.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:451: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  449.   
  450.         TypeSpec.Builder callback = TypeSpec.anonymousClassBuilder("")
  451. >           .superclass(ClassName.bestGuess(listener.type()));
  452.   
  453.         for (ListenerMethod method : getListenerMethods(listener)) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:507: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  505.         }
  506.   
  507. >       boolean requiresRemoval = listener.remover().length() != 0;
  508.         String listenerField = null;
  509.         if (requiresRemoval) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  508.         String listenerField = null;
  509.         if (requiresRemoval) {
  510. >         TypeName listenerClassName = bestGuess(listener.type());
  511.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512.           result.addStatement("$L = $L", listenerField, callback.build());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:515: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  513.         }
  514.   
  515. >       String targetType = listener.targetType();
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:518: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  516.         if (!VIEW_TYPE.equals(targetType)) {
  517.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  518. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:520: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  518.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  519.         } else {
  520. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  521.               requiresRemoval ? listenerField : callback.build());
  522.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:468: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodBinding`.
  466.           if (methodViewBindings != null) {
  467.             for (MethodViewBinding methodBinding : methodViewBindings) {
  468. >             if (methodBinding.hasReturnValue()) {
  469.                 hasReturnValue = true;
  470.                 builder.add("return "); // TODO what about multiple methods?

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:472: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodBinding`.
  470.                 builder.add("return "); // TODO what about multiple methods?
  471.               }
  472. >             builder.add("target.$L(", methodBinding.getName());
  473.               List<Parameter> parameters = methodBinding.getParameters();
  474.               String[] listenerParameters = method.parameters();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:473: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodBinding`.
  471.               }
  472.               builder.add("target.$L(", methodBinding.getName());
  473. >             List<Parameter> parameters = methodBinding.getParameters();
  474.               String[] listenerParameters = method.parameters();
  475.               for (int i = 0, count = parameters.size(); i < count; i++) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodBinding`.
  484.                   if (debuggable) {
  485.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486. >                       listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487.                         parameter.getType());
  488.                   } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:465: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodBindings`.
  463.           boolean hasReturnValue = false;
  464.           CodeBlock.Builder builder = CodeBlock.builder();
  465. >         Set<MethodViewBinding> methodViewBindings = methodBindings.get(method);
  466.           if (methodViewBindings != null) {
  467.             for (MethodViewBinding methodBinding : methodViewBindings) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:467: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodViewBindings`.
  465.           Set<MethodViewBinding> methodViewBindings = methodBindings.get(method);
  466.           if (methodViewBindings != null) {
  467. >           for (MethodViewBinding methodBinding : methodViewBindings) {
  468.               if (methodBinding.hasReturnValue()) {
  469.                 hasReturnValue = true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:454: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  452.   
  453.         for (ListenerMethod method : getListenerMethods(listener)) {
  454. >         MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  455.               .addAnnotation(Override.class)
  456.               .addModifiers(PUBLIC)

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:457: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  455.               .addAnnotation(Override.class)
  456.               .addModifiers(PUBLIC)
  457. >             .returns(bestGuess(method.returnType()));
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:458: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  456.               .addModifiers(PUBLIC)
  457.               .returns(bestGuess(method.returnType()));
  458. >         String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  460.             callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:474: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  472.               builder.add("target.$L(", methodBinding.getName());
  473.               List<Parameter> parameters = methodBinding.getParameters();
  474. >             String[] listenerParameters = method.parameters();
  475.               for (int i = 0, count = parameters.size(); i < count; i++) {
  476.                 if (i > 0) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  484.                   if (debuggable) {
  485.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486. >                       listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487.                         parameter.getType());
  488.                   } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:499: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  497.           }
  498.   
  499. >         if (!"void".equals(method.returnType()) && !hasReturnValue) {
  500.             builder.add("return $L;\n", method.defaultReturn());
  501.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  498.   
  499.           if (!"void".equals(method.returnType()) && !hasReturnValue) {
  500. >           builder.add("return $L;\n", method.defaultReturn());
  501.           }
  502.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$106`.
  453.         for (ListenerMethod method : getListenerMethods(listener)) {
  454.           MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  455. >             .addAnnotation(Override.class)
  456.               .addModifiers(PUBLIC)
  457.               .returns(bestGuess(method.returnType()));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:456: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$109`.
  454.           MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  455.               .addAnnotation(Override.class)
  456. >             .addModifiers(PUBLIC)
  457.               .returns(bestGuess(method.returnType()));
  458.           String[] parameterTypes = method.parameters();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:457: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$116`.
  455.               .addAnnotation(Override.class)
  456.               .addModifiers(PUBLIC)
  457. >             .returns(bestGuess(method.returnType()));
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:460: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$140`.
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  460. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  461.           }
  462.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:460: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$144`.
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  460. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  461.           }
  462.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:460: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$148`.
  458.           String[] parameterTypes = method.parameters();
  459.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  460. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  461.           }
  462.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:467: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$170`.
  465.           Set<MethodViewBinding> methodViewBindings = methodBindings.get(method);
  466.           if (methodViewBindings != null) {
  467. >           for (MethodViewBinding methodBinding : methodViewBindings) {
  468.               if (methodBinding.hasReturnValue()) {
  469.                 hasReturnValue = true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:440: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  438.       String bindName = "source";
  439.       if (!binding.isBoundToRoot()) {
  440. >       fieldName = "view" + Integer.toHexString(binding.getId().value);
  441.         bindName = "view";
  442.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:440: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  438.       String bindName = "source";
  439.       if (!binding.isBoundToRoot()) {
  440. >       fieldName = "view" + Integer.toHexString(binding.getId().value);
  441.         bindName = "view";
  442.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:507: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$330`.
  505.         }
  506.   
  507. >       boolean requiresRemoval = listener.remover().length() != 0;
  508.         String listenerField = null;
  509.         if (requiresRemoval) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$342`.
  509.         if (requiresRemoval) {
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512.           result.addStatement("$L = $L", listenerField, callback.build());
  513.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$347`.
  509.         if (requiresRemoval) {
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512.           result.addStatement("$L = $L", listenerField, callback.build());
  513.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$355`.
  509.         if (requiresRemoval) {
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511. >         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512.           result.addStatement("$L = $L", listenerField, callback.build());
  513.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:440: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  438.       String bindName = "source";
  439.       if (!binding.isBoundToRoot()) {
  440. >       fieldName = "view" + Integer.toHexString(binding.getId().value);
  441.         bindName = "view";
  442.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  444.   
  445.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e
  446. >         : classMethodBindings.entrySet()) {
  447.         ListenerClass listener = e.getKey();
  448.         Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  444.   
  445.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e
  446. >         : classMethodBindings.entrySet()) {
  447.         ListenerClass listener = e.getKey();
  448.         Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:451: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$78`.
  449.   
  450.         TypeSpec.Builder callback = TypeSpec.anonymousClassBuilder("")
  451. >           .superclass(ClassName.bestGuess(listener.type()));
  452.   
  453.         for (ListenerMethod method : getListenerMethods(listener)) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:453: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$89`.
  451.             .superclass(ClassName.bestGuess(listener.type()));
  452.   
  453. >       for (ListenerMethod method : getListenerMethods(listener)) {
  454.           MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  455.               .addAnnotation(Override.class)

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:453: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$92`.
  451.             .superclass(ClassName.bestGuess(listener.type()));
  452.   
  453. >       for (ListenerMethod method : getListenerMethods(listener)) {
  454.           MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  455.               .addAnnotation(Override.class)

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:431: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  429.   
  430.       // We only need to emit the null check if there are zero required bindings.
  431. >     boolean needsNullChecked = binding.getRequiredBindings().isEmpty();
  432.       if (needsNullChecked) {
  433.         result.beginControlFlow("if (view != null)");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameter`.
  479.   
  480.                 Parameter parameter = parameters.get(i);
  481. >               int listenerPosition = parameter.getListenerPosition();
  482.   
  483.                 if (parameter.requiresCast(listenerParameters[listenerPosition])) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:487: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameter`.
  485.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  486.                         listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  487. >                       parameter.getType());
  488.                   } else {
  489.                     builder.add("($T) p$L", parameter.getType(), listenerPosition);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:489: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameter`.
  487.                         parameter.getType());
  488.                   } else {
  489. >                   builder.add("($T) p$L", parameter.getType(), listenerPosition);
  490.                   }
  491.                 } else {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameter`,dereference of pointer `listenerParameters`.
  481.                 int listenerPosition = parameter.getListenerPosition();
  482.   
  483. >               if (parameter.requiresCast(listenerParameters[listenerPosition])) {
  484.                   if (debuggable) {
  485.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:475: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameters`.
  473.               List<Parameter> parameters = methodBinding.getParameters();
  474.               String[] listenerParameters = method.parameters();
  475. >             for (int i = 0, count = parameters.size(); i < count; i++) {
  476.                 if (i > 0) {
  477.                   builder.add(", ");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameters`.
  478.                 }
  479.   
  480. >               Parameter parameter = parameters.get(i);
  481.                 int listenerPosition = parameter.getListenerPosition();
  482.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:433: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  431.       boolean needsNullChecked = binding.getRequiredBindings().isEmpty();
  432.       if (needsNullChecked) {
  433. >       result.beginControlFlow("if (view != null)");
  434.       }
  435.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:443: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  441.         bindName = "view";
  442.       }
  443. >     result.addStatement("$L = $N", fieldName, bindName);
  444.   
  445.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:512: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  510.           TypeName listenerClassName = bestGuess(listener.type());
  511.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  512. >         result.addStatement("$L = $L", listenerField, callback.build());
  513.         }
  514.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:526: warning: GRADUAL_DEREFERENCE
  method call on pointer `result`.
  524.   
  525.       if (needsNullChecked) {
  526. >       result.endControlFlow();
  527.       }
  528.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:438: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindBool`.
  436.       validateMember(field);
  437.   
  438. >     int id = bindBool.value();
  439.       Resources resources = source.getContext().getResources();
  440.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:432: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  430.   
  431.     private static @Nullable Unbinder parseBindBool(Object target, Field field, View source) {
  432. >     BindBool bindBool = field.getAnnotation(BindBool.class);
  433.       if (bindBool == null) {
  434.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:442: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  440.   
  441.       Object value;
  442. >     Class<?> fieldType = field.getType();
  443.       if (fieldType == boolean.class) {
  444.         value = resources.getBoolean(id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  445.       } else {
  446.         throw new IllegalStateException("@BindBool field type must be 'boolean'. ("
  447. >           + field.getDeclaringClass().getName()
  448.             + '.'
  449.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  447.             + field.getDeclaringClass().getName()
  448.             + '.'
  449. >           + field.getName()
  450.             + ')');
  451.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:439: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  437.   
  438.       int id = bindBool.value();
  439. >     Resources resources = source.getContext().getResources();
  440.   
  441.       Object value;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  444.         value = resources.getBoolean(id);
  445.       } else {
  446. >       throw new IllegalStateException("@BindBool field type must be 'boolean'. ("
  447.             + field.getDeclaringClass().getName()
  448.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  445.       } else {
  446.         throw new IllegalStateException("@BindBool field type must be 'boolean'. ("
  447. >           + field.getDeclaringClass().getName()
  448.             + '.'
  449.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  445.       } else {
  446.         throw new IllegalStateException("@BindBool field type must be 'boolean'. ("
  447. >           + field.getDeclaringClass().getName()
  448.             + '.'
  449.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  445.       } else {
  446.         throw new IllegalStateException("@BindBool field type must be 'boolean'. ("
  447. >           + field.getDeclaringClass().getName()
  448.             + '.'
  449.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  447.             + field.getDeclaringClass().getName()
  448.             + '.'
  449. >           + field.getName()
  450.             + ')');
  451.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  447.             + field.getDeclaringClass().getName()
  448.             + '.'
  449. >           + field.getName()
  450.             + ')');
  451.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  447.             + field.getDeclaringClass().getName()
  448.             + '.'
  449. >           + field.getName()
  450.             + ')');
  451.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  447.             + field.getDeclaringClass().getName()
  448.             + '.'
  449. >           + field.getName()
  450.             + ')');
  451.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  442.       Class<?> fieldType = field.getType();
  443.       if (fieldType == boolean.class) {
  444. >       value = resources.getBoolean(id);
  445.       } else {
  446.         throw new IllegalStateException("@BindBool field type must be 'boolean'. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:439: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  437.   
  438.       int id = bindBool.value();
  439. >     Resources resources = source.getContext().getResources();
  440.   
  441.       Object value;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:453: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`.
  451.           note(element, "@%s field with unresolved type (%s) "
  452.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  453. >             BindView.class.getSimpleName(), elementType, qualifiedName, simpleName);
  454.         } else {
  455.           error(element, "@%s fields must extend from View or be an interface. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:456: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$59`.
  454.         } else {
  455.           error(element, "@%s fields must extend from View or be an interface. (%s.%s)",
  456. >             BindView.class.getSimpleName(), qualifiedName, simpleName);
  457.           hasError = true;
  458.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:473: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$95`.
  471.         if (existingBindingName != null) {
  472.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  473. >             BindView.class.getSimpleName(), id, existingBindingName,
  474.               enclosingElement.getQualifiedName(), element.getSimpleName());
  475.           return;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:474: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$95`.
  472.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  473.               BindView.class.getSimpleName(), id, existingBindingName,
  474. >             enclosingElement.getQualifiedName(), element.getSimpleName());
  475.           return;
  476.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:467: warning: GRADUAL_DEREFERENCE
  method call on pointer `builderMap`.
  465.       // Assemble information on the field.
  466.       int id = element.getAnnotation(BindView.class).value();
  467. >     BindingSet.Builder builder = builderMap.get(enclosingElement);
  468.       Id resourceId = elementToId(element, BindView.class, id);
  469.       if (builder != null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:470: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  468.       Id resourceId = elementToId(element, BindView.class, id);
  469.       if (builder != null) {
  470. >       String existingBindingName = builder.findExistingBindingName(resourceId);
  471.         if (existingBindingName != null) {
  472.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  483.       boolean required = isFieldRequired(element);
  484.   
  485. >     builder.addField(resourceId, new FieldViewBinding(name, type, required));
  486.   
  487.       // Add the type-erased version to the valid binding targets set.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:453: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindView`.
  451.           note(element, "@%s field with unresolved type (%s) "
  452.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  453. >             BindView.class.getSimpleName(), elementType, qualifiedName, simpleName);
  454.         } else {
  455.           error(element, "@%s fields must extend from View or be an interface. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:456: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindView`.
  454.         } else {
  455.           error(element, "@%s fields must extend from View or be an interface. (%s.%s)",
  456. >             BindView.class.getSimpleName(), qualifiedName, simpleName);
  457.           hasError = true;
  458.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:473: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindView`.
  471.         if (existingBindingName != null) {
  472.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  473. >             BindView.class.getSimpleName(), id, existingBindingName,
  474.               enclosingElement.getQualifiedName(), element.getSimpleName());
  475.           return;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:443: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  441.       // Verify that the target type extends from View.
  442.       TypeMirror elementType = element.asType();
  443. >     if (elementType.getKind() == TypeKind.TYPEVAR) {
  444.         TypeVariable typeVariable = (TypeVariable) elementType;
  445.         elementType = typeVariable.getUpperBound();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:450: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  448.       Name simpleName = element.getSimpleName();
  449.       if (!isSubtypeOfType(elementType, VIEW_TYPE) && !isInterface(elementType)) {
  450. >       if (elementType.getKind() == TypeKind.ERROR) {
  451.           note(element, "@%s field with unresolved type (%s) "
  452.                   + "must elsewhere be generated as a View or interface. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:435: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  433.     private void parseBindView(Element element, Map<TypeElement, BindingSet.Builder> builderMap,
  434.         Set<TypeElement> erasedTargetNames) {
  435. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  436.   
  437.       // Start by verifying common generated code restrictions.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:442: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  440.   
  441.       // Verify that the target type extends from View.
  442. >     TypeMirror elementType = element.asType();
  443.       if (elementType.getKind() == TypeKind.TYPEVAR) {
  444.         TypeVariable typeVariable = (TypeVariable) elementType;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:448: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  446.       }
  447.       Name qualifiedName = enclosingElement.getQualifiedName();
  448. >     Name simpleName = element.getSimpleName();
  449.       if (!isSubtypeOfType(elementType, VIEW_TYPE) && !isInterface(elementType)) {
  450.         if (elementType.getKind() == TypeKind.ERROR) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:466: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  464.   
  465.       // Assemble information on the field.
  466. >     int id = element.getAnnotation(BindView.class).value();
  467.       BindingSet.Builder builder = builderMap.get(enclosingElement);
  468.       Id resourceId = elementToId(element, BindView.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:474: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  472.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  473.               BindView.class.getSimpleName(), id, existingBindingName,
  474. >             enclosingElement.getQualifiedName(), element.getSimpleName());
  475.           return;
  476.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  445.         elementType = typeVariable.getUpperBound();
  446.       }
  447. >     Name qualifiedName = enclosingElement.getQualifiedName();
  448.       Name simpleName = element.getSimpleName();
  449.       if (!isSubtypeOfType(elementType, VIEW_TYPE) && !isInterface(elementType)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:474: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  472.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  473.               BindView.class.getSimpleName(), id, existingBindingName,
  474. >             enclosingElement.getQualifiedName(), element.getSimpleName());
  475.           return;
  476.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:488: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  486.   
  487.       // Add the type-erased version to the valid binding targets set.
  488. >     erasedTargetNames.add(enclosingElement);
  489.     }
  490.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:485: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$130`.
  483.       boolean required = isFieldRequired(element);
  484.   
  485. >     builder.addField(resourceId, new FieldViewBinding(name, type, required));
  486.   
  487.       // Add the type-erased version to the valid binding targets set.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:466: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$74`.
  464.   
  465.       // Assemble information on the field.
  466. >     int id = element.getAnnotation(BindView.class).value();
  467.       BindingSet.Builder builder = builderMap.get(enclosingElement);
  468.       Id resourceId = elementToId(element, BindView.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `simpleName`.
  479.       }
  480.   
  481. >     String name = simpleName.toString();
  482.       TypeName type = TypeName.get(elementType);
  483.       boolean required = isFieldRequired(element);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:438: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  436.   
  437.       // Start by verifying common generated code restrictions.
  438. >     boolean hasError = isInaccessibleViaGeneratedCode(BindView.class, "fields", element)
  439.           || isBindingInWrongPackage(BindView.class, element);
  440.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:439: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  437.       // Start by verifying common generated code restrictions.
  438.       boolean hasError = isInaccessibleViaGeneratedCode(BindView.class, "fields", element)
  439. >         || isBindingInWrongPackage(BindView.class, element);
  440.   
  441.       // Verify that the target type extends from View.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:449: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  447.       Name qualifiedName = enclosingElement.getQualifiedName();
  448.       Name simpleName = element.getSimpleName();
  449. >     if (!isSubtypeOfType(elementType, VIEW_TYPE) && !isInterface(elementType)) {
  450.         if (elementType.getKind() == TypeKind.ERROR) {
  451.           note(element, "@%s field with unresolved type (%s) "

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:451: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  449.       if (!isSubtypeOfType(elementType, VIEW_TYPE) && !isInterface(elementType)) {
  450.         if (elementType.getKind() == TypeKind.ERROR) {
  451. >         note(element, "@%s field with unresolved type (%s) "
  452.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  453.               BindView.class.getSimpleName(), elementType, qualifiedName, simpleName);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:455: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  453.               BindView.class.getSimpleName(), elementType, qualifiedName, simpleName);
  454.         } else {
  455. >         error(element, "@%s fields must extend from View or be an interface. (%s.%s)",
  456.               BindView.class.getSimpleName(), qualifiedName, simpleName);
  457.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:468: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  466.       int id = element.getAnnotation(BindView.class).value();
  467.       BindingSet.Builder builder = builderMap.get(enclosingElement);
  468. >     Id resourceId = elementToId(element, BindView.class, id);
  469.       if (builder != null) {
  470.         String existingBindingName = builder.findExistingBindingName(resourceId);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:472: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  470.         String existingBindingName = builder.findExistingBindingName(resourceId);
  471.         if (existingBindingName != null) {
  472. >         error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  473.               BindView.class.getSimpleName(), id, existingBindingName,
  474.               enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:478: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  476.         }
  477.       } else {
  478. >       builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  479.       }
  480.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:445: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeVariable`.
  443.       if (elementType.getKind() == TypeKind.TYPEVAR) {
  444.         TypeVariable typeVariable = (TypeVariable) elementType;
  445. >       elementType = typeVariable.getUpperBound();
  446.       }
  447.       Name qualifiedName = enclosingElement.getQualifiedName();

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:446: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  444.       assertAbout(javaSource()).that(source)
  445.           .processedWith(new ButterKnifeProcessor())
  446. >         .failsToCompile()
  447.           .withErrorContaining("@BindViews must be a List or array. (test.Test.thing)")
  448.           .in(source).onLine(6);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:447: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  445.           .processedWith(new ButterKnifeProcessor())
  446.           .failsToCompile()
  447. >         .withErrorContaining("@BindViews must be a List or array. (test.Test.thing)")
  448.           .in(source).onLine(6);
  449.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:448: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  446.           .failsToCompile()
  447.           .withErrorContaining("@BindViews must be a List or array. (test.Test.thing)")
  448. >         .in(source).onLine(6);
  449.     }
  450.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:448: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  446.           .failsToCompile()
  447.           .withErrorContaining("@BindViews must be a List or array. (test.Test.thing)")
  448. >         .in(source).onLine(6);
  449.     }
  450.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  442.       );
  443.   
  444. >     assertAbout(javaSource()).that(source)
  445.           .processedWith(new ButterKnifeProcessor())
  446.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:445: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  443.   
  444.       assertAbout(javaSource()).that(source)
  445. >         .processedWith(new ButterKnifeProcessor())
  446.           .failsToCompile()
  447.           .withErrorContaining("@BindViews must be a List or array. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:444: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  442.       );
  443.   
  444. >     assertAbout(javaSource()).that(source)
  445.           .processedWith(new ButterKnifeProcessor())
  446.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:463: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  461.       assertAbout(javaSource()).that(source)
  462.           .processedWith(new ButterKnifeProcessor())
  463. >         .failsToCompile()
  464.           .withErrorContaining(
  465.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:464: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  462.           .processedWith(new ButterKnifeProcessor())
  463.           .failsToCompile()
  464. >         .withErrorContaining(
  465.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
  466.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:466: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  464.           .withErrorContaining(
  465.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
  466. >         .in(source).onLine(5);
  467.     }
  468.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:466: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  464.           .withErrorContaining(
  465.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
  466. >         .in(source).onLine(5);
  467.     }
  468.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:461: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  459.       );
  460.   
  461. >     assertAbout(javaSource()).that(source)
  462.           .processedWith(new ButterKnifeProcessor())
  463.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:462: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  460.   
  461.       assertAbout(javaSource()).that(source)
  462. >         .processedWith(new ButterKnifeProcessor())
  463.           .failsToCompile()
  464.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:461: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  459.       );
  460.   
  461. >     assertAbout(javaSource()).that(source)
  462.           .processedWith(new ButterKnifeProcessor())
  463.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:464: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindColor`.
  462.       validateMember(field);
  463.   
  464. >     int id = bindColor.value();
  465.       Context context = source.getContext();
  466.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:458: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  456.   
  457.     private static @Nullable Unbinder parseBindColor(Object target, Field field, View source) {
  458. >     BindColor bindColor = field.getAnnotation(BindColor.class);
  459.       if (bindColor == null) {
  460.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:468: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  466.   
  467.       Object value;
  468. >     Class<?> fieldType = field.getType();
  469.       if (fieldType == int.class) {
  470.         value = ContextCompat.getColor(context, id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:475: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  473.       } else {
  474.         throw new IllegalStateException("@BindColor field type must be 'int' or 'ColorStateList'. ("
  475. >           + field.getDeclaringClass().getName()
  476.             + '.'
  477.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:477: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  475.             + field.getDeclaringClass().getName()
  476.             + '.'
  477. >           + field.getName()
  478.             + ')');
  479.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:474: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  472.         value = ContextCompat.getColorStateList(context, id);
  473.       } else {
  474. >       throw new IllegalStateException("@BindColor field type must be 'int' or 'ColorStateList'. ("
  475.             + field.getDeclaringClass().getName()
  476.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:475: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  473.       } else {
  474.         throw new IllegalStateException("@BindColor field type must be 'int' or 'ColorStateList'. ("
  475. >           + field.getDeclaringClass().getName()
  476.             + '.'
  477.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:475: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  473.       } else {
  474.         throw new IllegalStateException("@BindColor field type must be 'int' or 'ColorStateList'. ("
  475. >           + field.getDeclaringClass().getName()
  476.             + '.'
  477.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:475: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  473.       } else {
  474.         throw new IllegalStateException("@BindColor field type must be 'int' or 'ColorStateList'. ("
  475. >           + field.getDeclaringClass().getName()
  476.             + '.'
  477.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:477: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  475.             + field.getDeclaringClass().getName()
  476.             + '.'
  477. >           + field.getName()
  478.             + ')');
  479.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:477: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  475.             + field.getDeclaringClass().getName()
  476.             + '.'
  477. >           + field.getName()
  478.             + ')');
  479.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:477: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  475.             + field.getDeclaringClass().getName()
  476.             + '.'
  477. >           + field.getName()
  478.             + ')');
  479.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:477: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  475.             + field.getDeclaringClass().getName()
  476.             + '.'
  477. >           + field.getName()
  478.             + ')');
  479.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:465: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  463.   
  464.       int id = bindColor.value();
  465. >     Context context = source.getContext();
  466.   
  467.       Object value;

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:515: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  513.       );
  514.   
  515. >     assertAbout(javaSource()).that(source)
  516.           .withCompilerOptions("-Xlint:-processing")
  517.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:517: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  515.       assertAbout(javaSource()).that(source)
  516.           .withCompilerOptions("-Xlint:-processing")
  517. >         .processedWith(new ButterKnifeProcessor())
  518.           .compilesWithoutError()
  519.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:516: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  514.   
  515.       assertAbout(javaSource()).that(source)
  516. >         .withCompilerOptions("-Xlint:-processing")
  517.           .processedWith(new ButterKnifeProcessor())
  518.           .compilesWithoutError()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:518: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  516.           .withCompilerOptions("-Xlint:-processing")
  517.           .processedWith(new ButterKnifeProcessor())
  518. >         .compilesWithoutError()
  519.           .and()
  520.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:519: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  517.           .processedWith(new ButterKnifeProcessor())
  518.           .compilesWithoutError()
  519. >         .and()
  520.           .generatesSources(bindingSource);
  521.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:520: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  518.           .compilesWithoutError()
  519.           .and()
  520. >         .generatesSources(bindingSource);
  521.     }
  522.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:515: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  513.       );
  514.   
  515. >     assertAbout(javaSource()).that(source)
  516.           .withCompilerOptions("-Xlint:-processing")
  517.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:516: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  514.   
  515.       assertAbout(javaSource()).that(source)
  516. >         .withCompilerOptions("-Xlint:-processing")
  517.           .processedWith(new ButterKnifeProcessor())
  518.           .compilesWithoutError()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:480: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  478.       assertAbout(javaSource()).that(source)
  479.           .processedWith(new ButterKnifeProcessor())
  480. >         .failsToCompile()
  481.           .withErrorContaining(
  482.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:481: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  479.           .processedWith(new ButterKnifeProcessor())
  480.           .failsToCompile()
  481. >         .withErrorContaining(
  482.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
  483.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  481.           .withErrorContaining(
  482.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
  483. >         .in(source).onLine(4);
  484.     }
  485.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:483: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  481.           .withErrorContaining(
  482.               "@BindViews List or array type must extend from View or be an interface. (test.Test.thing)")
  483. >         .in(source).onLine(4);
  484.     }
  485.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:478: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  476.       );
  477.   
  478. >     assertAbout(javaSource()).that(source)
  479.           .processedWith(new ButterKnifeProcessor())
  480.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:479: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  477.   
  478.       assertAbout(javaSource()).that(source)
  479. >         .processedWith(new ButterKnifeProcessor())
  480.           .failsToCompile()
  481.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:478: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  476.       );
  477.   
  478. >     assertAbout(javaSource()).that(source)
  479.           .processedWith(new ButterKnifeProcessor())
  480.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:492: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindDimen`.
  490.       validateMember(field);
  491.   
  492. >     int id = bindDimen.value();
  493.       Resources resources = source.getContext().getResources();
  494.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:486: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  484.   
  485.     private static @Nullable Unbinder parseBindDimen(Object target, Field field, View source) {
  486. >     BindDimen bindDimen = field.getAnnotation(BindDimen.class);
  487.       if (bindDimen == null) {
  488.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:495: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  493.       Resources resources = source.getContext().getResources();
  494.   
  495. >     Class<?> fieldType = field.getType();
  496.       Object value;
  497.       if (fieldType == int.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  501.       } else {
  502.         throw new IllegalStateException("@BindDimen field type must be 'int' or 'float'. ("
  503. >           + field.getDeclaringClass().getName()
  504.             + '.'
  505.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  503.             + field.getDeclaringClass().getName()
  504.             + '.'
  505. >           + field.getName()
  506.             + ')');
  507.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:493: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  491.   
  492.       int id = bindDimen.value();
  493. >     Resources resources = source.getContext().getResources();
  494.   
  495.       Class<?> fieldType = field.getType();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:502: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  500.         value = resources.getDimension(id);
  501.       } else {
  502. >       throw new IllegalStateException("@BindDimen field type must be 'int' or 'float'. ("
  503.             + field.getDeclaringClass().getName()
  504.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  501.       } else {
  502.         throw new IllegalStateException("@BindDimen field type must be 'int' or 'float'. ("
  503. >           + field.getDeclaringClass().getName()
  504.             + '.'
  505.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  501.       } else {
  502.         throw new IllegalStateException("@BindDimen field type must be 'int' or 'float'. ("
  503. >           + field.getDeclaringClass().getName()
  504.             + '.'
  505.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:503: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  501.       } else {
  502.         throw new IllegalStateException("@BindDimen field type must be 'int' or 'float'. ("
  503. >           + field.getDeclaringClass().getName()
  504.             + '.'
  505.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  503.             + field.getDeclaringClass().getName()
  504.             + '.'
  505. >           + field.getName()
  506.             + ')');
  507.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  503.             + field.getDeclaringClass().getName()
  504.             + '.'
  505. >           + field.getName()
  506.             + ')');
  507.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  503.             + field.getDeclaringClass().getName()
  504.             + '.'
  505. >           + field.getName()
  506.             + ')');
  507.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:505: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$67`.
  503.             + field.getDeclaringClass().getName()
  504.             + '.'
  505. >           + field.getName()
  506.             + ')');
  507.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:498: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  496.       Object value;
  497.       if (fieldType == int.class) {
  498. >       value = resources.getDimensionPixelSize(id);
  499.       } else if (fieldType == float.class) {
  500.         value = resources.getDimension(id);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  498.         value = resources.getDimensionPixelSize(id);
  499.       } else if (fieldType == float.class) {
  500. >       value = resources.getDimension(id);
  501.       } else {
  502.         throw new IllegalStateException("@BindDimen field type must be 'int' or 'float'. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:493: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  491.   
  492.       int id = bindDimen.value();
  493. >     Resources resources = source.getContext().getResources();
  494.   
  495.       Class<?> fieldType = field.getType();

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:499: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  497.       assertAbout(javaSource()).that(source)
  498.           .processedWith(new ButterKnifeProcessor())
  499. >         .failsToCompile()
  500.           .withErrorContaining("@BindViews annotation contains duplicate ID 1. (test.Test.thing)")
  501.           .in(source).onLine(6);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  498.           .processedWith(new ButterKnifeProcessor())
  499.           .failsToCompile()
  500. >         .withErrorContaining("@BindViews annotation contains duplicate ID 1. (test.Test.thing)")
  501.           .in(source).onLine(6);
  502.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  499.           .failsToCompile()
  500.           .withErrorContaining("@BindViews annotation contains duplicate ID 1. (test.Test.thing)")
  501. >         .in(source).onLine(6);
  502.     }
  503.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  499.           .failsToCompile()
  500.           .withErrorContaining("@BindViews annotation contains duplicate ID 1. (test.Test.thing)")
  501. >         .in(source).onLine(6);
  502.     }
  503.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:497: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  495.       );
  496.   
  497. >     assertAbout(javaSource()).that(source)
  498.           .processedWith(new ButterKnifeProcessor())
  499.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:498: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  496.   
  497.       assertAbout(javaSource()).that(source)
  498. >         .processedWith(new ButterKnifeProcessor())
  499.           .failsToCompile()
  500.           .withErrorContaining("@BindViews annotation contains duplicate ID 1. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:497: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  495.       );
  496.   
  497. >     assertAbout(javaSource()).that(source)
  498.           .processedWith(new ButterKnifeProcessor())
  499.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:535: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$111`.
  533.           note(element, "@%s List or array with unresolved type (%s) "
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  535. >             BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),
  536.               element.getSimpleName());
  537.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:536: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$111`.
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  535.               BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),
  536. >             element.getSimpleName());
  537.         } else {
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:539: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$131`.
  537.         } else {
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  539. >             BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  540.               element.getSimpleName());
  541.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:540: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$131`.
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  539.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  540. >             element.getSimpleName());
  541.           hasError = true;
  542.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:549: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$165`.
  547.       int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {
  549. >       error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  550.             enclosingElement.getQualifiedName(), element.getSimpleName());
  551.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:550: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$165`.
  548.       if (ids.length == 0) {
  549.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  550. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  551.         hasError = true;
  552.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:557: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$186`.
  555.       if (duplicateId != null) {
  556.         error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  557. >           BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  558.             element.getSimpleName());
  559.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:558: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$186`.
  556.         error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  557.             BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  558. >           element.getSimpleName());
  559.         hasError = true;
  560.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:513: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`.
  511.         if (typeArguments.size() != 1) {
  512.           error(element, "@%s List must have a generic component. (%s.%s)",
  513. >             BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  514.               element.getSimpleName());
  515.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:514: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$45`.
  512.           error(element, "@%s List must have a generic component. (%s.%s)",
  513.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  514. >             element.getSimpleName());
  515.           hasError = true;
  516.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:521: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$69`.
  519.         kind = FieldCollectionViewBinding.Kind.LIST;
  520.       } else {
  521. >       error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  522.             enclosingElement.getQualifiedName(), element.getSimpleName());
  523.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:522: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$69`.
  520.       } else {
  521.         error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  522. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  523.         hasError = true;
  524.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:506: warning: GRADUAL_DEREFERENCE
  method call on pointer `arrayType`.
  504.       if (elementType.getKind() == TypeKind.ARRAY) {
  505.         ArrayType arrayType = (ArrayType) elementType;
  506. >       viewType = arrayType.getComponentType();
  507.         kind = FieldCollectionViewBinding.Kind.ARRAY;
  508.       } else if (LIST_TYPE.equals(erasedType)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:570: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  568.   
  569.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  570. >     builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),
  571.           new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  572.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:513: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindViews`.
  511.         if (typeArguments.size() != 1) {
  512.           error(element, "@%s List must have a generic component. (%s.%s)",
  513. >             BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  514.               element.getSimpleName());
  515.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:521: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindViews`.
  519.         kind = FieldCollectionViewBinding.Kind.LIST;
  520.       } else {
  521. >       error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  522.             enclosingElement.getQualifiedName(), element.getSimpleName());
  523.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:535: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindViews`.
  533.           note(element, "@%s List or array with unresolved type (%s) "
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  535. >             BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),
  536.               element.getSimpleName());
  537.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:539: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindViews`.
  537.         } else {
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  539. >             BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  540.               element.getSimpleName());
  541.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:549: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindViews`.
  547.       int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {
  549. >       error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  550.             enclosingElement.getQualifiedName(), element.getSimpleName());
  551.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:557: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindViews`.
  555.       if (duplicateId != null) {
  556.         error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  557. >           BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  558.             element.getSimpleName());
  559.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:508: warning: GRADUAL_DEREFERENCE
  method call on pointer `compiler.ButterKnifeProcessor.butterknife.compiler.ButterKnifeProcessor.LIST_TYPE`.
  506.         viewType = arrayType.getComponentType();
  507.         kind = FieldCollectionViewBinding.Kind.ARRAY;
  508. >     } else if (LIST_TYPE.equals(erasedType)) {
  509.         DeclaredType declaredType = (DeclaredType) elementType;
  510.         List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:510: warning: GRADUAL_DEREFERENCE
  method call on pointer `declaredType`.
  508.       } else if (LIST_TYPE.equals(erasedType)) {
  509.         DeclaredType declaredType = (DeclaredType) elementType;
  510. >       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  511.         if (typeArguments.size() != 1) {
  512.           error(element, "@%s List must have a generic component. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:504: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  502.       TypeMirror viewType = null;
  503.       FieldCollectionViewBinding.Kind kind = null;
  504. >     if (elementType.getKind() == TypeKind.ARRAY) {
  505.         ArrayType arrayType = (ArrayType) elementType;
  506.         viewType = arrayType.getComponentType();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:493: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  491.     private void parseBindViews(Element element, Map<TypeElement, BindingSet.Builder> builderMap,
  492.         Set<TypeElement> erasedTargetNames) {
  493. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  494.   
  495.       // Start by verifying common generated code restrictions.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:500: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  498.   
  499.       // Verify that the type is a List or an array.
  500. >     TypeMirror elementType = element.asType();
  501.       String erasedType = doubleErasure(elementType);
  502.       TypeMirror viewType = null;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:514: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  512.           error(element, "@%s List must have a generic component. (%s.%s)",
  513.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  514. >             element.getSimpleName());
  515.           hasError = true;
  516.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:522: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  520.       } else {
  521.         error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  522. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  523.         hasError = true;
  524.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:536: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  535.               BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),
  536. >             element.getSimpleName());
  537.         } else {
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:540: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  539.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  540. >             element.getSimpleName());
  541.           hasError = true;
  542.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:546: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  544.   
  545.       // Assemble information on the field.
  546. >     String name = element.getSimpleName().toString();
  547.       int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:547: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  545.       // Assemble information on the field.
  546.       String name = element.getSimpleName().toString();
  547. >     int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {
  549.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:550: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  548.       if (ids.length == 0) {
  549.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  550. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  551.         hasError = true;
  552.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  556.         error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  557.             BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  558. >           element.getSimpleName());
  559.         hasError = true;
  560.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:513: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  511.         if (typeArguments.size() != 1) {
  512.           error(element, "@%s List must have a generic component. (%s.%s)",
  513. >             BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  514.               element.getSimpleName());
  515.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:522: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  520.       } else {
  521.         error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  522. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  523.         hasError = true;
  524.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:535: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  533.           note(element, "@%s List or array with unresolved type (%s) "
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  535. >             BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),
  536.               element.getSimpleName());
  537.         } else {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:539: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  537.         } else {
  538.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  539. >             BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  540.               element.getSimpleName());
  541.           hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:550: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  548.       if (ids.length == 0) {
  549.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  550. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  551.         hasError = true;
  552.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:557: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  555.       if (duplicateId != null) {
  556.         error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  557. >           BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  558.             element.getSimpleName());
  559.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:573: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  571.           new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  572.   
  573. >     erasedTargetNames.add(enclosingElement);
  574.     }
  575.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:546: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$151`.
  544.   
  545.       // Assemble information on the field.
  546. >     String name = element.getSimpleName().toString();
  547.       int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:547: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$157`.
  545.       // Assemble information on the field.
  546.       String name = element.getSimpleName().toString();
  547. >     int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {
  549.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:571: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$223`.
  569.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  570.       builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),
  571. >         new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  572.   
  573.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:571: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$227`.
  569.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  570.       builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),
  571. >         new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  572.   
  573.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:571: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$230`.
  569.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  570.       builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),
  571. >         new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  572.   
  573.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:496: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  494.   
  495.       // Start by verifying common generated code restrictions.
  496. >     boolean hasError = isInaccessibleViaGeneratedCode(BindViews.class, "fields", element)
  497.           || isBindingInWrongPackage(BindViews.class, element);
  498.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:497: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  495.       // Start by verifying common generated code restrictions.
  496.       boolean hasError = isInaccessibleViaGeneratedCode(BindViews.class, "fields", element)
  497. >         || isBindingInWrongPackage(BindViews.class, element);
  498.   
  499.       // Verify that the type is a List or an array.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:501: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  499.       // Verify that the type is a List or an array.
  500.       TypeMirror elementType = element.asType();
  501. >     String erasedType = doubleErasure(elementType);
  502.       TypeMirror viewType = null;
  503.       FieldCollectionViewBinding.Kind kind = null;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:512: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  510.         List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  511.         if (typeArguments.size() != 1) {
  512. >         error(element, "@%s List must have a generic component. (%s.%s)",
  513.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  514.               element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:521: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  519.         kind = FieldCollectionViewBinding.Kind.LIST;
  520.       } else {
  521. >       error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  522.             enclosingElement.getQualifiedName(), element.getSimpleName());
  523.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:531: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  529.   
  530.       // Verify that the target type extends from View.
  531. >     if (viewType != null && !isSubtypeOfType(viewType, VIEW_TYPE) && !isInterface(viewType)) {
  532.         if (viewType.getKind() == TypeKind.ERROR) {
  533.           note(element, "@%s List or array with unresolved type (%s) "

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:533: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  531.       if (viewType != null && !isSubtypeOfType(viewType, VIEW_TYPE) && !isInterface(viewType)) {
  532.         if (viewType.getKind() == TypeKind.ERROR) {
  533. >         note(element, "@%s List or array with unresolved type (%s) "
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  535.               BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:538: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  536.               element.getSimpleName());
  537.         } else {
  538. >         error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  539.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  540.               element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:549: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  547.       int[] ids = element.getAnnotation(BindViews.class).value();
  548.       if (ids.length == 0) {
  549. >       error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  550.             enclosingElement.getQualifiedName(), element.getSimpleName());
  551.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:556: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  554.       Integer duplicateId = findDuplicate(ids);
  555.       if (duplicateId != null) {
  556. >       error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  557.             BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  558.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:569: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  567.       boolean required = isFieldRequired(element);
  568.   
  569. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  570.       builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),
  571.           new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:571: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  569.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  570.       builder.addFieldCollection(new FieldCollectionViewBinding(name, type, requireNonNull(kind),
  571. >         new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  572.   
  573.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:511: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeArguments`.
  509.         DeclaredType declaredType = (DeclaredType) elementType;
  510.         List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  511. >       if (typeArguments.size() != 1) {
  512.           error(element, "@%s List must have a generic component. (%s.%s)",
  513.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:517: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeArguments`.
  515.           hasError = true;
  516.         } else {
  517. >         viewType = typeArguments.get(0);
  518.         }
  519.         kind = FieldCollectionViewBinding.Kind.LIST;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:527: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeVariable`.
  525.       if (viewType != null && viewType.getKind() == TypeKind.TYPEVAR) {
  526.         TypeVariable typeVariable = (TypeVariable) viewType;
  527. >       viewType = typeVariable.getUpperBound();
  528.       }
  529.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:525: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewType`.
  523.         hasError = true;
  524.       }
  525. >     if (viewType != null && viewType.getKind() == TypeKind.TYPEVAR) {
  526.         TypeVariable typeVariable = (TypeVariable) viewType;
  527.         viewType = typeVariable.getUpperBound();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:532: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewType`.
  530.       // Verify that the target type extends from View.
  531.       if (viewType != null && !isSubtypeOfType(viewType, VIEW_TYPE) && !isInterface(viewType)) {
  532. >       if (viewType.getKind() == TypeKind.ERROR) {
  533.           note(element, "@%s List or array with unresolved type (%s) "
  534.                   + "must elsewhere be generated as a View or interface. (%s.%s)",

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:544: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  542.       );
  543.   
  544. >     assertAbout(javaSource()).that(source)
  545.           .withCompilerOptions("-Xlint:-processing")
  546.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:546: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  544.       assertAbout(javaSource()).that(source)
  545.           .withCompilerOptions("-Xlint:-processing")
  546. >         .processedWith(new ButterKnifeProcessor())
  547.           .compilesWithoutWarnings()
  548.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:545: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  543.   
  544.       assertAbout(javaSource()).that(source)
  545. >         .withCompilerOptions("-Xlint:-processing")
  546.           .processedWith(new ButterKnifeProcessor())
  547.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:547: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  545.           .withCompilerOptions("-Xlint:-processing")
  546.           .processedWith(new ButterKnifeProcessor())
  547. >         .compilesWithoutWarnings()
  548.           .and()
  549.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:548: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  546.           .processedWith(new ButterKnifeProcessor())
  547.           .compilesWithoutWarnings()
  548. >         .and()
  549.           .generatesSources(bindingSource);
  550.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:549: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  547.           .compilesWithoutWarnings()
  548.           .and()
  549. >         .generatesSources(bindingSource);
  550.     }
  551.   

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:544: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  542.       );
  543.   
  544. >     assertAbout(javaSource()).that(source)
  545.           .withCompilerOptions("-Xlint:-processing")
  546.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:545: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  543.   
  544.       assertAbout(javaSource()).that(source)
  545. >         .withCompilerOptions("-Xlint:-processing")
  546.           .processedWith(new ButterKnifeProcessor())
  547.           .compilesWithoutWarnings()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:520: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindDrawable`.
  518.       validateMember(field);
  519.   
  520. >     int id = bindDrawable.value();
  521.       int tint = bindDrawable.tint();
  522.       Context context = source.getContext();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:521: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindDrawable`.
  519.   
  520.       int id = bindDrawable.value();
  521. >     int tint = bindDrawable.tint();
  522.       Context context = source.getContext();
  523.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:514: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  512.   
  513.     private static @Nullable Unbinder parseBindDrawable(Object target, Field field, View source) {
  514. >     BindDrawable bindDrawable = field.getAnnotation(BindDrawable.class);
  515.       if (bindDrawable == null) {
  516.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:524: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  522.       Context context = source.getContext();
  523.   
  524. >     Class<?> fieldType = field.getType();
  525.       Object value;
  526.       if (fieldType == Drawable.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:532: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  530.       } else {
  531.         throw new IllegalStateException("@BindDrawable field type must be 'Drawable'. ("
  532. >           + field.getDeclaringClass().getName()
  533.             + '.'
  534.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  532.             + field.getDeclaringClass().getName()
  533.             + '.'
  534. >           + field.getName()
  535.             + ')');
  536.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:531: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  529.             : ContextCompat.getDrawable(context, id);
  530.       } else {
  531. >       throw new IllegalStateException("@BindDrawable field type must be 'Drawable'. ("
  532.             + field.getDeclaringClass().getName()
  533.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:532: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  530.       } else {
  531.         throw new IllegalStateException("@BindDrawable field type must be 'Drawable'. ("
  532. >           + field.getDeclaringClass().getName()
  533.             + '.'
  534.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:532: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  530.       } else {
  531.         throw new IllegalStateException("@BindDrawable field type must be 'Drawable'. ("
  532. >           + field.getDeclaringClass().getName()
  533.             + '.'
  534.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:532: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  530.       } else {
  531.         throw new IllegalStateException("@BindDrawable field type must be 'Drawable'. ("
  532. >           + field.getDeclaringClass().getName()
  533.             + '.'
  534.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$49`.
  532.             + field.getDeclaringClass().getName()
  533.             + '.'
  534. >           + field.getName()
  535.             + ')');
  536.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  532.             + field.getDeclaringClass().getName()
  533.             + '.'
  534. >           + field.getName()
  535.             + ')');
  536.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  532.             + field.getDeclaringClass().getName()
  533.             + '.'
  534. >           + field.getName()
  535.             + ')');
  536.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  532.             + field.getDeclaringClass().getName()
  533.             + '.'
  534. >           + field.getName()
  535.             + ')');
  536.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:522: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  520.       int id = bindDrawable.value();
  521.       int tint = bindDrawable.tint();
  522. >     Context context = source.getContext();
  523.   
  524.       Class<?> fieldType = field.getType();

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:535: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  533.       );
  534.   
  535. >     assertAbout(javaSource()).that(source)
  536.           .withCompilerOptions("-Xlint:-processing")
  537.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:537: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  535.       assertAbout(javaSource()).that(source)
  536.           .withCompilerOptions("-Xlint:-processing")
  537. >         .processedWith(new ButterKnifeProcessor())
  538.           .compilesWithoutWarnings();
  539.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:536: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  534.   
  535.       assertAbout(javaSource()).that(source)
  536. >         .withCompilerOptions("-Xlint:-processing")
  537.           .processedWith(new ButterKnifeProcessor())
  538.           .compilesWithoutWarnings();

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:538: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  536.           .withCompilerOptions("-Xlint:-processing")
  537.           .processedWith(new ButterKnifeProcessor())
  538. >         .compilesWithoutWarnings();
  539.     }
  540.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:535: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  533.       );
  534.   
  535. >     assertAbout(javaSource()).that(source)
  536.           .withCompilerOptions("-Xlint:-processing")
  537.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:536: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  534.   
  535.       assertAbout(javaSource()).that(source)
  536. >         .withCompilerOptions("-Xlint:-processing")
  537.           .processedWith(new ButterKnifeProcessor())
  538.           .compilesWithoutWarnings();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:538: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$19`.
  536.         List<ListenerMethod> methods = new ArrayList<>();
  537.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  538. >       for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  539.           Field callbackField = callbacks.getField(callbackMethod.name());
  540.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:543: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$44`.
  541.           if (method == null) {
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543. >               callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:544: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$44`.
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543.                 callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544. >               callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }
  546.           methods.add(method);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:544: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.internal.ListenerMethod`.
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543.                 callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544. >               callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }
  546.           methods.add(method);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:540: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackField`.
  538.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  539.           Field callbackField = callbacks.getField(callbackMethod.name());
  540. >         ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);
  541.           if (method == null) {
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:539: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackMethod`.
  537.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  538.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  539. >         Field callbackField = callbacks.getField(callbackMethod.name());
  540.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);
  541.           if (method == null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:544: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackMethod`.
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543.                 callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544. >               callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }
  546.           methods.add(method);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:538: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbacks`.
  536.         List<ListenerMethod> methods = new ArrayList<>();
  537.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  538. >       for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  539.           Field callbackField = callbacks.getField(callbackMethod.name());
  540.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:539: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbacks`.
  537.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  538.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  539. >         Field callbackField = callbacks.getField(callbackMethod.name());
  540.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);
  541.           if (method == null) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:543: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbacks`.
  541.           if (method == null) {
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543. >               callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:531: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  529.   
  530.     private static List<ListenerMethod> getListenerMethods(ListenerClass listener) {
  531. >     if (listener.method().length == 1) {
  532.         return Arrays.asList(listener.method());
  533.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:532: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  530.     private static List<ListenerMethod> getListenerMethods(ListenerClass listener) {
  531.       if (listener.method().length == 1) {
  532. >       return Arrays.asList(listener.method());
  533.       }
  534.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:537: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  535.       try {
  536.         List<ListenerMethod> methods = new ArrayList<>();
  537. >       Class<? extends Enum<?>> callbacks = listener.callbacks();
  538.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  539.           Field callbackField = callbacks.getField(callbackMethod.name());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:546: warning: GRADUAL_DEREFERENCE
  method call on pointer `methods`.
  544.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }
  546. >         methods.add(method);
  547.         }
  548.         return methods;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:536: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$12`.
  534.   
  535.       try {
  536. >       List<ListenerMethod> methods = new ArrayList<>();
  537.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  538.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:543: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$47`.
  541.           if (method == null) {
  542.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543. >               callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  545.           }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:542: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$68`.
  540.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);
  541.           if (method == null) {
  542. >           throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  543.                 callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  544.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:550: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  548.         return methods;
  549.       } catch (NoSuchFieldException e) {
  550. >       throw new AssertionError(e);
  551.       }
  552.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:578: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  576.       );
  577.   
  578. >     assertAbout(javaSource()).that(source)
  579.           .withCompilerOptions("-Xlint:-processing")
  580.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:580: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  578.       assertAbout(javaSource()).that(source)
  579.           .withCompilerOptions("-Xlint:-processing")
  580. >         .processedWith(new ButterKnifeProcessor())
  581.           .compilesWithoutWarnings()
  582.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:579: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  577.   
  578.       assertAbout(javaSource()).that(source)
  579. >         .withCompilerOptions("-Xlint:-processing")
  580.           .processedWith(new ButterKnifeProcessor())
  581.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:581: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  579.           .withCompilerOptions("-Xlint:-processing")
  580.           .processedWith(new ButterKnifeProcessor())
  581. >         .compilesWithoutWarnings()
  582.           .and()
  583.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:582: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  580.           .processedWith(new ButterKnifeProcessor())
  581.           .compilesWithoutWarnings()
  582. >         .and()
  583.           .generatesSources(bindingSource);
  584.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:583: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  581.           .compilesWithoutWarnings()
  582.           .and()
  583. >         .generatesSources(bindingSource);
  584.     }
  585.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:578: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  576.       );
  577.   
  578. >     assertAbout(javaSource()).that(source)
  579.           .withCompilerOptions("-Xlint:-processing")
  580.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:579: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  577.   
  578.       assertAbout(javaSource()).that(source)
  579. >         .withCompilerOptions("-Xlint:-processing")
  580.           .processedWith(new ButterKnifeProcessor())
  581.           .compilesWithoutWarnings()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:549: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindInt`.
  547.       validateMember(field);
  548.   
  549. >     int id = bindInt.value();
  550.       Context context = source.getContext();
  551.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:543: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  541.   
  542.     private static @Nullable Unbinder parseBindFloat(Object target, Field field, View source) {
  543. >     BindFloat bindInt = field.getAnnotation(BindFloat.class);
  544.       if (bindInt == null) {
  545.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:552: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  550.       Context context = source.getContext();
  551.   
  552. >     Class<?> fieldType = field.getType();
  553.       Object value;
  554.       if (fieldType == float.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  556.       } else {
  557.         throw new IllegalStateException("@BindFloat field type must be 'float'. ("
  558. >           + field.getDeclaringClass().getName()
  559.             + '.'
  560.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  558.             + field.getDeclaringClass().getName()
  559.             + '.'
  560. >           + field.getName()
  561.             + ')');
  562.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:557: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  555.         value = Utils.getFloat(context, id);
  556.       } else {
  557. >       throw new IllegalStateException("@BindFloat field type must be 'float'. ("
  558.             + field.getDeclaringClass().getName()
  559.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  556.       } else {
  557.         throw new IllegalStateException("@BindFloat field type must be 'float'. ("
  558. >           + field.getDeclaringClass().getName()
  559.             + '.'
  560.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  556.       } else {
  557.         throw new IllegalStateException("@BindFloat field type must be 'float'. ("
  558. >           + field.getDeclaringClass().getName()
  559.             + '.'
  560.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  556.       } else {
  557.         throw new IllegalStateException("@BindFloat field type must be 'float'. ("
  558. >           + field.getDeclaringClass().getName()
  559.             + '.'
  560.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  558.             + field.getDeclaringClass().getName()
  559.             + '.'
  560. >           + field.getName()
  561.             + ')');
  562.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  558.             + field.getDeclaringClass().getName()
  559.             + '.'
  560. >           + field.getName()
  561.             + ')');
  562.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  558.             + field.getDeclaringClass().getName()
  559.             + '.'
  560. >           + field.getName()
  561.             + ')');
  562.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  558.             + field.getDeclaringClass().getName()
  559.             + '.'
  560. >           + field.getName()
  561.             + ')');
  562.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:550: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  548.   
  549.       int id = bindInt.value();
  550. >     Context context = source.getContext();
  551.   
  552.       Class<?> fieldType = field.getType();

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:593: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$9`.
  591.       );
  592.   
  593. >     assertAbout(javaSource()).that(source)
  594.           .withCompilerOptions("-Xlint:-processing")
  595.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:595: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  593.       assertAbout(javaSource()).that(source)
  594.           .withCompilerOptions("-Xlint:-processing")
  595. >         .processedWith(new ButterKnifeProcessor())
  596.           .compilesWithoutWarnings()
  597.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:594: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  592.   
  593.       assertAbout(javaSource()).that(source)
  594. >         .withCompilerOptions("-Xlint:-processing")
  595.           .processedWith(new ButterKnifeProcessor())
  596.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:596: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  594.           .withCompilerOptions("-Xlint:-processing")
  595.           .processedWith(new ButterKnifeProcessor())
  596. >         .compilesWithoutWarnings()
  597.           .and()
  598.           .generatesSources(bindingSource);

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  595.           .processedWith(new ButterKnifeProcessor())
  596.           .compilesWithoutWarnings()
  597. >         .and()
  598.           .generatesSources(bindingSource);
  599.     }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:598: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  596.           .compilesWithoutWarnings()
  597.           .and()
  598. >         .generatesSources(bindingSource);
  599.     }
  600.   }

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:593: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  591.       );
  592.   
  593. >     assertAbout(javaSource()).that(source)
  594.           .withCompilerOptions("-Xlint:-processing")
  595.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewsTest.java:594: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  592.   
  593.       assertAbout(javaSource()).that(source)
  594. >         .withCompilerOptions("-Xlint:-processing")
  595.           .processedWith(new ButterKnifeProcessor())
  596.           .compilesWithoutWarnings()

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:555: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  553.   
  554.     static String asHumanDescription(Collection<? extends MemberViewBinding> bindings) {
  555. >     Iterator<? extends MemberViewBinding> iterator = bindings.iterator();
  556.       switch (bindings.size()) {
  557.         case 1:

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:556: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  554.     static String asHumanDescription(Collection<? extends MemberViewBinding> bindings) {
  555.       Iterator<? extends MemberViewBinding> iterator = bindings.iterator();
  556. >     switch (bindings.size()) {
  557.         case 1:
  558.           return iterator.next().getDescription();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:563: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  561.         default:
  562.           StringBuilder builder = new StringBuilder();
  563. >         for (int i = 0, count = bindings.size(); i < count; i++) {
  564.             if (i != 0) {
  565.               builder.append(", ");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:565: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  563.           for (int i = 0, count = bindings.size(); i < count; i++) {
  564.             if (i != 0) {
  565. >             builder.append(", ");
  566.             }
  567.             if (i == count - 1) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:568: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  566.             }
  567.             if (i == count - 1) {
  568. >             builder.append("and ");
  569.             }
  570.             builder.append(iterator.next().getDescription());

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:570: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  568.               builder.append("and ");
  569.             }
  570. >           builder.append(iterator.next().getDescription());
  571.           }
  572.           return builder.toString();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:572: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  570.             builder.append(iterator.next().getDescription());
  571.           }
  572. >         return builder.toString();
  573.       }
  574.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `iterator`.
  556.       switch (bindings.size()) {
  557.         case 1:
  558. >         return iterator.next().getDescription();
  559.         case 2:
  560.           return iterator.next().getDescription() + " and " + iterator.next().getDescription();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `iterator`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:570: warning: GRADUAL_DEREFERENCE
  method call on pointer `iterator`.
  568.               builder.append("and ");
  569.             }
  570. >           builder.append(iterator.next().getDescription());
  571.           }
  572.           return builder.toString();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:558: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  556.       switch (bindings.size()) {
  557.         case 1:
  558. >         return iterator.next().getDescription();
  559.         case 2:
  560.           return iterator.next().getDescription() + " and " + iterator.next().getDescription();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  558.           return iterator.next().getDescription();
  559.         case 2:
  560. >         return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562.           StringBuilder builder = new StringBuilder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:562: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$47`.
  560.           return iterator.next().getDescription() + " and " + iterator.next().getDescription();
  561.         default:
  562. >         StringBuilder builder = new StringBuilder();
  563.           for (int i = 0, count = bindings.size(); i < count; i++) {
  564.             if (i != 0) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:570: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$65`.
  568.               builder.append("and ");
  569.             }
  570. >           builder.append(iterator.next().getDescription());
  571.           }
  572.           return builder.toString();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:575: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindFont`.
  573.       validateMember(field);
  574.   
  575. >     int id = bindFont.value();
  576.       int style = bindFont.style();
  577.       Context context = source.getContext();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:576: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindFont`.
  574.   
  575.       int id = bindFont.value();
  576. >     int style = bindFont.style();
  577.       Context context = source.getContext();
  578.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:569: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  567.   
  568.     private static @Nullable Unbinder parseBindFont(Object target, Field field, View source) {
  569. >     BindFont bindFont = field.getAnnotation(BindFont.class);
  570.       if (bindFont == null) {
  571.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:579: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  577.       Context context = source.getContext();
  578.   
  579. >     Class<?> fieldType = field.getType();
  580.       Object value;
  581.       if (fieldType == Typeface.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:595: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  593.             throw new IllegalStateException(
  594.                 "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. ("
  595. >                   + field.getDeclaringClass().getName()
  596.                     + '.'
  597.                     + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  595.                     + field.getDeclaringClass().getName()
  596.                     + '.'
  597. >                   + field.getName()
  598.                     + ')');
  599.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:602: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  600.       } else {
  601.         throw new IllegalStateException("@BindFont field type must be 'Typeface'. ("
  602. >           + field.getDeclaringClass().getName()
  603.             + '.'
  604.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  602.             + field.getDeclaringClass().getName()
  603.             + '.'
  604. >           + field.getName()
  605.             + ')');
  606.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:593: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  591.             break;
  592.           default:
  593. >           throw new IllegalStateException(
  594.                 "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. ("
  595.                     + field.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:595: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  593.             throw new IllegalStateException(
  594.                 "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. ("
  595. >                   + field.getDeclaringClass().getName()
  596.                     + '.'
  597.                     + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:595: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  593.             throw new IllegalStateException(
  594.                 "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. ("
  595. >                   + field.getDeclaringClass().getName()
  596.                     + '.'
  597.                     + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:595: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  593.             throw new IllegalStateException(
  594.                 "@BindFont style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. ("
  595. >                   + field.getDeclaringClass().getName()
  596.                     + '.'
  597.                     + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$49`.
  595.                     + field.getDeclaringClass().getName()
  596.                     + '.'
  597. >                   + field.getName()
  598.                     + ')');
  599.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  595.                     + field.getDeclaringClass().getName()
  596.                     + '.'
  597. >                   + field.getName()
  598.                     + ')');
  599.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  595.                     + field.getDeclaringClass().getName()
  596.                     + '.'
  597. >                   + field.getName()
  598.                     + ')');
  599.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  595.                     + field.getDeclaringClass().getName()
  596.                     + '.'
  597. >                   + field.getName()
  598.                     + ')');
  599.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:601: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$67`.
  599.         }
  600.       } else {
  601. >       throw new IllegalStateException("@BindFont field type must be 'Typeface'. ("
  602.             + field.getDeclaringClass().getName()
  603.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:602: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`.
  600.       } else {
  601.         throw new IllegalStateException("@BindFont field type must be 'Typeface'. ("
  602. >           + field.getDeclaringClass().getName()
  603.             + '.'
  604.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:602: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$74`.
  600.       } else {
  601.         throw new IllegalStateException("@BindFont field type must be 'Typeface'. ("
  602. >           + field.getDeclaringClass().getName()
  603.             + '.'
  604.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:602: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$81`.
  600.       } else {
  601.         throw new IllegalStateException("@BindFont field type must be 'Typeface'. ("
  602. >           + field.getDeclaringClass().getName()
  603.             + '.'
  604.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$84`.
  602.             + field.getDeclaringClass().getName()
  603.             + '.'
  604. >           + field.getName()
  605.             + ')');
  606.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$91`.
  602.             + field.getDeclaringClass().getName()
  603.             + '.'
  604. >           + field.getName()
  605.             + ')');
  606.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$94`.
  602.             + field.getDeclaringClass().getName()
  603.             + '.'
  604. >           + field.getName()
  605.             + ')');
  606.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$98`.
  602.             + field.getDeclaringClass().getName()
  603.             + '.'
  604. >           + field.getName()
  605.             + ')');
  606.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:577: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  575.       int id = bindFont.value();
  576.       int style = bindFont.style();
  577. >     Context context = source.getContext();
  578.   
  579.       Class<?> fieldType = field.getType();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:591: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$77`.
  589.           if (left != -1) {
  590.             ClassName typeClassName = ClassName.bestGuess(type.substring(0, left));
  591. >           List<TypeName> typeArguments = new ArrayList<>();
  592.             do {
  593.               typeArguments.add(WildcardTypeName.subtypeOf(Object.class));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:593: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeArguments`.
  591.             List<TypeName> typeArguments = new ArrayList<>();
  592.             do {
  593. >             typeArguments.add(WildcardTypeName.subtypeOf(Object.class));
  594.               left = type.indexOf('<', left + 1);
  595.             } while (left != -1);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:597: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeArguments`.
  595.             } while (left != -1);
  596.             return ParameterizedTypeName.get(typeClassName,
  597. >               typeArguments.toArray(new TypeName[typeArguments.size()]));
  598.           }
  599.           return ClassName.bestGuess(type);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:577: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  575.   
  576.     private static TypeName bestGuess(String type) {
  577. >     switch (type) {
  578.         case "void": return TypeName.VOID;
  579.         case "boolean": return TypeName.BOOLEAN;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:588: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  586.         case "short": return TypeName.SHORT;
  587.         default:
  588. >         int left = type.indexOf('<');
  589.           if (left != -1) {
  590.             ClassName typeClassName = ClassName.bestGuess(type.substring(0, left));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:590: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  588.           int left = type.indexOf('<');
  589.           if (left != -1) {
  590. >           ClassName typeClassName = ClassName.bestGuess(type.substring(0, left));
  591.             List<TypeName> typeArguments = new ArrayList<>();
  592.             do {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:594: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  592.             do {
  593.               typeArguments.add(WildcardTypeName.subtypeOf(Object.class));
  594. >             left = type.indexOf('<', left + 1);
  595.             } while (left != -1);
  596.             return ParameterizedTypeName.get(typeClassName,

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:584: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  582.       if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584. >           BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  585.             element.getSimpleName());
  586.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:585: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  585. >           element.getSimpleName());
  586.         hasError = true;
  587.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:582: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.view.animation.Animation"`.
  580.   
  581.       // Verify that the target type is Animation.
  582. >     if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:603: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  601.   
  602.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  603. >     builder.addResource(new FieldAnimationBinding(resourceId, name));
  604.   
  605.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:584: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindAnim`.
  582.       if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584. >           BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  585.             element.getSimpleName());
  586.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:579: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  577.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  578.       boolean hasError = false;
  579. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  580.   
  581.       // Verify that the target type is Animation.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:582: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  580.   
  581.       // Verify that the target type is Animation.
  582. >     if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:585: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  585. >           element.getSimpleName());
  586.         hasError = true;
  587.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:598: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  596.   
  597.       // Assemble information on the field.
  598. >     String name = element.getSimpleName().toString();
  599.       int id = element.getAnnotation(BindAnim.class).value();
  600.       Id resourceId = elementToId(element, BindAnim.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:599: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  597.       // Assemble information on the field.
  598.       String name = element.getSimpleName().toString();
  599. >     int id = element.getAnnotation(BindAnim.class).value();
  600.       Id resourceId = elementToId(element, BindAnim.class, id);
  601.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:584: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  582.       if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584. >           BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  585.             element.getSimpleName());
  586.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:605: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  603.       builder.addResource(new FieldAnimationBinding(resourceId, name));
  604.   
  605. >     erasedTargetNames.add(enclosingElement);
  606.     }
  607.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:598: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  596.   
  597.       // Assemble information on the field.
  598. >     String name = element.getSimpleName().toString();
  599.       int id = element.getAnnotation(BindAnim.class).value();
  600.       Id resourceId = elementToId(element, BindAnim.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:599: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  597.       // Assemble information on the field.
  598.       String name = element.getSimpleName().toString();
  599. >     int id = element.getAnnotation(BindAnim.class).value();
  600.       Id resourceId = elementToId(element, BindAnim.class, id);
  601.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:603: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  601.   
  602.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  603. >     builder.addResource(new FieldAnimationBinding(resourceId, name));
  604.   
  605.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:582: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  580.   
  581.       // Verify that the target type is Animation.
  582. >     if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:583: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  581.       // Verify that the target type is Animation.
  582.       if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  583. >       error(element, "@%s field type must be 'Animation'. (%s.%s)",
  584.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  585.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:590: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  588.   
  589.       // Verify common generated code restrictions.
  590. >     hasError |= isInaccessibleViaGeneratedCode(BindAnim.class, "fields", element);
  591.       hasError |= isBindingInWrongPackage(BindAnim.class, element);
  592.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:591: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  589.       // Verify common generated code restrictions.
  590.       hasError |= isInaccessibleViaGeneratedCode(BindAnim.class, "fields", element);
  591. >     hasError |= isBindingInWrongPackage(BindAnim.class, element);
  592.   
  593.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:600: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  598.       String name = element.getSimpleName().toString();
  599.       int id = element.getAnnotation(BindAnim.class).value();
  600. >     Id resourceId = elementToId(element, BindAnim.class, id);
  601.   
  602.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:602: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  600.       Id resourceId = elementToId(element, BindAnim.class, id);
  601.   
  602. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  603.       builder.addResource(new FieldAnimationBinding(resourceId, name));
  604.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:664: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$21`.
  662.       );
  663.   
  664. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  665.           .withCompilerOptions("-Xlint:-processing")
  666.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:668: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$42`.
  666.           .processedWith(new ButterKnifeProcessor())
  667.           .compilesWithoutWarnings()
  668. >         .and()
  669.           .generatesSources(binding1Source, binding2Source);
  670.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:664: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  662.       );
  663.   
  664. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  665.           .withCompilerOptions("-Xlint:-processing")
  666.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:665: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  663.   
  664.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  665. >         .withCompilerOptions("-Xlint:-processing")
  666.           .processedWith(new ButterKnifeProcessor())
  667.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:666: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  664.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  665.           .withCompilerOptions("-Xlint:-processing")
  666. >         .processedWith(new ButterKnifeProcessor())
  667.           .compilesWithoutWarnings()
  668.           .and()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:665: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  663.   
  664.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  665. >         .withCompilerOptions("-Xlint:-processing")
  666.           .processedWith(new ButterKnifeProcessor())
  667.           .compilesWithoutWarnings()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:667: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  665.           .withCompilerOptions("-Xlint:-processing")
  666.           .processedWith(new ButterKnifeProcessor())
  667. >         .compilesWithoutWarnings()
  668.           .and()
  669.           .generatesSources(binding1Source, binding2Source);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:668: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  666.           .processedWith(new ButterKnifeProcessor())
  667.           .compilesWithoutWarnings()
  668. >         .and()
  669.           .generatesSources(binding1Source, binding2Source);
  670.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:669: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  667.           .compilesWithoutWarnings()
  668.           .and()
  669. >         .generatesSources(binding1Source, binding2Source);
  670.     }
  671.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:664: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  662.       );
  663.   
  664. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  665.           .withCompilerOptions("-Xlint:-processing")
  666.           .processedWith(new ButterKnifeProcessor())

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:605: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.collectionBindings`,dereference of pointer `this`.
  603.     /** True when this type's bindings require a view hierarchy. */
  604.     private boolean hasViewBindings() {
  605. >     return !viewBindings.isEmpty() || !collectionBindings.isEmpty();
  606.     }
  607.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:605: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  603.     /** True when this type's bindings require a view hierarchy. */
  604.     private boolean hasViewBindings() {
  605. >     return !viewBindings.isEmpty() || !collectionBindings.isEmpty();
  606.     }
  607.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:616: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  614.       if (element.asType().getKind() != TypeKind.BOOLEAN) {
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616. >           BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  617.             element.getSimpleName());
  618.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:617: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  617. >           element.getSimpleName());
  618.         hasError = true;
  619.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:634: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  632.       Id resourceId = elementToId(element, BindBool.class, id);
  633.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  634. >     builder.addResource(
  635.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BOOL));
  636.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:616: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindBool`.
  614.       if (element.asType().getKind() != TypeKind.BOOLEAN) {
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616. >           BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  617.             element.getSimpleName());
  618.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:611: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  609.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  610.       boolean hasError = false;
  611. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  612.   
  613.       // Verify that the target type is bool.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:614: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  612.   
  613.       // Verify that the target type is bool.
  614. >     if (element.asType().getKind() != TypeKind.BOOLEAN) {
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:617: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  617. >           element.getSimpleName());
  618.         hasError = true;
  619.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  628.   
  629.       // Assemble information on the field.
  630. >     String name = element.getSimpleName().toString();
  631.       int id = element.getAnnotation(BindBool.class).value();
  632.       Id resourceId = elementToId(element, BindBool.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:631: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  629.       // Assemble information on the field.
  630.       String name = element.getSimpleName().toString();
  631. >     int id = element.getAnnotation(BindBool.class).value();
  632.       Id resourceId = elementToId(element, BindBool.class, id);
  633.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:616: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  614.       if (element.asType().getKind() != TypeKind.BOOLEAN) {
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616. >           BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  617.             element.getSimpleName());
  618.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:637: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  635.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BOOL));
  636.   
  637. >     erasedTargetNames.add(enclosingElement);
  638.     }
  639.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  628.   
  629.       // Assemble information on the field.
  630. >     String name = element.getSimpleName().toString();
  631.       int id = element.getAnnotation(BindBool.class).value();
  632.       Id resourceId = elementToId(element, BindBool.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:631: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  629.       // Assemble information on the field.
  630.       String name = element.getSimpleName().toString();
  631. >     int id = element.getAnnotation(BindBool.class).value();
  632.       Id resourceId = elementToId(element, BindBool.class, id);
  633.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:634: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  632.       Id resourceId = elementToId(element, BindBool.class, id);
  633.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  634. >     builder.addResource(
  635.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BOOL));
  636.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:614: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  612.   
  613.       // Verify that the target type is bool.
  614. >     if (element.asType().getKind() != TypeKind.BOOLEAN) {
  615.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:615: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  613.       // Verify that the target type is bool.
  614.       if (element.asType().getKind() != TypeKind.BOOLEAN) {
  615. >       error(element, "@%s field type must be 'boolean'. (%s.%s)",
  616.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  617.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:622: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  620.   
  621.       // Verify common generated code restrictions.
  622. >     hasError |= isInaccessibleViaGeneratedCode(BindBool.class, "fields", element);
  623.       hasError |= isBindingInWrongPackage(BindBool.class, element);
  624.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:623: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  621.       // Verify common generated code restrictions.
  622.       hasError |= isInaccessibleViaGeneratedCode(BindBool.class, "fields", element);
  623. >     hasError |= isBindingInWrongPackage(BindBool.class, element);
  624.   
  625.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:632: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  630.       String name = element.getSimpleName().toString();
  631.       int id = element.getAnnotation(BindBool.class).value();
  632. >     Id resourceId = elementToId(element, BindBool.class, id);
  633.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  634.       builder.addResource(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:633: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  631.       int id = element.getAnnotation(BindBool.class).value();
  632.       Id resourceId = elementToId(element, BindBool.class, id);
  633. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  634.       builder.addResource(
  635.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BOOL));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:611: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$15`.
  609.     private boolean hasUnqualifiedResourceBindings() {
  610.       for (ResourceBinding binding : resourceBindings) {
  611. >       if (!binding.id().qualifed) {
  612.           return true;
  613.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:611: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  609.     private boolean hasUnqualifiedResourceBindings() {
  610.       for (ResourceBinding binding : resourceBindings) {
  611. >       if (!binding.id().qualifed) {
  612.           return true;
  613.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:610: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  608.     /** True when this type's bindings use raw integer values instead of {@code R} references. */
  609.     private boolean hasUnqualifiedResourceBindings() {
  610. >     for (ResourceBinding binding : resourceBindings) {
  611.         if (!binding.id().qualifed) {
  612.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:610: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.resourceBindings`,dereference of pointer `this`.
  608.     /** True when this type's bindings use raw integer values instead of {@code R} references. */
  609.     private boolean hasUnqualifiedResourceBindings() {
  610. >     for (ResourceBinding binding : resourceBindings) {
  611.         if (!binding.id().qualifed) {
  612.           return true;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:619: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindInt`.
  617.       validateMember(field);
  618.   
  619. >     int id = bindInt.value();
  620.       Resources resources = source.getContext().getResources();
  621.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:613: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  611.   
  612.     private static @Nullable Unbinder parseBindInt(Object target, Field field, View source) {
  613. >     BindInt bindInt = field.getAnnotation(BindInt.class);
  614.       if (bindInt == null) {
  615.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:622: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  620.       Resources resources = source.getContext().getResources();
  621.   
  622. >     Class<?> fieldType = field.getType();
  623.       Object value;
  624.       if (fieldType == int.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:628: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  626.       } else {
  627.         throw new IllegalStateException("@BindInt field type must be 'int'. ("
  628. >           + field.getDeclaringClass().getName()
  629.             + '.'
  630.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  628.             + field.getDeclaringClass().getName()
  629.             + '.'
  630. >           + field.getName()
  631.             + ')');
  632.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:620: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  618.   
  619.       int id = bindInt.value();
  620. >     Resources resources = source.getContext().getResources();
  621.   
  622.       Class<?> fieldType = field.getType();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:627: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  625.         value = resources.getInteger(id);
  626.       } else {
  627. >       throw new IllegalStateException("@BindInt field type must be 'int'. ("
  628.             + field.getDeclaringClass().getName()
  629.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:628: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  626.       } else {
  627.         throw new IllegalStateException("@BindInt field type must be 'int'. ("
  628. >           + field.getDeclaringClass().getName()
  629.             + '.'
  630.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:628: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  626.       } else {
  627.         throw new IllegalStateException("@BindInt field type must be 'int'. ("
  628. >           + field.getDeclaringClass().getName()
  629.             + '.'
  630.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:628: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$42`.
  626.       } else {
  627.         throw new IllegalStateException("@BindInt field type must be 'int'. ("
  628. >           + field.getDeclaringClass().getName()
  629.             + '.'
  630.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  628.             + field.getDeclaringClass().getName()
  629.             + '.'
  630. >           + field.getName()
  631.             + ')');
  632.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$52`.
  628.             + field.getDeclaringClass().getName()
  629.             + '.'
  630. >           + field.getName()
  631.             + ')');
  632.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  628.             + field.getDeclaringClass().getName()
  629.             + '.'
  630. >           + field.getName()
  631.             + ')');
  632.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  628.             + field.getDeclaringClass().getName()
  629.             + '.'
  630. >           + field.getName()
  631.             + ')');
  632.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:625: warning: GRADUAL_DEREFERENCE
  method call on pointer `resources`.
  623.       Object value;
  624.       if (fieldType == int.class) {
  625. >       value = resources.getInteger(id);
  626.       } else {
  627.         throw new IllegalStateException("@BindInt field type must be 'int'. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:620: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  618.   
  619.       int id = bindInt.value();
  620. >     Resources resources = source.getContext().getResources();
  621.   
  622.       Class<?> fieldType = field.getType();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:621: warning: GRADUAL_DEREFERENCE
  method call on pointer `binding`.
  619.     private boolean hasResourceBindingsNeedingResource(int sdk) {
  620.       for (ResourceBinding binding : resourceBindings) {
  621. >       if (binding.requiresResources(sdk)) {
  622.           return true;
  623.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:620: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  618.     /** True when this type's bindings use Resource directly instead of Context. */
  619.     private boolean hasResourceBindingsNeedingResource(int sdk) {
  620. >     for (ResourceBinding binding : resourceBindings) {
  621.         if (binding.requiresResources(sdk)) {
  622.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:620: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.resourceBindings`,dereference of pointer `this`.
  618.     /** True when this type's bindings use Resource directly instead of Context. */
  619.     private boolean hasResourceBindingsNeedingResource(int sdk) {
  620. >     for (ResourceBinding binding : resourceBindings) {
  621.         if (binding.requiresResources(sdk)) {
  622.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  628.     private boolean hasMethodBindings() {
  629.       for (ViewBinding bindings : viewBindings) {
  630. >       if (!bindings.getMethodBindings().isEmpty()) {
  631.           return true;
  632.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:630: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  628.     private boolean hasMethodBindings() {
  629.       for (ViewBinding bindings : viewBindings) {
  630. >       if (!bindings.getMethodBindings().isEmpty()) {
  631.           return true;
  632.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:629: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  627.   
  628.     private boolean hasMethodBindings() {
  629. >     for (ViewBinding bindings : viewBindings) {
  630.         if (!bindings.getMethodBindings().isEmpty()) {
  631.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:629: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  627.   
  628.     private boolean hasMethodBindings() {
  629. >     for (ViewBinding bindings : viewBindings) {
  630.         if (!bindings.getMethodBindings().isEmpty()) {
  631.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:639: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  637.     private boolean hasOnTouchMethodBindings() {
  638.       for (ViewBinding bindings : viewBindings) {
  639. >       if (bindings.getMethodBindings()
  640.             .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {
  641.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:640: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnTouch`.
  638.       for (ViewBinding bindings : viewBindings) {
  639.         if (bindings.getMethodBindings()
  640. >           .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {
  641.           return true;
  642.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:640: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  638.       for (ViewBinding bindings : viewBindings) {
  639.         if (bindings.getMethodBindings()
  640. >           .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {
  641.           return true;
  642.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:638: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  636.   
  637.     private boolean hasOnTouchMethodBindings() {
  638. >     for (ViewBinding bindings : viewBindings) {
  639.         if (bindings.getMethodBindings()
  640.             .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:638: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  636.   
  637.     private boolean hasOnTouchMethodBindings() {
  638. >     for (ViewBinding bindings : viewBindings) {
  639.         if (bindings.getMethodBindings()
  640.             .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:645: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindString`.
  643.       validateMember(field);
  644.   
  645. >     int id = bindString.value();
  646.       Context context = source.getContext();
  647.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:651: warning: GRADUAL_DEREFERENCE
  method call on pointer `context`.
  649.       Object value;
  650.       if (fieldType == String.class) {
  651. >       value = context.getString(id);
  652.       } else {
  653.         throw new IllegalStateException("@BindString field type must be 'String'. ("

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:639: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  637.   
  638.     private static @Nullable Unbinder parseBindString(Object target, Field field, View source) {
  639. >     BindString bindString = field.getAnnotation(BindString.class);
  640.       if (bindString == null) {
  641.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:648: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  646.       Context context = source.getContext();
  647.   
  648. >     Class<?> fieldType = field.getType();
  649.       Object value;
  650.       if (fieldType == String.class) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:654: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  652.       } else {
  653.         throw new IllegalStateException("@BindString field type must be 'String'. ("
  654. >           + field.getDeclaringClass().getName()
  655.             + '.'
  656.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:656: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  654.             + field.getDeclaringClass().getName()
  655.             + '.'
  656. >           + field.getName()
  657.             + ')');
  658.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:653: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  651.         value = context.getString(id);
  652.       } else {
  653. >       throw new IllegalStateException("@BindString field type must be 'String'. ("
  654.             + field.getDeclaringClass().getName()
  655.             + '.'

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:654: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  652.       } else {
  653.         throw new IllegalStateException("@BindString field type must be 'String'. ("
  654. >           + field.getDeclaringClass().getName()
  655.             + '.'
  656.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:654: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  652.       } else {
  653.         throw new IllegalStateException("@BindString field type must be 'String'. ("
  654. >           + field.getDeclaringClass().getName()
  655.             + '.'
  656.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:654: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  652.       } else {
  653.         throw new IllegalStateException("@BindString field type must be 'String'. ("
  654. >           + field.getDeclaringClass().getName()
  655.             + '.'
  656.             + field.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:656: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  654.             + field.getDeclaringClass().getName()
  655.             + '.'
  656. >           + field.getName()
  657.             + ')');
  658.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:656: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  654.             + field.getDeclaringClass().getName()
  655.             + '.'
  656. >           + field.getName()
  657.             + ')');
  658.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:656: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$49`.
  654.             + field.getDeclaringClass().getName()
  655.             + '.'
  656. >           + field.getName()
  657.             + ')');
  658.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:656: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  654.             + field.getDeclaringClass().getName()
  655.             + '.'
  656. >           + field.getName()
  657.             + ')');
  658.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:646: warning: GRADUAL_DEREFERENCE
  method call on pointer `source`.
  644.   
  645.       int id = bindString.value();
  646. >     Context context = source.getContext();
  647.   
  648.       Class<?> fieldType = field.getType();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:652: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$19`.
  650.       } else if (elementType.getKind() != TypeKind.INT) {
  651.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652. >           BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  653.             element.getSimpleName());
  654.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:653: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$19`.
  651.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652.             BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  653. >           element.getSimpleName());
  654.         hasError = true;
  655.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:648: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.content.res.ColorStateList"`.
  646.       boolean isColorStateList = false;
  647.       TypeMirror elementType = element.asType();
  648. >     if (COLOR_STATE_LIST_TYPE.equals(elementType.toString())) {
  649.         isColorStateList = true;
  650.       } else if (elementType.getKind() != TypeKind.INT) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:673: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T5_213`.
  671.       FieldResourceBinding.Type colorStateList = FieldResourceBinding.Type.COLOR_STATE_LIST;
  672.       FieldResourceBinding.Type color = FieldResourceBinding.Type.COLOR;
  673. >     builder.addResource(new FieldResourceBinding(
  674.           resourceId,
  675.           name,

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:652: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindColor`.
  650.       } else if (elementType.getKind() != TypeKind.INT) {
  651.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652. >           BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  653.             element.getSimpleName());
  654.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:648: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  646.       boolean isColorStateList = false;
  647.       TypeMirror elementType = element.asType();
  648. >     if (COLOR_STATE_LIST_TYPE.equals(elementType.toString())) {
  649.         isColorStateList = true;
  650.       } else if (elementType.getKind() != TypeKind.INT) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:650: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  648.       if (COLOR_STATE_LIST_TYPE.equals(elementType.toString())) {
  649.         isColorStateList = true;
  650. >     } else if (elementType.getKind() != TypeKind.INT) {
  651.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652.             BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:643: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  641.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  642.       boolean hasError = false;
  643. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  644.   
  645.       // Verify that the target type is int or ColorStateList.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:647: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  645.       // Verify that the target type is int or ColorStateList.
  646.       boolean isColorStateList = false;
  647. >     TypeMirror elementType = element.asType();
  648.       if (COLOR_STATE_LIST_TYPE.equals(elementType.toString())) {
  649.         isColorStateList = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:653: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  651.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652.             BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  653. >           element.getSimpleName());
  654.         hasError = true;
  655.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:666: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  664.   
  665.       // Assemble information on the field.
  666. >     String name = element.getSimpleName().toString();
  667.       int id = element.getAnnotation(BindColor.class).value();
  668.       Id resourceId = elementToId(element, BindColor.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:667: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  665.       // Assemble information on the field.
  666.       String name = element.getSimpleName().toString();
  667. >     int id = element.getAnnotation(BindColor.class).value();
  668.       Id resourceId = elementToId(element, BindColor.class, id);
  669.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:652: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  650.       } else if (elementType.getKind() != TypeKind.INT) {
  651.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652. >           BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  653.             element.getSimpleName());
  654.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:678: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  676.           isColorStateList ? colorStateList : color));
  677.   
  678. >     erasedTargetNames.add(enclosingElement);
  679.     }
  680.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:666: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  664.   
  665.       // Assemble information on the field.
  666. >     String name = element.getSimpleName().toString();
  667.       int id = element.getAnnotation(BindColor.class).value();
  668.       Id resourceId = elementToId(element, BindColor.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:667: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$56`.
  665.       // Assemble information on the field.
  666.       String name = element.getSimpleName().toString();
  667. >     int id = element.getAnnotation(BindColor.class).value();
  668.       Id resourceId = elementToId(element, BindColor.class, id);
  669.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:673: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$83`.
  671.       FieldResourceBinding.Type colorStateList = FieldResourceBinding.Type.COLOR_STATE_LIST;
  672.       FieldResourceBinding.Type color = FieldResourceBinding.Type.COLOR;
  673. >     builder.addResource(new FieldResourceBinding(
  674.           resourceId,
  675.           name,

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:651: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  649.         isColorStateList = true;
  650.       } else if (elementType.getKind() != TypeKind.INT) {
  651. >       error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  652.             BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  653.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:658: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  656.   
  657.       // Verify common generated code restrictions.
  658. >     hasError |= isInaccessibleViaGeneratedCode(BindColor.class, "fields", element);
  659.       hasError |= isBindingInWrongPackage(BindColor.class, element);
  660.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:659: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  657.       // Verify common generated code restrictions.
  658.       hasError |= isInaccessibleViaGeneratedCode(BindColor.class, "fields", element);
  659. >     hasError |= isBindingInWrongPackage(BindColor.class, element);
  660.   
  661.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:668: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  666.       String name = element.getSimpleName().toString();
  667.       int id = element.getAnnotation(BindColor.class).value();
  668. >     Id resourceId = elementToId(element, BindColor.class, id);
  669.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  670.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:669: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  667.       int id = element.getAnnotation(BindColor.class).value();
  668.       Id resourceId = elementToId(element, BindColor.class, id);
  669. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  670.   
  671.       FieldResourceBinding.Type colorStateList = FieldResourceBinding.Type.COLOR_STATE_LIST;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:649: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  647.     private boolean hasFieldBindings() {
  648.       for (ViewBinding bindings : viewBindings) {
  649. >       if (bindings.getFieldBinding() != null) {
  650.           return true;
  651.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:648: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  646.   
  647.     private boolean hasFieldBindings() {
  648. >     for (ViewBinding bindings : viewBindings) {
  649.         if (bindings.getFieldBinding() != null) {
  650.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:653: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.collectionBindings`,dereference of pointer `this`.
  651.         }
  652.       }
  653. >     return !collectionBindings.isEmpty();
  654.     }
  655.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:648: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  646.   
  647.     private boolean hasFieldBindings() {
  648. >     for (ViewBinding bindings : viewBindings) {
  649.         if (bindings.getFieldBinding() != null) {
  650.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:657: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  655.   
  656.     private boolean hasTargetField() {
  657. >     return hasFieldBindings() || hasMethodBindings();
  658.     }
  659.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:662: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindings`.
  660.     private boolean hasViewLocal() {
  661.       for (ViewBinding bindings : viewBindings) {
  662. >       if (bindings.requiresLocal()) {
  663.           return true;
  664.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:661: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  659.   
  660.     private boolean hasViewLocal() {
  661. >     for (ViewBinding bindings : viewBindings) {
  662.         if (bindings.requiresLocal()) {
  663.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:661: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.viewBindings`,dereference of pointer `this`.
  659.   
  660.     private boolean hasViewLocal() {
  661. >     for (ViewBinding bindings : viewBindings) {
  662.         if (bindings.requiresLocal()) {
  663.           return true;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:666: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  664.     private static @Nullable Unbinder parseOnCheckedChanged(final Object target, final Method method,
  665.         View source) {
  666. >     OnCheckedChanged onCheckedChanged = method.getAnnotation(OnCheckedChanged.class);
  667.       if (onCheckedChanged == null) {
  668.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:676: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  674.   
  675.       List<CompoundButton> views =
  676. >         findViews(source, onCheckedChanged.value(), isRequired(method), method.getName(),
  677.               CompoundButton.class);
  678.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:683: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  681.               argumentTransformer.transform(buttonView, isChecked)));
  682.   
  683. >     return new ListenerUnbinder<>(views, ON_CHECKED_CHANGE);
  684.     }
  685.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:676: warning: GRADUAL_DEREFERENCE
  method call on pointer `onCheckedChanged`.
  674.   
  675.       List<CompoundButton> views =
  676. >         findViews(source, onCheckedChanged.value(), isRequired(method), method.getName(),
  677.               CompoundButton.class);
  678.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:671: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  669.     /** True if this binding requires a view. Otherwise only a context is needed. */
  670.     private boolean constructorNeedsView() {
  671. >     return hasViewBindings() //
  672.           || (parentBinding != null && parentBinding.constructorNeedsView());
  673.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:672: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.parentBinding`,dereference of pointer `this`.
  670.     private boolean constructorNeedsView() {
  671.       return hasViewBindings() //
  672. >         || (parentBinding != null && parentBinding.constructorNeedsView());
  673.     }
  674.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:671: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  669.     /** True if this binding requires a view. Otherwise only a context is needed. */
  670.     private boolean constructorNeedsView() {
  671. >     return hasViewBindings() //
  672.           || (parentBinding != null && parentBinding.constructorNeedsView());
  673.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:750: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$21`.
  748.       );
  749.   
  750. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  751.           .withCompilerOptions("-Xlint:-processing")
  752.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:756: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$42`.
  754.           //   missing type arguments for generic class test.Test<T>
  755.           .compilesWithoutError()
  756. >         .and()
  757.           .generatesSources(binding1Source, binding2Source);
  758.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:750: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  748.       );
  749.   
  750. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  751.           .withCompilerOptions("-Xlint:-processing")
  752.           .processedWith(new ButterKnifeProcessor())

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:751: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  749.   
  750.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  751. >         .withCompilerOptions("-Xlint:-processing")
  752.           .processedWith(new ButterKnifeProcessor())
  753.           // found raw type: test.Test

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:752: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  750.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  751.           .withCompilerOptions("-Xlint:-processing")
  752. >         .processedWith(new ButterKnifeProcessor())
  753.           // found raw type: test.Test
  754.           //   missing type arguments for generic class test.Test<T>

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:751: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  749.   
  750.       assertAbout(javaSources()).that(asList(source1, source2, source3))
  751. >         .withCompilerOptions("-Xlint:-processing")
  752.           .processedWith(new ButterKnifeProcessor())
  753.           // found raw type: test.Test

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:755: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  753.           // found raw type: test.Test
  754.           //   missing type arguments for generic class test.Test<T>
  755. >         .compilesWithoutError()
  756.           .and()
  757.           .generatesSources(binding1Source, binding2Source);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:756: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  754.           //   missing type arguments for generic class test.Test<T>
  755.           .compilesWithoutError()
  756. >         .and()
  757.           .generatesSources(binding1Source, binding2Source);
  758.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:757: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  755.           .compilesWithoutError()
  756.           .and()
  757. >         .generatesSources(binding1Source, binding2Source);
  758.     }
  759.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:750: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  748.       );
  749.   
  750. >     assertAbout(javaSources()).that(asList(source1, source2, source3))
  751.           .withCompilerOptions("-Xlint:-processing")
  752.           .processedWith(new ButterKnifeProcessor())

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:676: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.view.View"`.
  674.   
  675.     static boolean requiresCast(TypeName type) {
  676. >     return !VIEW_TYPE.equals(type.toString());
  677.     }
  678.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:676: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  674.   
  675.     static boolean requiresCast(TypeName type) {
  676. >     return !VIEW_TYPE.equals(type.toString());
  677.     }
  678.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:680: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet.bindingClassName`,dereference of pointer `this`.
  678.   
  679.     @Override public String toString() {
  680. >     return bindingClassName.toString();
  681.     }
  682.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:680: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  678.   
  679.       ViewCollections.set(views, ON_CHECKED_CHANGE,
  680. >         (buttonView, isChecked) -> tryInvoke(method, target,
  681.               argumentTransformer.transform(buttonView, isChecked)));
  682.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:681: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  679.       ViewCollections.set(views, ON_CHECKED_CHANGE,
  680.           (buttonView, isChecked) -> tryInvoke(method, target,
  681. >             argumentTransformer.transform(buttonView, isChecked)));
  682.   
  683.       return new ListenerUnbinder<>(views, ON_CHECKED_CHANGE);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:681: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  679.       ViewCollections.set(views, ON_CHECKED_CHANGE,
  680.           (buttonView, isChecked) -> tryInvoke(method, target,
  681. >             argumentTransformer.transform(buttonView, isChecked)));
  682.   
  683.       return new ListenerUnbinder<>(views, ON_CHECKED_CHANGE);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:693: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  691.       } else if (elementType.getKind() != TypeKind.FLOAT) {
  692.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693. >           BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  694.             element.getSimpleName());
  695.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:694: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$18`.
  692.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693.             BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  694. >           element.getSimpleName());
  695.         hasError = true;
  696.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:711: warning: GRADUAL_DEREFERENCE
  method call on pointer `$T5_203`.
  709.       Id resourceId = elementToId(element, BindDimen.class, id);
  710.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  711. >     builder.addResource(new FieldResourceBinding(resourceId, name,
  712.           isInt ? FieldResourceBinding.Type.DIMEN_AS_INT : FieldResourceBinding.Type.DIMEN_AS_FLOAT));
  713.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:693: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindDimen`.
  691.       } else if (elementType.getKind() != TypeKind.FLOAT) {
  692.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693. >           BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  694.             element.getSimpleName());
  695.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:689: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  687.       boolean isInt = false;
  688.       TypeMirror elementType = element.asType();
  689. >     if (elementType.getKind() == TypeKind.INT) {
  690.         isInt = true;
  691.       } else if (elementType.getKind() != TypeKind.FLOAT) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:691: warning: GRADUAL_DEREFERENCE
  method call on pointer `elementType`.
  689.       if (elementType.getKind() == TypeKind.INT) {
  690.         isInt = true;
  691. >     } else if (elementType.getKind() != TypeKind.FLOAT) {
  692.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693.             BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:684: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  682.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  683.       boolean hasError = false;
  684. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  685.   
  686.       // Verify that the target type is int or ColorStateList.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:688: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  686.       // Verify that the target type is int or ColorStateList.
  687.       boolean isInt = false;
  688. >     TypeMirror elementType = element.asType();
  689.       if (elementType.getKind() == TypeKind.INT) {
  690.         isInt = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:694: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  692.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693.             BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  694. >           element.getSimpleName());
  695.         hasError = true;
  696.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:707: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  705.   
  706.       // Assemble information on the field.
  707. >     String name = element.getSimpleName().toString();
  708.       int id = element.getAnnotation(BindDimen.class).value();
  709.       Id resourceId = elementToId(element, BindDimen.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:708: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  706.       // Assemble information on the field.
  707.       String name = element.getSimpleName().toString();
  708. >     int id = element.getAnnotation(BindDimen.class).value();
  709.       Id resourceId = elementToId(element, BindDimen.class, id);
  710.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:693: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  691.       } else if (elementType.getKind() != TypeKind.FLOAT) {
  692.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693. >           BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  694.             element.getSimpleName());
  695.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:714: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  712.           isInt ? FieldResourceBinding.Type.DIMEN_AS_INT : FieldResourceBinding.Type.DIMEN_AS_FLOAT));
  713.   
  714. >     erasedTargetNames.add(enclosingElement);
  715.     }
  716.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:707: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$49`.
  705.   
  706.       // Assemble information on the field.
  707. >     String name = element.getSimpleName().toString();
  708.       int id = element.getAnnotation(BindDimen.class).value();
  709.       Id resourceId = elementToId(element, BindDimen.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:708: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$55`.
  706.       // Assemble information on the field.
  707.       String name = element.getSimpleName().toString();
  708. >     int id = element.getAnnotation(BindDimen.class).value();
  709.       Id resourceId = elementToId(element, BindDimen.class, id);
  710.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:711: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$80`.
  709.       Id resourceId = elementToId(element, BindDimen.class, id);
  710.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  711. >     builder.addResource(new FieldResourceBinding(resourceId, name,
  712.           isInt ? FieldResourceBinding.Type.DIMEN_AS_INT : FieldResourceBinding.Type.DIMEN_AS_FLOAT));
  713.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:692: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  690.         isInt = true;
  691.       } else if (elementType.getKind() != TypeKind.FLOAT) {
  692. >       error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  693.             BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  694.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:699: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  697.   
  698.       // Verify common generated code restrictions.
  699. >     hasError |= isInaccessibleViaGeneratedCode(BindDimen.class, "fields", element);
  700.       hasError |= isBindingInWrongPackage(BindDimen.class, element);
  701.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:700: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  698.       // Verify common generated code restrictions.
  699.       hasError |= isInaccessibleViaGeneratedCode(BindDimen.class, "fields", element);
  700. >     hasError |= isBindingInWrongPackage(BindDimen.class, element);
  701.   
  702.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:709: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  707.       String name = element.getSimpleName().toString();
  708.       int id = element.getAnnotation(BindDimen.class).value();
  709. >     Id resourceId = elementToId(element, BindDimen.class, id);
  710.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  711.       builder.addResource(new FieldResourceBinding(resourceId, name,

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:710: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  708.       int id = element.getAnnotation(BindDimen.class).value();
  709.       Id resourceId = elementToId(element, BindDimen.class, id);
  710. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  711.       builder.addResource(new FieldResourceBinding(resourceId, name,
  712.           isInt ? FieldResourceBinding.Type.DIMEN_AS_INT : FieldResourceBinding.Type.DIMEN_AS_FLOAT));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:692: warning: GRADUAL_DEREFERENCE
  dereference of pointer `targetType`.
  690.       TypeName targetType = TypeName.get(typeMirror);
  691.       if (targetType instanceof ParameterizedTypeName) {
  692. >       targetType = ((ParameterizedTypeName) targetType).rawType;
  693.       }
  694.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:684: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  682.   
  683.     static Builder newBuilder(TypeElement enclosingElement) {
  684. >     TypeMirror typeMirror = enclosingElement.asType();
  685.   
  686.       boolean isView = isSubtypeOfType(typeMirror, VIEW_TYPE);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:696: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  694.   
  695.       String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696. >     String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:700: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   
  700. >     boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);
  701.       return new Builder(targetType, bindingClassName, isFinal, isView, isActivity, isDialog);
  702.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:695: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  693.       }
  694.   
  695. >     String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:695: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  693.       }
  694.   
  695. >     String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:696: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  694.   
  695.       String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696. >     String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:696: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  694.   
  695.       String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696. >     String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:697: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$36`.
  695.       String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697. >         packageName.length() + 1).replace('.', '$');
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:698: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');
  698. >     ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   
  700.       boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:698: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');
  698. >     ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   
  700.       boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:698: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697.           packageName.length() + 1).replace('.', '$');
  698. >     ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   
  700.       boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:700: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   
  700. >     boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);
  701.       return new Builder(targetType, bindingClassName, isFinal, isView, isActivity, isDialog);
  702.     }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:701: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  699.   
  700.       boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);
  701. >     return new Builder(targetType, bindingClassName, isFinal, isView, isActivity, isDialog);
  702.     }
  703.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:697: warning: GRADUAL_DEREFERENCE
  method call on pointer `packageName`.
  695.       String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  696.       String className = enclosingElement.getQualifiedName().toString().substring(
  697. >         packageName.length() + 1).replace('.', '$');
  698.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  699.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:688: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  686.     private static @Nullable Unbinder parseOnClick(final Object target, final Method method,
  687.         View source) {
  688. >     OnClick onClick = method.getAnnotation(OnClick.class);
  689.       if (onClick == null) {
  690.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:698: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  696.   
  697.       List<View> views =
  698. >         findViews(source, onClick.value(), isRequired(method), method.getName(), View.class);
  699.   
  700.       ViewCollections.set(views, ON_CLICK,

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:703: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  701.           v -> tryInvoke(method, target, argumentTransformer.transform(v)));
  702.   
  703. >     return new ListenerUnbinder<>(views, ON_CLICK);
  704.     }
  705.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:698: warning: GRADUAL_DEREFERENCE
  method call on pointer `onClick`.
  696.   
  697.       List<View> views =
  698. >         findViews(source, onClick.value(), isRequired(method), method.getName(), View.class);
  699.   
  700.       ViewCollections.set(views, ON_CLICK,

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:701: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  699.   
  700.       ViewCollections.set(views, ON_CLICK,
  701. >         v -> tryInvoke(method, target, argumentTransformer.transform(v)));
  702.   
  703.       return new ListenerUnbinder<>(views, ON_CLICK);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:701: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  699.   
  700.       ViewCollections.set(views, ON_CLICK,
  701. >         v -> tryInvoke(method, target, argumentTransformer.transform(v)));
  702.   
  703.       return new ListenerUnbinder<>(views, ON_CLICK);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:704: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  702.     }
  703.   
  704. >   static final class Builder {
  705.       private final TypeName targetTypeName;
  706.       private final ClassName bindingClassName;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:708: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  706.     private static @Nullable Unbinder parseOnEditorAction(final Object target, final Method method,
  707.         View source) {
  708. >     OnEditorAction onEditorAction = method.getAnnotation(OnEditorAction.class);
  709.       if (onEditorAction == null) {
  710.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:718: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  716.   
  717.       List<TextView> views =
  718. >         findViews(source, onEditorAction.value(), isRequired(method), method.getName(),
  719.               TextView.class);
  720.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:729: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  727.       });
  728.   
  729. >     return new ListenerUnbinder<>(views, ON_EDITOR_ACTION);
  730.     }
  731.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:718: warning: GRADUAL_DEREFERENCE
  method call on pointer `onEditorAction`.
  716.   
  717.       List<TextView> views =
  718. >         findViews(source, onEditorAction.value(), isRequired(method), method.getName(),
  719.               TextView.class);
  720.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:725: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  723.       if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725. >           BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  726.             element.getSimpleName());
  727.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:726: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  726. >           element.getSimpleName());
  727.         hasError = true;
  728.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:723: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.graphics.Bitmap"`.
  721.   
  722.       // Verify that the target type is Bitmap.
  723. >     if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:743: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);
  742.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  743. >     builder.addResource(
  744.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BITMAP));
  745.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:725: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindBitmap`.
  723.       if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725. >           BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  726.             element.getSimpleName());
  727.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:720: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  718.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  719.       boolean hasError = false;
  720. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  721.   
  722.       // Verify that the target type is Bitmap.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:723: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  721.   
  722.       // Verify that the target type is Bitmap.
  723. >     if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:726: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  726. >           element.getSimpleName());
  727.         hasError = true;
  728.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:739: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  737.   
  738.       // Assemble information on the field.
  739. >     String name = element.getSimpleName().toString();
  740.       int id = element.getAnnotation(BindBitmap.class).value();
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:740: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  738.       // Assemble information on the field.
  739.       String name = element.getSimpleName().toString();
  740. >     int id = element.getAnnotation(BindBitmap.class).value();
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);
  742.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:725: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  723.       if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725. >           BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  726.             element.getSimpleName());
  727.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:746: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  744.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BITMAP));
  745.   
  746. >     erasedTargetNames.add(enclosingElement);
  747.     }
  748.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:739: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  737.   
  738.       // Assemble information on the field.
  739. >     String name = element.getSimpleName().toString();
  740.       int id = element.getAnnotation(BindBitmap.class).value();
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:740: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  738.       // Assemble information on the field.
  739.       String name = element.getSimpleName().toString();
  740. >     int id = element.getAnnotation(BindBitmap.class).value();
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);
  742.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:743: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);
  742.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  743. >     builder.addResource(
  744.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BITMAP));
  745.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:723: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  721.   
  722.       // Verify that the target type is Bitmap.
  723. >     if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:724: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  722.       // Verify that the target type is Bitmap.
  723.       if (!BITMAP_TYPE.equals(element.asType().toString())) {
  724. >       error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  725.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  726.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:731: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  729.   
  730.       // Verify common generated code restrictions.
  731. >     hasError |= isInaccessibleViaGeneratedCode(BindBitmap.class, "fields", element);
  732.       hasError |= isBindingInWrongPackage(BindBitmap.class, element);
  733.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:732: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  730.       // Verify common generated code restrictions.
  731.       hasError |= isInaccessibleViaGeneratedCode(BindBitmap.class, "fields", element);
  732. >     hasError |= isBindingInWrongPackage(BindBitmap.class, element);
  733.   
  734.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:741: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  739.       String name = element.getSimpleName().toString();
  740.       int id = element.getAnnotation(BindBitmap.class).value();
  741. >     Id resourceId = elementToId(element, BindBitmap.class, id);
  742.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  743.       builder.addResource(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:742: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  740.       int id = element.getAnnotation(BindBitmap.class).value();
  741.       Id resourceId = elementToId(element, BindBitmap.class, id);
  742. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  743.       builder.addResource(
  744.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BITMAP));

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:714: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  712.       private @Nullable BindingSet parentBinding;
  713.   
  714. >     private final Map<Id, ViewBinding.Builder> viewIdMap = new LinkedHashMap<>();
  715.       private final ImmutableList.Builder<FieldCollectionViewBinding> collectionBindings =
  716.           ImmutableList.builder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:716: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  714.       private final Map<Id, ViewBinding.Builder> viewIdMap = new LinkedHashMap<>();
  715.       private final ImmutableList.Builder<FieldCollectionViewBinding> collectionBindings =
  716. >         ImmutableList.builder();
  717.       private final ImmutableList.Builder<ResourceBinding> resourceBindings = ImmutableList.builder();
  718.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:717: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  715.       private final ImmutableList.Builder<FieldCollectionViewBinding> collectionBindings =
  716.           ImmutableList.builder();
  717. >     private final ImmutableList.Builder<ResourceBinding> resourceBindings = ImmutableList.builder();
  718.   
  719.       private Builder(TypeName targetTypeName, ClassName bindingClassName, boolean isFinal,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:721: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  719.       private Builder(TypeName targetTypeName, ClassName bindingClassName, boolean isFinal,
  720.           boolean isView, boolean isActivity, boolean isDialog) {
  721. >       this.targetTypeName = targetTypeName;
  722.         this.bindingClassName = bindingClassName;
  723.         this.isFinal = isFinal;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:722: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  720.           boolean isView, boolean isActivity, boolean isDialog) {
  721.         this.targetTypeName = targetTypeName;
  722. >       this.bindingClassName = bindingClassName;
  723.         this.isFinal = isFinal;
  724.         this.isView = isView;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:723: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  721.         this.targetTypeName = targetTypeName;
  722.         this.bindingClassName = bindingClassName;
  723. >       this.isFinal = isFinal;
  724.         this.isView = isView;
  725.         this.isActivity = isActivity;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:724: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  722.         this.bindingClassName = bindingClassName;
  723.         this.isFinal = isFinal;
  724. >       this.isView = isView;
  725.         this.isActivity = isActivity;
  726.         this.isDialog = isDialog;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:725: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  723.         this.isFinal = isFinal;
  724.         this.isView = isView;
  725. >       this.isActivity = isActivity;
  726.         this.isDialog = isDialog;
  727.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:726: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  724.         this.isView = isView;
  725.         this.isActivity = isActivity;
  726. >       this.isDialog = isDialog;
  727.       }
  728.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:714: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  712.       private @Nullable BindingSet parentBinding;
  713.   
  714. >     private final Map<Id, ViewBinding.Builder> viewIdMap = new LinkedHashMap<>();
  715.       private final ImmutableList.Builder<FieldCollectionViewBinding> collectionBindings =
  716.           ImmutableList.builder();

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:720: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  718.   
  719.       private Builder(TypeName targetTypeName, ClassName bindingClassName, boolean isFinal,
  720. >         boolean isView, boolean isActivity, boolean isDialog) {
  721.         this.targetTypeName = targetTypeName;
  722.         this.bindingClassName = bindingClassName;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:722: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  720.   
  721.       ViewCollections.set(views, ON_EDITOR_ACTION, (v, actionId, event) -> {
  722. >       Object value = tryInvoke(method, target, argumentTransformer.transform(v, actionId, event));
  723.         //noinspection SimplifiableConditionalExpression
  724.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:722: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  720.   
  721.       ViewCollections.set(views, ON_EDITOR_ACTION, (v, actionId, event) -> {
  722. >       Object value = tryInvoke(method, target, argumentTransformer.transform(v, actionId, event));
  723.         //noinspection SimplifiableConditionalExpression
  724.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:725: warning: GRADUAL_DEREFERENCE
  method call on pointer `value`.
  723.         //noinspection SimplifiableConditionalExpression
  724.         return propagateReturn
  725. >           ? (boolean) value
  726.             : true;
  727.       });

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:730: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  728.   
  729.       void addField(Id id, FieldViewBinding binding) {
  730. >       getOrCreateViewBindings(id).setFieldBinding(binding);
  731.       }
  732.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:730: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  728.   
  729.       void addField(Id id, FieldViewBinding binding) {
  730. >       getOrCreateViewBindings(id).setFieldBinding(binding);
  731.       }
  732.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:734: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  732.     private static @Nullable Unbinder parseOnFocusChange(final Object target, final Method method,
  733.         View source) {
  734. >     OnFocusChange onFocusChange = method.getAnnotation(OnFocusChange.class);
  735.       if (onFocusChange == null) {
  736.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:744: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  742.   
  743.       List<View> views =
  744. >         findViews(source, onFocusChange.value(), isRequired(method), method.getName(), View.class);
  745.   
  746.       ViewCollections.set(views, ON_FOCUS_CHANGE,

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:749: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  747.           (v, hasFocus) -> tryInvoke(method, target, argumentTransformer.transform(v, hasFocus)));
  748.   
  749. >     return new ListenerUnbinder<>(views, ON_FOCUS_CHANGE);
  750.     }
  751.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:744: warning: GRADUAL_DEREFERENCE
  method call on pointer `onFocusChange`.
  742.   
  743.       List<View> views =
  744. >         findViews(source, onFocusChange.value(), isRequired(method), method.getName(), View.class);
  745.   
  746.       ViewCollections.set(views, ON_FOCUS_CHANGE,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:734: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.collectionBindings`,dereference of pointer `this`.
  732.   
  733.       void addFieldCollection(FieldCollectionViewBinding binding) {
  734. >       collectionBindings.add(binding);
  735.       }
  736.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:743: warning: GRADUAL_DEREFERENCE
  method call on pointer `"void"`.
  741.           MethodViewBinding binding) {
  742.         ViewBinding.Builder viewBinding = getOrCreateViewBindings(id);
  743. >       if (viewBinding.hasMethodBinding(listener, method) && !"void".equals(method.returnType())) {
  744.           return false;
  745.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:743: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  741.           MethodViewBinding binding) {
  742.         ViewBinding.Builder viewBinding = getOrCreateViewBindings(id);
  743. >       if (viewBinding.hasMethodBinding(listener, method) && !"void".equals(method.returnType())) {
  744.           return false;
  745.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:742: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  740.           ListenerMethod method,
  741.           MethodViewBinding binding) {
  742. >       ViewBinding.Builder viewBinding = getOrCreateViewBindings(id);
  743.         if (viewBinding.hasMethodBinding(listener, method) && !"void".equals(method.returnType())) {
  744.           return false;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:743: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewBinding`.
  741.           MethodViewBinding binding) {
  742.         ViewBinding.Builder viewBinding = getOrCreateViewBindings(id);
  743. >       if (viewBinding.hasMethodBinding(listener, method) && !"void".equals(method.returnType())) {
  744.           return false;
  745.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:746: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewBinding`.
  744.           return false;
  745.         }
  746. >       viewBinding.addMethodBinding(listener, method, binding);
  747.         return true;
  748.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:747: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  745.   
  746.       ViewCollections.set(views, ON_FOCUS_CHANGE,
  747. >         (v, hasFocus) -> tryInvoke(method, target, argumentTransformer.transform(v, hasFocus)));
  748.   
  749.       return new ListenerUnbinder<>(views, ON_FOCUS_CHANGE);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:747: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  745.   
  746.       ViewCollections.set(views, ON_FOCUS_CHANGE,
  747. >         (v, hasFocus) -> tryInvoke(method, target, argumentTransformer.transform(v, hasFocus)));
  748.   
  749.       return new ListenerUnbinder<>(views, ON_FOCUS_CHANGE);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:757: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  755.       if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757. >           BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  758.             element.getSimpleName());
  759.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:758: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  758. >           element.getSimpleName());
  759.         hasError = true;
  760.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:774: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$63`.
  772.       int id = element.getAnnotation(BindDrawable.class).value();
  773.       int tint = element.getAnnotation(BindDrawable.class).tint();
  774. >     Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
  775.   
  776.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:755: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.graphics.drawable.Drawable"`.
  753.   
  754.       // Verify that the target type is Drawable.
  755. >     if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:777: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  775.   
  776.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  777. >     builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint)));
  778.   
  779.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:757: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindDrawable`.
  755.       if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757. >           BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  758.             element.getSimpleName());
  759.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:752: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  750.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  751.       boolean hasError = false;
  752. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  753.   
  754.       // Verify that the target type is Drawable.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:755: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  753.   
  754.       // Verify that the target type is Drawable.
  755. >     if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:758: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  758. >           element.getSimpleName());
  759.         hasError = true;
  760.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:771: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  769.   
  770.       // Assemble information on the field.
  771. >     String name = element.getSimpleName().toString();
  772.       int id = element.getAnnotation(BindDrawable.class).value();
  773.       int tint = element.getAnnotation(BindDrawable.class).tint();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:772: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  770.       // Assemble information on the field.
  771.       String name = element.getSimpleName().toString();
  772. >     int id = element.getAnnotation(BindDrawable.class).value();
  773.       int tint = element.getAnnotation(BindDrawable.class).tint();
  774.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:773: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  771.       String name = element.getSimpleName().toString();
  772.       int id = element.getAnnotation(BindDrawable.class).value();
  773. >     int tint = element.getAnnotation(BindDrawable.class).tint();
  774.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
  775.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:757: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  755.       if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757. >           BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  758.             element.getSimpleName());
  759.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:779: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  777.       builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint)));
  778.   
  779. >     erasedTargetNames.add(enclosingElement);
  780.     }
  781.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:771: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  769.   
  770.       // Assemble information on the field.
  771. >     String name = element.getSimpleName().toString();
  772.       int id = element.getAnnotation(BindDrawable.class).value();
  773.       int tint = element.getAnnotation(BindDrawable.class).tint();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:772: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  770.       // Assemble information on the field.
  771.       String name = element.getSimpleName().toString();
  772. >     int id = element.getAnnotation(BindDrawable.class).value();
  773.       int tint = element.getAnnotation(BindDrawable.class).tint();
  774.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:773: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$58`.
  771.       String name = element.getSimpleName().toString();
  772.       int id = element.getAnnotation(BindDrawable.class).value();
  773. >     int tint = element.getAnnotation(BindDrawable.class).tint();
  774.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
  775.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:755: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  753.   
  754.       // Verify that the target type is Drawable.
  755. >     if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:777: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$88`.
  775.   
  776.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  777. >     builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint)));
  778.   
  779.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:777: warning: GRADUAL_DEREFERENCE
  method call on pointer `resourceIds`.
  775.   
  776.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  777. >     builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint)));
  778.   
  779.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:756: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  754.       // Verify that the target type is Drawable.
  755.       if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  756. >       error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  757.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  758.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:763: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  761.   
  762.       // Verify common generated code restrictions.
  763. >     hasError |= isInaccessibleViaGeneratedCode(BindDrawable.class, "fields", element);
  764.       hasError |= isBindingInWrongPackage(BindDrawable.class, element);
  765.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:764: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  762.       // Verify common generated code restrictions.
  763.       hasError |= isInaccessibleViaGeneratedCode(BindDrawable.class, "fields", element);
  764. >     hasError |= isBindingInWrongPackage(BindDrawable.class, element);
  765.   
  766.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:774: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  772.       int id = element.getAnnotation(BindDrawable.class).value();
  773.       int tint = element.getAnnotation(BindDrawable.class).tint();
  774. >     Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
  775.   
  776.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:776: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  774.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
  775.   
  776. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  777.       builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint)));
  778.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:751: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.resourceBindings`,dereference of pointer `this`.
  749.   
  750.       void addResource(ResourceBinding binding) {
  751. >       resourceBindings.add(binding);
  752.       }
  753.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:754: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  752.     private static @Nullable Unbinder parseOnItemClick(final Object target, final Method method,
  753.         View source) {
  754. >     OnItemClick onItemClick = method.getAnnotation(OnItemClick.class);
  755.       if (onItemClick == null) {
  756.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:764: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  762.   
  763.       List<AdapterView<?>> views =
  764. >         findViews(source, onItemClick.value(), isRequired(method), method.getName(),
  765.               AdapterView.class);
  766.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:771: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  769.               argumentTransformer.transform(parent, view, position, id)));
  770.   
  771. >     return new ListenerUnbinder<>(views, ON_ITEM_CLICK);
  772.     }
  773.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:764: warning: GRADUAL_DEREFERENCE
  method call on pointer `onItemClick`.
  762.   
  763.       List<AdapterView<?>> views =
  764. >         findViews(source, onItemClick.value(), isRequired(method), method.getName(),
  765.               AdapterView.class);
  766.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:755: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  753.   
  754.       void setParent(BindingSet parent) {
  755. >       this.parentBinding = parent;
  756.       }
  757.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:763: warning: GRADUAL_DEREFERENCE
  dereference of pointer `builder`.
  761.           return null;
  762.         }
  763. >       FieldViewBinding fieldBinding = builder.fieldBinding;
  764.         if (fieldBinding == null) {
  765.           return null;

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:767: warning: GRADUAL_DEREFERENCE
  method call on pointer `fieldBinding`.
  765.           return null;
  766.         }
  767. >       return fieldBinding.getName();
  768.       }
  769.   

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:759: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.viewIdMap`,dereference of pointer `this`.
  757.   
  758.       @Nullable String findExistingBindingName(Id id) {
  759. >       ViewBinding.Builder builder = viewIdMap.get(id);
  760.         if (builder == null) {
  761.           return null;

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:772: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  770.       assertAbout(javaSource()).that(source)
  771.           .processedWith(new ButterKnifeProcessor())
  772. >         .failsToCompile()
  773.           .withErrorContaining(
  774.               "@BindView-annotated class incorrectly in Java framework package. (java.test.Test)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:773: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  771.           .processedWith(new ButterKnifeProcessor())
  772.           .failsToCompile()
  773. >         .withErrorContaining(
  774.               "@BindView-annotated class incorrectly in Java framework package. (java.test.Test)")
  775.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:775: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  773.           .withErrorContaining(
  774.               "@BindView-annotated class incorrectly in Java framework package. (java.test.Test)")
  775. >         .in(source).onLine(5);
  776.     }
  777.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:775: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  773.           .withErrorContaining(
  774.               "@BindView-annotated class incorrectly in Java framework package. (java.test.Test)")
  775. >         .in(source).onLine(5);
  776.     }
  777.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:770: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  768.       );
  769.   
  770. >     assertAbout(javaSource()).that(source)
  771.           .processedWith(new ButterKnifeProcessor())
  772.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:771: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  769.   
  770.       assertAbout(javaSource()).that(source)
  771. >         .processedWith(new ButterKnifeProcessor())
  772.           .failsToCompile()
  773.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:770: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  768.       );
  769.   
  770. >     assertAbout(javaSource()).that(source)
  771.           .processedWith(new ButterKnifeProcessor())
  772.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  766.   
  767.       ViewCollections.set(views, ON_ITEM_CLICK,
  768. >         (parent, view, position, id) -> tryInvoke(method, target,
  769.               argumentTransformer.transform(parent, view, position, id)));
  770.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:769: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  767.       ViewCollections.set(views, ON_ITEM_CLICK,
  768.           (parent, view, position, id) -> tryInvoke(method, target,
  769. >             argumentTransformer.transform(parent, view, position, id)));
  770.   
  771.       return new ListenerUnbinder<>(views, ON_ITEM_CLICK);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:769: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  767.       ViewCollections.set(views, ON_ITEM_CLICK,
  768.           (parent, view, position, id) -> tryInvoke(method, target,
  769. >             argumentTransformer.transform(parent, view, position, id)));
  770.   
  771.       return new ListenerUnbinder<>(views, ON_ITEM_CLICK);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:773: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  771.         ViewBinding.Builder viewId = viewIdMap.get(id);
  772.         if (viewId == null) {
  773. >         viewId = new ViewBinding.Builder(id);
  774.           viewIdMap.put(id, viewId);
  775.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:771: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.viewIdMap`,dereference of pointer `this`.
  769.   
  770.       private ViewBinding.Builder getOrCreateViewBindings(Id id) {
  771. >       ViewBinding.Builder viewId = viewIdMap.get(id);
  772.         if (viewId == null) {
  773.           viewId = new ViewBinding.Builder(id);

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:774: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.viewIdMap`,dereference of pointer `this`.
  772.         if (viewId == null) {
  773.           viewId = new ViewBinding.Builder(id);
  774. >         viewIdMap.put(id, viewId);
  775.         }
  776.         return viewId;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:776: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  774.     private static @Nullable Unbinder parseOnItemLongClick(final Object target, final Method method,
  775.         View source) {
  776. >     OnItemLongClick onItemLongClick = method.getAnnotation(OnItemLongClick.class);
  777.       if (onItemLongClick == null) {
  778.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:786: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  784.   
  785.       List<AdapterView<?>> views =
  786. >         findViews(source, onItemLongClick.value(), isRequired(method), method.getName(),
  787.               AdapterView.class);
  788.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:798: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  796.       });
  797.   
  798. >     return new ListenerUnbinder<>(views, ON_ITEM_LONG_CLICK);
  799.     }
  800.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:786: warning: GRADUAL_DEREFERENCE
  method call on pointer `onItemLongClick`.
  784.   
  785.       List<AdapterView<?>> views =
  786. >         findViews(source, onItemLongClick.value(), isRequired(method), method.getName(),
  787.               AdapterView.class);
  788.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:790: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  788.       assertAbout(javaSource()).that(source)
  789.           .processedWith(new ButterKnifeProcessor())
  790. >         .failsToCompile()
  791.           .withErrorContaining(
  792.               "@BindView-annotated class incorrectly in Android framework package. (android.test.Test)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:791: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  789.           .processedWith(new ButterKnifeProcessor())
  790.           .failsToCompile()
  791. >         .withErrorContaining(
  792.               "@BindView-annotated class incorrectly in Android framework package. (android.test.Test)")
  793.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:793: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  791.           .withErrorContaining(
  792.               "@BindView-annotated class incorrectly in Android framework package. (android.test.Test)")
  793. >         .in(source).onLine(5);
  794.     }
  795.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:793: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  791.           .withErrorContaining(
  792.               "@BindView-annotated class incorrectly in Android framework package. (android.test.Test)")
  793. >         .in(source).onLine(5);
  794.     }
  795.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:788: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  786.       );
  787.   
  788. >     assertAbout(javaSource()).that(source)
  789.           .processedWith(new ButterKnifeProcessor())
  790.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:789: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  787.   
  788.       assertAbout(javaSource()).that(source)
  789. >         .processedWith(new ButterKnifeProcessor())
  790.           .failsToCompile()
  791.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:788: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  786.       );
  787.   
  788. >     assertAbout(javaSource()).that(source)
  789.           .processedWith(new ButterKnifeProcessor())
  790.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:782: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  780.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  781.         for (ViewBinding.Builder builder : viewIdMap.values()) {
  782. >         viewBindings.add(builder.build());
  783.         }
  784.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:785: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$47`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`,dereference of pointer `this`.
  783.         }
  784.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,
  785. >           viewBindings.build(), collectionBindings.build(), resourceBindings.build(),
  786.             parentBinding);
  787.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:781: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  779.       BindingSet build() {
  780.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  781. >       for (ViewBinding.Builder builder : viewIdMap.values()) {
  782.           viewBindings.add(builder.build());
  783.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:781: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  779.       BindingSet build() {
  780.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  781. >       for (ViewBinding.Builder builder : viewIdMap.values()) {
  782.           viewBindings.add(builder.build());
  783.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:785: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.collectionBindings`,dereference of pointer `this`.
  783.         }
  784.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,
  785. >           viewBindings.build(), collectionBindings.build(), resourceBindings.build(),
  786.             parentBinding);
  787.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:785: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.resourceBindings`,dereference of pointer `this`.
  783.         }
  784.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,
  785. >           viewBindings.build(), collectionBindings.build(), resourceBindings.build(),
  786.             parentBinding);
  787.       }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:781: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.BindingSet$Builder.viewIdMap`,dereference of pointer `this`.
  779.       BindingSet build() {
  780.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  781. >       for (ViewBinding.Builder builder : viewIdMap.values()) {
  782.           viewBindings.add(builder.build());
  783.         }

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:782: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewBindings`.
  780.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  781.         for (ViewBinding.Builder builder : viewIdMap.values()) {
  782. >         viewBindings.add(builder.build());
  783.         }
  784.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,

butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:785: warning: GRADUAL_DEREFERENCE
  method call on pointer `viewBindings`.
  783.         }
  784.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,
  785. >           viewBindings.build(), collectionBindings.build(), resourceBindings.build(),
  786.             parentBinding);
  787.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:790: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  788.       if (element.asType().getKind() != TypeKind.FLOAT) {
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790. >           BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  791.             element.getSimpleName());
  792.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:791: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  791. >           element.getSimpleName());
  792.         hasError = true;
  793.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:808: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  806.       Id resourceId = elementToId(element, BindFloat.class, id);
  807.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  808. >     builder.addResource(
  809.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.FLOAT));
  810.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:790: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindFloat`.
  788.       if (element.asType().getKind() != TypeKind.FLOAT) {
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790. >           BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  791.             element.getSimpleName());
  792.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:785: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  783.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  784.       boolean hasError = false;
  785. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  786.   
  787.       // Verify that the target type is float.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:788: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  786.   
  787.       // Verify that the target type is float.
  788. >     if (element.asType().getKind() != TypeKind.FLOAT) {
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:791: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  791. >           element.getSimpleName());
  792.         hasError = true;
  793.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:804: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  802.   
  803.       // Assemble information on the field.
  804. >     String name = element.getSimpleName().toString();
  805.       int id = element.getAnnotation(BindFloat.class).value();
  806.       Id resourceId = elementToId(element, BindFloat.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:805: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  803.       // Assemble information on the field.
  804.       String name = element.getSimpleName().toString();
  805. >     int id = element.getAnnotation(BindFloat.class).value();
  806.       Id resourceId = elementToId(element, BindFloat.class, id);
  807.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:790: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  788.       if (element.asType().getKind() != TypeKind.FLOAT) {
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790. >           BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  791.             element.getSimpleName());
  792.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:811: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  809.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.FLOAT));
  810.   
  811. >     erasedTargetNames.add(enclosingElement);
  812.     }
  813.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:804: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  802.   
  803.       // Assemble information on the field.
  804. >     String name = element.getSimpleName().toString();
  805.       int id = element.getAnnotation(BindFloat.class).value();
  806.       Id resourceId = elementToId(element, BindFloat.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:805: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  803.       // Assemble information on the field.
  804.       String name = element.getSimpleName().toString();
  805. >     int id = element.getAnnotation(BindFloat.class).value();
  806.       Id resourceId = elementToId(element, BindFloat.class, id);
  807.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:808: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  806.       Id resourceId = elementToId(element, BindFloat.class, id);
  807.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  808. >     builder.addResource(
  809.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.FLOAT));
  810.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:788: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  786.   
  787.       // Verify that the target type is float.
  788. >     if (element.asType().getKind() != TypeKind.FLOAT) {
  789.         error(element, "@%s field type must be 'float'. (%s.%s)",
  790.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:789: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  787.       // Verify that the target type is float.
  788.       if (element.asType().getKind() != TypeKind.FLOAT) {
  789. >       error(element, "@%s field type must be 'float'. (%s.%s)",
  790.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  791.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:796: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  794.   
  795.       // Verify common generated code restrictions.
  796. >     hasError |= isInaccessibleViaGeneratedCode(BindFloat.class, "fields", element);
  797.       hasError |= isBindingInWrongPackage(BindFloat.class, element);
  798.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:797: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  795.       // Verify common generated code restrictions.
  796.       hasError |= isInaccessibleViaGeneratedCode(BindFloat.class, "fields", element);
  797. >     hasError |= isBindingInWrongPackage(BindFloat.class, element);
  798.   
  799.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:806: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  804.       String name = element.getSimpleName().toString();
  805.       int id = element.getAnnotation(BindFloat.class).value();
  806. >     Id resourceId = elementToId(element, BindFloat.class, id);
  807.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  808.       builder.addResource(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:807: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  805.       int id = element.getAnnotation(BindFloat.class).value();
  806.       Id resourceId = elementToId(element, BindFloat.class, id);
  807. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  808.       builder.addResource(
  809.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.FLOAT));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:790: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  788.   
  789.       ViewCollections.set(views, ON_ITEM_LONG_CLICK, (parent, view, position, id) -> {
  790. >       Object value =
  791.             tryInvoke(method, target, argumentTransformer.transform(parent, view, position, id));
  792.         //noinspection SimplifiableConditionalExpression

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:791: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  789.       ViewCollections.set(views, ON_ITEM_LONG_CLICK, (parent, view, position, id) -> {
  790.         Object value =
  791. >           tryInvoke(method, target, argumentTransformer.transform(parent, view, position, id));
  792.         //noinspection SimplifiableConditionalExpression
  793.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:791: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  789.       ViewCollections.set(views, ON_ITEM_LONG_CLICK, (parent, view, position, id) -> {
  790.         Object value =
  791. >           tryInvoke(method, target, argumentTransformer.transform(parent, view, position, id));
  792.         //noinspection SimplifiableConditionalExpression
  793.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:794: warning: GRADUAL_DEREFERENCE
  method call on pointer `value`.
  792.         //noinspection SimplifiableConditionalExpression
  793.         return propagateReturn
  794. >           ? (boolean) value
  795.             : true;
  796.       });

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:810: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  808.       assertAbout(javaSource()).that(source)
  809.           .processedWith(new ButterKnifeProcessor())
  810. >         .failsToCompile()
  811.           .withErrorContaining(
  812.               "@BindView fields may not be contained in private classes. (test.Test.Inner.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:811: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  809.           .processedWith(new ButterKnifeProcessor())
  810.           .failsToCompile()
  811. >         .withErrorContaining(
  812.               "@BindView fields may not be contained in private classes. (test.Test.Inner.thing)")
  813.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:813: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  811.           .withErrorContaining(
  812.               "@BindView fields may not be contained in private classes. (test.Test.Inner.thing)")
  813. >         .in(source).onLine(5);
  814.     }
  815.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:813: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  811.           .withErrorContaining(
  812.               "@BindView fields may not be contained in private classes. (test.Test.Inner.thing)")
  813. >         .in(source).onLine(5);
  814.     }
  815.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:808: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  806.       );
  807.   
  808. >     assertAbout(javaSource()).that(source)
  809.           .processedWith(new ButterKnifeProcessor())
  810.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:809: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  807.   
  808.       assertAbout(javaSource()).that(source)
  809. >         .processedWith(new ButterKnifeProcessor())
  810.           .failsToCompile()
  811.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:808: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  806.       );
  807.   
  808. >     assertAbout(javaSource()).that(source)
  809.           .processedWith(new ButterKnifeProcessor())
  810.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:803: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  801.     private static @Nullable Unbinder parseOnLongClick(final Object target, final Method method,
  802.         View source) {
  803. >     OnLongClick onLongClick = method.getAnnotation(OnLongClick.class);
  804.       if (onLongClick == null) {
  805.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  811.   
  812.       List<View> views =
  813. >         findViews(source, onLongClick.value(), isRequired(method), method.getName(), View.class);
  814.   
  815.       ViewCollections.set(views, ON_LONG_CLICK, v -> {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:823: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  821.       });
  822.   
  823. >     return new ListenerUnbinder<>(views, ON_LONG_CLICK);
  824.     }
  825.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_DEREFERENCE
  method call on pointer `onLongClick`.
  811.   
  812.       List<View> views =
  813. >         findViews(source, onLongClick.value(), isRequired(method), method.getName(), View.class);
  814.   
  815.       ViewCollections.set(views, ON_LONG_CLICK, v -> {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:822: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  820.       if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822. >           BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  823.             element.getSimpleName());
  824.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:823: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  823. >           element.getSimpleName());
  824.         hasError = true;
  825.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:839: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$59`.
  837.       if (style == null) {
  838.         error(element, "@%s style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (%s.%s)",
  839. >           BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(), name);
  840.         hasError = true;
  841.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:820: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.graphics.Typeface"`.
  818.   
  819.       // Verify that the target type is a Typeface.
  820. >     if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:835: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindFont`.
  833.       BindFont bindFont = element.getAnnotation(BindFont.class);
  834.   
  835. >     int styleValue = bindFont.style();
  836.       TypefaceStyles style = TypefaceStyles.fromValue(styleValue);
  837.       if (style == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:848: warning: GRADUAL_DEREFERENCE
  method call on pointer `bindFont`.
  846.   
  847.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  848. >     Id resourceId = elementToId(element, BindFont.class, bindFont.value());
  849.       builder.addResource(new FieldTypefaceBinding(resourceId, name, style));
  850.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:849: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  847.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  848.       Id resourceId = elementToId(element, BindFont.class, bindFont.value());
  849. >     builder.addResource(new FieldTypefaceBinding(resourceId, name, style));
  850.   
  851.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:822: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindFont`.
  820.       if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822. >           BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  823.             element.getSimpleName());
  824.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:839: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindFont`.
  837.       if (style == null) {
  838.         error(element, "@%s style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (%s.%s)",
  839. >           BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(), name);
  840.         hasError = true;
  841.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:817: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  815.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  816.       boolean hasError = false;
  817. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  818.   
  819.       // Verify that the target type is a Typeface.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:820: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  818.   
  819.       // Verify that the target type is a Typeface.
  820. >     if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:823: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  823. >           element.getSimpleName());
  824.         hasError = true;
  825.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:832: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  830.   
  831.       // Assemble information on the field.
  832. >     String name = element.getSimpleName().toString();
  833.       BindFont bindFont = element.getAnnotation(BindFont.class);
  834.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:833: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  831.       // Assemble information on the field.
  832.       String name = element.getSimpleName().toString();
  833. >     BindFont bindFont = element.getAnnotation(BindFont.class);
  834.   
  835.       int styleValue = bindFont.style();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:822: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  820.       if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822. >           BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  823.             element.getSimpleName());
  824.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:839: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  837.       if (style == null) {
  838.         error(element, "@%s style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (%s.%s)",
  839. >           BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(), name);
  840.         hasError = true;
  841.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:851: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  849.       builder.addResource(new FieldTypefaceBinding(resourceId, name, style));
  850.   
  851. >     erasedTargetNames.add(enclosingElement);
  852.     }
  853.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:832: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  830.   
  831.       // Assemble information on the field.
  832. >     String name = element.getSimpleName().toString();
  833.       BindFont bindFont = element.getAnnotation(BindFont.class);
  834.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:820: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  818.   
  819.       // Verify that the target type is a Typeface.
  820. >     if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:849: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$86`.
  847.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  848.       Id resourceId = elementToId(element, BindFont.class, bindFont.value());
  849. >     builder.addResource(new FieldTypefaceBinding(resourceId, name, style));
  850.   
  851.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:821: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  819.       // Verify that the target type is a Typeface.
  820.       if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  821. >       error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  822.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  823.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:828: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  826.   
  827.       // Verify common generated code restrictions.
  828. >     hasError |= isInaccessibleViaGeneratedCode(BindFont.class, "fields", element);
  829.       hasError |= isBindingInWrongPackage(BindFont.class, element);
  830.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:829: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  827.       // Verify common generated code restrictions.
  828.       hasError |= isInaccessibleViaGeneratedCode(BindFont.class, "fields", element);
  829. >     hasError |= isBindingInWrongPackage(BindFont.class, element);
  830.   
  831.       // Assemble information on the field.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:838: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  836.       TypefaceStyles style = TypefaceStyles.fromValue(styleValue);
  837.       if (style == null) {
  838. >       error(element, "@%s style must be NORMAL, BOLD, ITALIC, or BOLD_ITALIC. (%s.%s)",
  839.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(), name);
  840.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:847: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  845.       }
  846.   
  847. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  848.       Id resourceId = elementToId(element, BindFont.class, bindFont.value());
  849.       builder.addResource(new FieldTypefaceBinding(resourceId, name, style));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:848: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  846.   
  847.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  848. >     Id resourceId = elementToId(element, BindFont.class, bindFont.value());
  849.       builder.addResource(new FieldTypefaceBinding(resourceId, name, style));
  850.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:816: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  814.   
  815.       ViewCollections.set(views, ON_LONG_CLICK, v -> {
  816. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  817.         //noinspection SimplifiableConditionalExpression
  818.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:816: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  814.   
  815.       ViewCollections.set(views, ON_LONG_CLICK, v -> {
  816. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  817.         //noinspection SimplifiableConditionalExpression
  818.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:819: warning: GRADUAL_DEREFERENCE
  method call on pointer `returnValue`.
  817.         //noinspection SimplifiableConditionalExpression
  818.         return propagateReturn
  819. >           ? (boolean) returnValue
  820.             : true;
  821.       });

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:827: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  825.       assertAbout(javaSource()).that(source)
  826.           .processedWith(new ButterKnifeProcessor())
  827. >         .failsToCompile()
  828.           .withErrorContaining(
  829.               "@BindView fields must extend from View or be an interface. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:828: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  826.           .processedWith(new ButterKnifeProcessor())
  827.           .failsToCompile()
  828. >         .withErrorContaining(
  829.               "@BindView fields must extend from View or be an interface. (test.Test.thing)")
  830.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:830: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  828.           .withErrorContaining(
  829.               "@BindView fields must extend from View or be an interface. (test.Test.thing)")
  830. >         .in(source).onLine(4);
  831.     }
  832.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:830: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  828.           .withErrorContaining(
  829.               "@BindView fields must extend from View or be an interface. (test.Test.thing)")
  830. >         .in(source).onLine(4);
  831.     }
  832.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:825: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  823.       );
  824.   
  825. >     assertAbout(javaSource()).that(source)
  826.           .processedWith(new ButterKnifeProcessor())
  827.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:826: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  824.   
  825.       assertAbout(javaSource()).that(source)
  826. >         .processedWith(new ButterKnifeProcessor())
  827.           .failsToCompile()
  828.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:825: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  823.       );
  824.   
  825. >     assertAbout(javaSource()).that(source)
  826.           .processedWith(new ButterKnifeProcessor())
  827.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  dereference of pointer `butterknife.ButterKnife$8.butterknife.ButterKnife$8.$SwitchMap$butterknife$OnPageChange$Callback`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:828: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  826.     private static @Nullable Unbinder parseOnPageChange(final Object target, final Method method,
  827.         View source) {
  828. >     OnPageChange onPageChange = method.getAnnotation(OnPageChange.class);
  829.       if (onPageChange == null) {
  830.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:836: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  834.   
  835.       List<ViewPager> views =
  836. >         findViews(source, onPageChange.value(), isRequired(method), method.getName(),
  837.               ViewPager.class);
  838.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:844: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  842.           ArgumentTransformer argumentTransformer =
  843.               createArgumentTransformer(method, ON_PAGE_SCROLLED_TYPES);
  844. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  845.             @Override public void onPageScrolled(int position, float positionOffset,
  846.                 int positionOffsetPixels) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:856: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  854.           ArgumentTransformer argumentTransformer =
  855.               createArgumentTransformer(method, ON_PAGE_SELECTED_TYPES);
  856. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  857.             @Override public void onPageSelected(int position) {
  858.               tryInvoke(method, target, argumentTransformer.transform(position));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:866: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  864.           ArgumentTransformer argumentTransformer =
  865.               createArgumentTransformer(method, ON_PAGE_SCROLL_STATE_CHANGED_TYPES);
  866. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  867.             @Override public void onPageScrollStateChanged(int state) {
  868.               tryInvoke(method, target, argumentTransformer.transform(state));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:874: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`.
  872.         }
  873.         default:
  874. >         throw new AssertionError();
  875.       }
  876.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:878: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  876.   
  877.       ViewCollections.set(views, ADD_ON_PAGE_CHANGE, listener);
  878. >     return new ListenerUnbinder<>(views, REMOVE_ON_PAGE_CHANGE, listener);
  879.     }
  880.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:836: warning: GRADUAL_DEREFERENCE
  method call on pointer `onPageChange`.
  834.   
  835.       List<ViewPager> views =
  836. >         findViews(source, onPageChange.value(), isRequired(method), method.getName(),
  837.               ViewPager.class);
  838.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  method call on pointer `onPageChange`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:845: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  843.       assertAbout(javaSource()).that(source)
  844.           .processedWith(new ButterKnifeProcessor())
  845. >         .failsToCompile()
  846.           .withErrorContaining(
  847.               "@BindView fields may only be contained in classes. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:846: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  844.           .processedWith(new ButterKnifeProcessor())
  845.           .failsToCompile()
  846. >         .withErrorContaining(
  847.               "@BindView fields may only be contained in classes. (test.Test.thing)")
  848.           .in(source).onLine(4);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:848: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  846.           .withErrorContaining(
  847.               "@BindView fields may only be contained in classes. (test.Test.thing)")
  848. >         .in(source).onLine(4);
  849.     }
  850.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:848: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  846.           .withErrorContaining(
  847.               "@BindView fields may only be contained in classes. (test.Test.thing)")
  848. >         .in(source).onLine(4);
  849.     }
  850.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:843: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  841.       );
  842.   
  843. >     assertAbout(javaSource()).that(source)
  844.           .processedWith(new ButterKnifeProcessor())
  845.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:844: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  842.   
  843.       assertAbout(javaSource()).that(source)
  844. >         .processedWith(new ButterKnifeProcessor())
  845.           .failsToCompile()
  846.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:843: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  841.       );
  842.   
  843. >     assertAbout(javaSource()).that(source)
  844.           .processedWith(new ButterKnifeProcessor())
  845.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:848: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  846.                 int positionOffsetPixels) {
  847.               tryInvoke(method, target,
  848. >                 argumentTransformer.transform(position, positionOffset, positionOffsetPixels));
  849.             }
  850.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:847: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  845.             @Override public void onPageScrolled(int position, float positionOffset,
  846.                 int positionOffsetPixels) {
  847. >             tryInvoke(method, target,
  848.                   argumentTransformer.transform(position, positionOffset, positionOffsetPixels));
  849.             }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:848: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.ButterKnife$1.val$argumentTransformer`,dereference of pointer `this`.
  846.                 int positionOffsetPixels) {
  847.               tryInvoke(method, target,
  848. >                 argumentTransformer.transform(position, positionOffset, positionOffsetPixels));
  849.             }
  850.           };

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:863: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  861.       assertAbout(javaSource()).that(source)
  862.           .processedWith(new ButterKnifeProcessor())
  863. >         .failsToCompile()
  864.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  865.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:864: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  862.           .processedWith(new ButterKnifeProcessor())
  863.           .failsToCompile()
  864. >         .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  865.           .in(source).onLine(5);
  866.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:865: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  863.           .failsToCompile()
  864.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  865. >         .in(source).onLine(5);
  866.     }
  867.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:865: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  863.           .failsToCompile()
  864.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  865. >         .in(source).onLine(5);
  866.     }
  867.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:861: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  859.       );
  860.   
  861. >     assertAbout(javaSource()).that(source)
  862.           .processedWith(new ButterKnifeProcessor())
  863.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:862: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  860.   
  861.       assertAbout(javaSource()).that(source)
  862. >         .processedWith(new ButterKnifeProcessor())
  863.           .failsToCompile()
  864.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:861: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  859.       );
  860.   
  861. >     assertAbout(javaSource()).that(source)
  862.           .processedWith(new ButterKnifeProcessor())
  863.           .failsToCompile()

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:861: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  859.       // Verify that the target type is int.
  860.       if (element.asType().getKind() != TypeKind.INT) {
  861. >       error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862.             enclosingElement.getQualifiedName(), element.getSimpleName());
  863.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:862: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$13`.
  860.       if (element.asType().getKind() != TypeKind.INT) {
  861.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  863.         hasError = true;
  864.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:879: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  877.       Id resourceId = elementToId(element, BindInt.class, id);
  878.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  879. >     builder.addResource(
  880.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.INT));
  881.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:861: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindInt`.
  859.       // Verify that the target type is int.
  860.       if (element.asType().getKind() != TypeKind.INT) {
  861. >       error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862.             enclosingElement.getQualifiedName(), element.getSimpleName());
  863.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:857: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  855.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  856.       boolean hasError = false;
  857. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  858.   
  859.       // Verify that the target type is int.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:860: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  858.   
  859.       // Verify that the target type is int.
  860. >     if (element.asType().getKind() != TypeKind.INT) {
  861.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862.             enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:862: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  860.       if (element.asType().getKind() != TypeKind.INT) {
  861.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  863.         hasError = true;
  864.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:875: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  873.   
  874.       // Assemble information on the field.
  875. >     String name = element.getSimpleName().toString();
  876.       int id = element.getAnnotation(BindInt.class).value();
  877.       Id resourceId = elementToId(element, BindInt.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:876: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  874.       // Assemble information on the field.
  875.       String name = element.getSimpleName().toString();
  876. >     int id = element.getAnnotation(BindInt.class).value();
  877.       Id resourceId = elementToId(element, BindInt.class, id);
  878.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:862: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  860.       if (element.asType().getKind() != TypeKind.INT) {
  861.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  863.         hasError = true;
  864.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:882: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  880.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.INT));
  881.   
  882. >     erasedTargetNames.add(enclosingElement);
  883.     }
  884.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:875: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  873.   
  874.       // Assemble information on the field.
  875. >     String name = element.getSimpleName().toString();
  876.       int id = element.getAnnotation(BindInt.class).value();
  877.       Id resourceId = elementToId(element, BindInt.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:876: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  874.       // Assemble information on the field.
  875.       String name = element.getSimpleName().toString();
  876. >     int id = element.getAnnotation(BindInt.class).value();
  877.       Id resourceId = elementToId(element, BindInt.class, id);
  878.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:879: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  877.       Id resourceId = elementToId(element, BindInt.class, id);
  878.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  879. >     builder.addResource(
  880.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.INT));
  881.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:860: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  858.   
  859.       // Verify that the target type is int.
  860. >     if (element.asType().getKind() != TypeKind.INT) {
  861.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862.             enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:861: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  859.       // Verify that the target type is int.
  860.       if (element.asType().getKind() != TypeKind.INT) {
  861. >       error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  862.             enclosingElement.getQualifiedName(), element.getSimpleName());
  863.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:867: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  865.   
  866.       // Verify common generated code restrictions.
  867. >     hasError |= isInaccessibleViaGeneratedCode(BindInt.class, "fields", element);
  868.       hasError |= isBindingInWrongPackage(BindInt.class, element);
  869.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:868: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  866.       // Verify common generated code restrictions.
  867.       hasError |= isInaccessibleViaGeneratedCode(BindInt.class, "fields", element);
  868. >     hasError |= isBindingInWrongPackage(BindInt.class, element);
  869.   
  870.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:877: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  875.       String name = element.getSimpleName().toString();
  876.       int id = element.getAnnotation(BindInt.class).value();
  877. >     Id resourceId = elementToId(element, BindInt.class, id);
  878.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  879.       builder.addResource(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:878: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  876.       int id = element.getAnnotation(BindInt.class).value();
  877.       Id resourceId = elementToId(element, BindInt.class, id);
  878. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  879.       builder.addResource(
  880.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.INT));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:856: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  854.           ArgumentTransformer argumentTransformer =
  855.               createArgumentTransformer(method, ON_PAGE_SELECTED_TYPES);
  856. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  857.             @Override public void onPageSelected(int position) {
  858.               tryInvoke(method, target, argumentTransformer.transform(position));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:856: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  854.           ArgumentTransformer argumentTransformer =
  855.               createArgumentTransformer(method, ON_PAGE_SELECTED_TYPES);
  856. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  857.             @Override public void onPageSelected(int position) {
  858.               tryInvoke(method, target, argumentTransformer.transform(position));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  856.           listener = new ViewPager.SimpleOnPageChangeListener() {
  857.             @Override public void onPageSelected(int position) {
  858. >             tryInvoke(method, target, argumentTransformer.transform(position));
  859.             }
  860.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  856.           listener = new ViewPager.SimpleOnPageChangeListener() {
  857.             @Override public void onPageSelected(int position) {
  858. >             tryInvoke(method, target, argumentTransformer.transform(position));
  859.             }
  860.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.ButterKnife$2.val$argumentTransformer`,dereference of pointer `this`.
  856.           listener = new ViewPager.SimpleOnPageChangeListener() {
  857.             @Override public void onPageSelected(int position) {
  858. >             tryInvoke(method, target, argumentTransformer.transform(position));
  859.             }
  860.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:866: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  864.           ArgumentTransformer argumentTransformer =
  865.               createArgumentTransformer(method, ON_PAGE_SCROLL_STATE_CHANGED_TYPES);
  866. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  867.             @Override public void onPageScrollStateChanged(int state) {
  868.               tryInvoke(method, target, argumentTransformer.transform(state));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:866: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  864.           ArgumentTransformer argumentTransformer =
  865.               createArgumentTransformer(method, ON_PAGE_SCROLL_STATE_CHANGED_TYPES);
  866. >         listener = new ViewPager.SimpleOnPageChangeListener() {
  867.             @Override public void onPageScrollStateChanged(int state) {
  868.               tryInvoke(method, target, argumentTransformer.transform(state));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:868: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  866.           listener = new ViewPager.SimpleOnPageChangeListener() {
  867.             @Override public void onPageScrollStateChanged(int state) {
  868. >             tryInvoke(method, target, argumentTransformer.transform(state));
  869.             }
  870.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:868: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  866.           listener = new ViewPager.SimpleOnPageChangeListener() {
  867.             @Override public void onPageScrollStateChanged(int state) {
  868. >             tryInvoke(method, target, argumentTransformer.transform(state));
  869.             }
  870.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:868: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.ButterKnife$3.val$argumentTransformer`,dereference of pointer `this`.
  866.           listener = new ViewPager.SimpleOnPageChangeListener() {
  867.             @Override public void onPageScrollStateChanged(int state) {
  868. >             tryInvoke(method, target, argumentTransformer.transform(state));
  869.             }
  870.           };

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:880: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  878.       assertAbout(javaSource()).that(source)
  879.           .processedWith(new ButterKnifeProcessor())
  880. >         .failsToCompile()
  881.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  882.           .in(source).onLine(5);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:881: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  879.           .processedWith(new ButterKnifeProcessor())
  880.           .failsToCompile()
  881. >         .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  882.           .in(source).onLine(5);
  883.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:882: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  880.           .failsToCompile()
  881.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  882. >         .in(source).onLine(5);
  883.     }
  884.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:882: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  880.           .failsToCompile()
  881.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")
  882. >         .in(source).onLine(5);
  883.     }
  884.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:878: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  876.       );
  877.   
  878. >     assertAbout(javaSource()).that(source)
  879.           .processedWith(new ButterKnifeProcessor())
  880.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:879: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  877.   
  878.       assertAbout(javaSource()).that(source)
  879. >         .processedWith(new ButterKnifeProcessor())
  880.           .failsToCompile()
  881.           .withErrorContaining("@BindView fields must not be private or static. (test.Test.thing)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:878: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  876.       );
  877.   
  878. >     assertAbout(javaSource()).that(source)
  879.           .processedWith(new ButterKnifeProcessor())
  880.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  dereference of pointer `butterknife.ButterKnife$8.butterknife.ButterKnife$8.$SwitchMap$butterknife$OnTextChanged$Callback`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:882: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  880.   
  881.     private static @Nullable Unbinder parseOnTextChanged(Object target, Method method, View source) {
  882. >     OnTextChanged onTextChanged = method.getAnnotation(OnTextChanged.class);
  883.       if (onTextChanged == null) {
  884.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:890: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  888.   
  889.       List<TextView> views =
  890. >         findViews(source, onTextChanged.value(), isRequired(method), method.getName(), View.class);
  891.   
  892.       TextWatcher textWatcher;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  895.           ArgumentTransformer argumentTransformer =
  896.               createArgumentTransformer(method, ON_TEXT_CHANGED_TYPES);
  897. >         textWatcher = new EmptyTextWatcher() {
  898.             @Override public void onTextChanged(CharSequence s, int start, int before, int count) {
  899.               tryInvoke(method, target, argumentTransformer.transform(s, start, before, count));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:907: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$57`.
  905.           ArgumentTransformer argumentTransformer =
  906.               createArgumentTransformer(method, BEFORE_TEXT_CHANGED_TYPES);
  907. >         textWatcher = new EmptyTextWatcher() {
  908.             @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  909.               tryInvoke(method, target, argumentTransformer.transform(s, start, count, after));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:917: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$66`.
  915.           ArgumentTransformer argumentTransformer =
  916.               createArgumentTransformer(method, AFTER_TEXT_CHANGED_TYPES);
  917. >         textWatcher = new EmptyTextWatcher() {
  918.             @Override public void afterTextChanged(Editable s) {
  919.               tryInvoke(method, target, argumentTransformer.transform(s));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:925: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`.
  923.         }
  924.         default:
  925. >         throw new AssertionError();
  926.       }
  927.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:929: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$79`.
  927.   
  928.       ViewCollections.set(views, ADD_TEXT_WATCHER, textWatcher);
  929. >     return new ListenerUnbinder<>(views, REMOVE_TEXT_WATCHER, textWatcher);
  930.     }
  931.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:890: warning: GRADUAL_DEREFERENCE
  method call on pointer `onTextChanged`.
  888.   
  889.       List<TextView> views =
  890. >         findViews(source, onTextChanged.value(), isRequired(method), method.getName(), View.class);
  891.   
  892.       TextWatcher textWatcher;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `onTextChanged`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:893: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  891.       if (!STRING_TYPE.equals(element.asType().toString())) {
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893. >           BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  894.             element.getSimpleName());
  895.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:894: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$14`.
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  894. >           element.getSimpleName());
  895.         hasError = true;
  896.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:891: warning: GRADUAL_DEREFERENCE
  method call on pointer `"java.lang.String"`.
  889.   
  890.       // Verify that the target type is String.
  891. >     if (!STRING_TYPE.equals(element.asType().toString())) {
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:911: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  909.       Id resourceId = elementToId(element, BindString.class, id);
  910.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  911. >     builder.addResource(
  912.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.STRING));
  913.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindString`.
  891.       if (!STRING_TYPE.equals(element.asType().toString())) {
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893. >           BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  894.             element.getSimpleName());
  895.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:888: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  886.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  887.       boolean hasError = false;
  888. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  889.   
  890.       // Verify that the target type is String.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:891: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  889.   
  890.       // Verify that the target type is String.
  891. >     if (!STRING_TYPE.equals(element.asType().toString())) {
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:894: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  894. >           element.getSimpleName());
  895.         hasError = true;
  896.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:907: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  905.   
  906.       // Assemble information on the field.
  907. >     String name = element.getSimpleName().toString();
  908.       int id = element.getAnnotation(BindString.class).value();
  909.       Id resourceId = elementToId(element, BindString.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:908: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  906.       // Assemble information on the field.
  907.       String name = element.getSimpleName().toString();
  908. >     int id = element.getAnnotation(BindString.class).value();
  909.       Id resourceId = elementToId(element, BindString.class, id);
  910.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  891.       if (!STRING_TYPE.equals(element.asType().toString())) {
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893. >           BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  894.             element.getSimpleName());
  895.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:914: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  912.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.STRING));
  913.   
  914. >     erasedTargetNames.add(enclosingElement);
  915.     }
  916.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:907: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$45`.
  905.   
  906.       // Assemble information on the field.
  907. >     String name = element.getSimpleName().toString();
  908.       int id = element.getAnnotation(BindString.class).value();
  909.       Id resourceId = elementToId(element, BindString.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:908: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$51`.
  906.       // Assemble information on the field.
  907.       String name = element.getSimpleName().toString();
  908. >     int id = element.getAnnotation(BindString.class).value();
  909.       Id resourceId = elementToId(element, BindString.class, id);
  910.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:911: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$64`.
  909.       Id resourceId = elementToId(element, BindString.class, id);
  910.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  911. >     builder.addResource(
  912.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.STRING));
  913.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:891: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  889.   
  890.       // Verify that the target type is String.
  891. >     if (!STRING_TYPE.equals(element.asType().toString())) {
  892.         error(element, "@%s field type must be 'String'. (%s.%s)",
  893.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:892: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  890.       // Verify that the target type is String.
  891.       if (!STRING_TYPE.equals(element.asType().toString())) {
  892. >       error(element, "@%s field type must be 'String'. (%s.%s)",
  893.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  894.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:899: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  897.   
  898.       // Verify common generated code restrictions.
  899. >     hasError |= isInaccessibleViaGeneratedCode(BindString.class, "fields", element);
  900.       hasError |= isBindingInWrongPackage(BindString.class, element);
  901.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:900: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  898.       // Verify common generated code restrictions.
  899.       hasError |= isInaccessibleViaGeneratedCode(BindString.class, "fields", element);
  900. >     hasError |= isBindingInWrongPackage(BindString.class, element);
  901.   
  902.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:909: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  907.       String name = element.getSimpleName().toString();
  908.       int id = element.getAnnotation(BindString.class).value();
  909. >     Id resourceId = elementToId(element, BindString.class, id);
  910.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  911.       builder.addResource(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:910: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  908.       int id = element.getAnnotation(BindString.class).value();
  909.       Id resourceId = elementToId(element, BindString.class, id);
  910. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  911.       builder.addResource(
  912.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.STRING));

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:898: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  896.       assertAbout(javaSource()).that(source)
  897.           .processedWith(new ButterKnifeProcessor())
  898. >         .failsToCompile()
  899.           .withErrorContaining(
  900.               "Attempt to use @BindView for an already bound ID 1 on 'thing1'. (test.Test.thing2)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:899: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  897.           .processedWith(new ButterKnifeProcessor())
  898.           .failsToCompile()
  899. >         .withErrorContaining(
  900.               "Attempt to use @BindView for an already bound ID 1 on 'thing1'. (test.Test.thing2)")
  901.           .in(source).onLine(6);

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:901: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  899.           .withErrorContaining(
  900.               "Attempt to use @BindView for an already bound ID 1 on 'thing1'. (test.Test.thing2)")
  901. >         .in(source).onLine(6);
  902.     }
  903.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:901: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  899.           .withErrorContaining(
  900.               "Attempt to use @BindView for an already bound ID 1 on 'thing1'. (test.Test.thing2)")
  901. >         .in(source).onLine(6);
  902.     }
  903.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:896: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  894.       );
  895.   
  896. >     assertAbout(javaSource()).that(source)
  897.           .processedWith(new ButterKnifeProcessor())
  898.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:897: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  895.   
  896.       assertAbout(javaSource()).that(source)
  897. >         .processedWith(new ButterKnifeProcessor())
  898.           .failsToCompile()
  899.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:896: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  894.       );
  895.   
  896. >     assertAbout(javaSource()).that(source)
  897.           .processedWith(new ButterKnifeProcessor())
  898.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  dereference of pointer `butterknife.ButterKnife$8.butterknife.ButterKnife$8.$SwitchMap$butterknife$OnPageChange$Callback`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  dereference of pointer `butterknife.ButterKnife$8.butterknife.ButterKnife$8.$SwitchMap$butterknife$OnTextChanged$Callback`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnPageChange$Callback.butterknife.OnPageChange$Callback.PAGE_SCROLLED`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnPageChange$Callback.butterknife.OnPageChange$Callback.PAGE_SCROLL_STATE_CHANGED`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:840: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnPageChange$Callback.butterknife.OnPageChange$Callback.PAGE_SELECTED`.
  838.   
  839.       ViewPager.OnPageChangeListener listener;
  840. >     switch (onPageChange.callback()) {
  841.         case PAGE_SCROLLED: {
  842.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnTextChanged$Callback.butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnTextChanged$Callback.butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:893: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.OnTextChanged$Callback.butterknife.OnTextChanged$Callback.TEXT_CHANGED`.
  891.   
  892.       TextWatcher textWatcher;
  893. >     switch (onTextChanged.callback()) {
  894.         case TEXT_CHANGED: {
  895.           ArgumentTransformer argumentTransformer =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  895.           ArgumentTransformer argumentTransformer =
  896.               createArgumentTransformer(method, ON_TEXT_CHANGED_TYPES);
  897. >         textWatcher = new EmptyTextWatcher() {
  898.             @Override public void onTextChanged(CharSequence s, int start, int before, int count) {
  899.               tryInvoke(method, target, argumentTransformer.transform(s, start, before, count));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  895.           ArgumentTransformer argumentTransformer =
  896.               createArgumentTransformer(method, ON_TEXT_CHANGED_TYPES);
  897. >         textWatcher = new EmptyTextWatcher() {
  898.             @Override public void onTextChanged(CharSequence s, int start, int before, int count) {
  899.               tryInvoke(method, target, argumentTransformer.transform(s, start, before, count));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:899: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  897.           textWatcher = new EmptyTextWatcher() {
  898.             @Override public void onTextChanged(CharSequence s, int start, int before, int count) {
  899. >             tryInvoke(method, target, argumentTransformer.transform(s, start, before, count));
  900.             }
  901.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:899: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  897.           textWatcher = new EmptyTextWatcher() {
  898.             @Override public void onTextChanged(CharSequence s, int start, int before, int count) {
  899. >             tryInvoke(method, target, argumentTransformer.transform(s, start, before, count));
  900.             }
  901.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:899: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.ButterKnife$4.val$argumentTransformer`,dereference of pointer `this`.
  897.           textWatcher = new EmptyTextWatcher() {
  898.             @Override public void onTextChanged(CharSequence s, int start, int before, int count) {
  899. >             tryInvoke(method, target, argumentTransformer.transform(s, start, before, count));
  900.             }
  901.           };

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:922: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$16`.
  920.           .that(source)
  921.           .processedWith(new ButterKnifeProcessor())
  922. >         .failsToCompile()
  923.           .withErrorContaining(
  924.               "ID-free binding must not be annotated with @Optional. (test.Test.doStuff)")

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:923: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$19`.
  921.           .processedWith(new ButterKnifeProcessor())
  922.           .failsToCompile()
  923. >         .withErrorContaining(
  924.               "ID-free binding must not be annotated with @Optional. (test.Test.doStuff)")
  925.           .in(source)

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:925: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  923.           .withErrorContaining(
  924.               "ID-free binding must not be annotated with @Optional. (test.Test.doStuff)")
  925. >         .in(source)
  926.           .onLine(7);
  927.     }

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:926: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  924.               "ID-free binding must not be annotated with @Optional. (test.Test.doStuff)")
  925.           .in(source)
  926. >         .onLine(7);
  927.     }
  928.   

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:920: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  918.   
  919.       assertAbout(javaSource())
  920. >         .that(source)
  921.           .processedWith(new ButterKnifeProcessor())
  922.           .failsToCompile()

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:921: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  919.       assertAbout(javaSource())
  920.           .that(source)
  921. >         .processedWith(new ButterKnifeProcessor())
  922.           .failsToCompile()
  923.           .withErrorContaining(

butterknife-runtime/src/test/java/butterknife/BindViewTest.java:920: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  918.   
  919.       assertAbout(javaSource())
  920. >         .that(source)
  921.           .processedWith(new ButterKnifeProcessor())
  922.           .failsToCompile()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:907: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  905.           ArgumentTransformer argumentTransformer =
  906.               createArgumentTransformer(method, BEFORE_TEXT_CHANGED_TYPES);
  907. >         textWatcher = new EmptyTextWatcher() {
  908.             @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  909.               tryInvoke(method, target, argumentTransformer.transform(s, start, count, after));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:907: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  905.           ArgumentTransformer argumentTransformer =
  906.               createArgumentTransformer(method, BEFORE_TEXT_CHANGED_TYPES);
  907. >         textWatcher = new EmptyTextWatcher() {
  908.             @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  909.               tryInvoke(method, target, argumentTransformer.transform(s, start, count, after));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:909: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  907.           textWatcher = new EmptyTextWatcher() {
  908.             @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  909. >             tryInvoke(method, target, argumentTransformer.transform(s, start, count, after));
  910.             }
  911.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:909: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  907.           textWatcher = new EmptyTextWatcher() {
  908.             @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  909. >             tryInvoke(method, target, argumentTransformer.transform(s, start, count, after));
  910.             }
  911.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:909: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.ButterKnife$5.val$argumentTransformer`,dereference of pointer `this`.
  907.           textWatcher = new EmptyTextWatcher() {
  908.             @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {
  909. >             tryInvoke(method, target, argumentTransformer.transform(s, start, count, after));
  910.             }
  911.           };

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:927: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  925.         error(element,
  926.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  927. >           BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),
  928.             element.getSimpleName());
  929.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:928: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$8`.
  926.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  927.             BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),
  928. >           element.getSimpleName());
  929.         hasError = true;
  930.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:945: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  943.       Id resourceId = elementToId(element, BindArray.class, id);
  944.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  945. >     builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));
  946.   
  947.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:927: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.BindArray`.
  925.         error(element,
  926.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  927. >           BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),
  928.             element.getSimpleName());
  929.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:920: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  918.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  919.       boolean hasError = false;
  920. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  921.   
  922.       // Verify that the target type is supported.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:928: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  926.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  927.             BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),
  928. >           element.getSimpleName());
  929.         hasError = true;
  930.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:941: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  939.   
  940.       // Assemble information on the field.
  941. >     String name = element.getSimpleName().toString();
  942.       int id = element.getAnnotation(BindArray.class).value();
  943.       Id resourceId = elementToId(element, BindArray.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:942: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  940.       // Assemble information on the field.
  941.       String name = element.getSimpleName().toString();
  942. >     int id = element.getAnnotation(BindArray.class).value();
  943.       Id resourceId = elementToId(element, BindArray.class, id);
  944.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:927: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  925.         error(element,
  926.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  927. >           BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),
  928.             element.getSimpleName());
  929.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:947: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  945.       builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));
  946.   
  947. >     erasedTargetNames.add(enclosingElement);
  948.     }
  949.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:941: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$40`.
  939.   
  940.       // Assemble information on the field.
  941. >     String name = element.getSimpleName().toString();
  942.       int id = element.getAnnotation(BindArray.class).value();
  943.       Id resourceId = elementToId(element, BindArray.class, id);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:942: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$46`.
  940.       // Assemble information on the field.
  941.       String name = element.getSimpleName().toString();
  942. >     int id = element.getAnnotation(BindArray.class).value();
  943.       Id resourceId = elementToId(element, BindArray.class, id);
  944.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:945: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$61`.
  943.       Id resourceId = elementToId(element, BindArray.class, id);
  944.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  945. >     builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));
  946.   
  947.       erasedTargetNames.add(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:925: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  923.       FieldResourceBinding.Type type = getArrayResourceMethodName(element);
  924.       if (type == null) {
  925. >       error(element,
  926.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  927.             BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:933: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  931.   
  932.       // Verify common generated code restrictions.
  933. >     hasError |= isInaccessibleViaGeneratedCode(BindArray.class, "fields", element);
  934.       hasError |= isBindingInWrongPackage(BindArray.class, element);
  935.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:934: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  932.       // Verify common generated code restrictions.
  933.       hasError |= isInaccessibleViaGeneratedCode(BindArray.class, "fields", element);
  934. >     hasError |= isBindingInWrongPackage(BindArray.class, element);
  935.   
  936.       if (hasError) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:943: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  941.       String name = element.getSimpleName().toString();
  942.       int id = element.getAnnotation(BindArray.class).value();
  943. >     Id resourceId = elementToId(element, BindArray.class, id);
  944.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  945.       builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:944: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  942.       int id = element.getAnnotation(BindArray.class).value();
  943.       Id resourceId = elementToId(element, BindArray.class, id);
  944. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  945.       builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));
  946.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:917: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  915.           ArgumentTransformer argumentTransformer =
  916.               createArgumentTransformer(method, AFTER_TEXT_CHANGED_TYPES);
  917. >         textWatcher = new EmptyTextWatcher() {
  918.             @Override public void afterTextChanged(Editable s) {
  919.               tryInvoke(method, target, argumentTransformer.transform(s));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:917: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  915.           ArgumentTransformer argumentTransformer =
  916.               createArgumentTransformer(method, AFTER_TEXT_CHANGED_TYPES);
  917. >         textWatcher = new EmptyTextWatcher() {
  918.             @Override public void afterTextChanged(Editable s) {
  919.               tryInvoke(method, target, argumentTransformer.transform(s));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:919: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  917.           textWatcher = new EmptyTextWatcher() {
  918.             @Override public void afterTextChanged(Editable s) {
  919. >             tryInvoke(method, target, argumentTransformer.transform(s));
  920.             }
  921.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:919: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`,dereference of pointer `this`.
  917.           textWatcher = new EmptyTextWatcher() {
  918.             @Override public void afterTextChanged(Editable s) {
  919. >             tryInvoke(method, target, argumentTransformer.transform(s));
  920.             }
  921.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:919: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.ButterKnife$6.val$argumentTransformer`,dereference of pointer `this`.
  917.           textWatcher = new EmptyTextWatcher() {
  918.             @Override public void afterTextChanged(Editable s) {
  919. >             tryInvoke(method, target, argumentTransformer.transform(s));
  920.             }
  921.           };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:934: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  932.     private static @Nullable Unbinder parseOnTouch(final Object target, final Method method,
  933.         View source) {
  934. >     OnTouch onTouch = method.getAnnotation(OnTouch.class);
  935.       if (onTouch == null) {
  936.         return null;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:944: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  942.   
  943.       List<View> views =
  944. >         findViews(source, onTouch.value(), isRequired(method), method.getName(), View.class);
  945.   
  946.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:954: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  952.       });
  953.   
  954. >     return new ListenerUnbinder<>(views, ON_TOUCH);
  955.     }
  956.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:944: warning: GRADUAL_DEREFERENCE
  method call on pointer `onTouch`.
  942.   
  943.       List<View> views =
  944. >         findViews(source, onTouch.value(), isRequired(method), method.getName(), View.class);
  945.   
  946.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:947: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$0`.
  945.   
  946.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {
  947. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  948.         //noinspection SimplifiableConditionalExpression
  949.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:947: warning: GRADUAL_DEREFERENCE
  method call on pointer `argumentTransformer`.
  945.   
  946.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {
  947. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  948.         //noinspection SimplifiableConditionalExpression
  949.         return propagateReturn

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:950: warning: GRADUAL_DEREFERENCE
  method call on pointer `returnValue`.
  948.         //noinspection SimplifiableConditionalExpression
  949.         return propagateReturn
  950. >           ? (boolean) returnValue
  951.             : true;
  952.       });

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:956: warning: GRADUAL_DEREFERENCE
  method call on pointer `"android.content.res.TypedArray"`.
  954.     private static @Nullable FieldResourceBinding.Type getArrayResourceMethodName(Element element) {
  955.       TypeMirror typeMirror = element.asType();
  956. >     if (TYPED_ARRAY_TYPE.equals(typeMirror.toString())) {
  957.         return FieldResourceBinding.Type.TYPED_ARRAY;
  958.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:964: warning: GRADUAL_DEREFERENCE
  method call on pointer `"int"`.
  962.         if (STRING_TYPE.equals(componentType)) {
  963.           return FieldResourceBinding.Type.STRING_ARRAY;
  964. >       } else if ("int".equals(componentType)) {
  965.           return FieldResourceBinding.Type.INT_ARRAY;
  966.         } else if ("java.lang.CharSequence".equals(componentType)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:966: warning: GRADUAL_DEREFERENCE
  method call on pointer `"java.lang.CharSequence"`.
  964.         } else if ("int".equals(componentType)) {
  965.           return FieldResourceBinding.Type.INT_ARRAY;
  966. >       } else if ("java.lang.CharSequence".equals(componentType)) {
  967.           return FieldResourceBinding.Type.TEXT_ARRAY;
  968.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:962: warning: GRADUAL_DEREFERENCE
  method call on pointer `"java.lang.String"`.
  960.         ArrayType arrayType = (ArrayType) typeMirror;
  961.         String componentType = arrayType.getComponentType().toString();
  962. >       if (STRING_TYPE.equals(componentType)) {
  963.           return FieldResourceBinding.Type.STRING_ARRAY;
  964.         } else if ("int".equals(componentType)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:961: warning: GRADUAL_DEREFERENCE
  method call on pointer `arrayType`.
  959.       if (TypeKind.ARRAY.equals(typeMirror.getKind())) {
  960.         ArrayType arrayType = (ArrayType) typeMirror;
  961. >       String componentType = arrayType.getComponentType().toString();
  962.         if (STRING_TYPE.equals(componentType)) {
  963.           return FieldResourceBinding.Type.STRING_ARRAY;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:955: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  953.      */
  954.     private static @Nullable FieldResourceBinding.Type getArrayResourceMethodName(Element element) {
  955. >     TypeMirror typeMirror = element.asType();
  956.       if (TYPED_ARRAY_TYPE.equals(typeMirror.toString())) {
  957.         return FieldResourceBinding.Type.TYPED_ARRAY;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:961: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  959.       if (TypeKind.ARRAY.equals(typeMirror.getKind())) {
  960.         ArrayType arrayType = (ArrayType) typeMirror;
  961. >       String componentType = arrayType.getComponentType().toString();
  962.         if (STRING_TYPE.equals(componentType)) {
  963.           return FieldResourceBinding.Type.STRING_ARRAY;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:959: warning: GRADUAL_DEREFERENCE
  method call on pointer `type.TypeKind.javax.lang.model.type.TypeKind.ARRAY`.
  957.         return FieldResourceBinding.Type.TYPED_ARRAY;
  958.       }
  959. >     if (TypeKind.ARRAY.equals(typeMirror.getKind())) {
  960.         ArrayType arrayType = (ArrayType) typeMirror;
  961.         String componentType = arrayType.getComponentType().toString();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:956: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeMirror`.
  954.     private static @Nullable FieldResourceBinding.Type getArrayResourceMethodName(Element element) {
  955.       TypeMirror typeMirror = element.asType();
  956. >     if (TYPED_ARRAY_TYPE.equals(typeMirror.toString())) {
  957.         return FieldResourceBinding.Type.TYPED_ARRAY;
  958.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:959: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeMirror`.
  957.         return FieldResourceBinding.Type.TYPED_ARRAY;
  958.       }
  959. >     if (TypeKind.ARRAY.equals(typeMirror.getKind())) {
  960.         ArrayType arrayType = (ArrayType) typeMirror;
  961.         String componentType = arrayType.getComponentType().toString();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:960: warning: GRADUAL_DEREFERENCE
  dereference of pointer `ids`.
  958.     private static <T extends View> List<T> findViews(View source, int[] ids, boolean isRequired,
  959.         String name, Class<? extends View> cls) {
  960. >     if (ids.length == 1 && ids[0] == View.NO_ID) {
  961.         return singletonList((T) cls.cast(source));
  962.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:966: warning: GRADUAL_DEREFERENCE
  dereference of pointer `ids`.
  964.       String who = "method '" + name + "'";
  965.       List<T> views = new ArrayList<>(ids.length);
  966. >     for (int id : ids) {
  967.         if (isRequired) {
  968.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:961: warning: GRADUAL_DEREFERENCE
  method call on pointer `cls`.
  959.         String name, Class<? extends View> cls) {
  960.       if (ids.length == 1 && ids[0] == View.NO_ID) {
  961. >       return singletonList((T) cls.cast(source));
  962.       }
  963.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:964: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  962.       }
  963.   
  964. >     String who = "method '" + name + "'";
  965.       List<T> views = new ArrayList<>(ids.length);
  966.       for (int id : ids) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:964: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  962.       }
  963.   
  964. >     String who = "method '" + name + "'";
  965.       List<T> views = new ArrayList<>(ids.length);
  966.       for (int id : ids) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:964: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$22`.
  962.       }
  963.   
  964. >     String who = "method '" + name + "'";
  965.       List<T> views = new ArrayList<>(ids.length);
  966.       for (int id : ids) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:964: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  962.       }
  963.   
  964. >     String who = "method '" + name + "'";
  965.       List<T> views = new ArrayList<>(ids.length);
  966.       for (int id : ids) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:965: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  963.   
  964.       String who = "method '" + name + "'";
  965. >     List<T> views = new ArrayList<>(ids.length);
  966.       for (int id : ids) {
  967.         if (isRequired) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:968: warning: GRADUAL_DEREFERENCE
  method call on pointer `views`.
  966.       for (int id : ids) {
  967.         if (isRequired) {
  968. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  969.         } else {
  970.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:972: warning: GRADUAL_DEREFERENCE
  method call on pointer `views`.
  970.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  971.           if (view != null) {
  972. >           views.add(view);
  973.           }
  974.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:977: warning: GRADUAL_DEREFERENCE
  dereference of pointer `array`.
  975.       Set<Integer> seenElements = new LinkedHashSet<>();
  976.   
  977. >     for (int element : array) {
  978.         if (!seenElements.add(element)) {
  979.           return element;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:975: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  973.     /** Returns the first duplicate element inside an array, null if there are no duplicates. */
  974.     private static @Nullable Integer findDuplicate(int[] array) {
  975. >     Set<Integer> seenElements = new LinkedHashSet<>();
  976.   
  977.       for (int element : array) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:978: warning: GRADUAL_DEREFERENCE
  method call on pointer `seenElements`.
  976.   
  977.       for (int element : array) {
  978. >       if (!seenElements.add(element)) {
  979.           return element;
  980.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:982: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  980.       int modifiers = object.getModifiers();
  981.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  982. >       throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984.             + object.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:982: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  980.       int modifiers = object.getModifiers();
  981.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  982. >       throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984.             + object.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:984: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  982.         throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984. >           + object.getName()
  985.             + " must not be private or static");
  986.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:984: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  982.         throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984. >           + object.getName()
  985.             + " must not be private or static");
  986.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:984: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  982.         throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984. >           + object.getName()
  985.             + " must not be private or static");
  986.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:984: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  982.         throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984. >           + object.getName()
  985.             + " must not be private or static");
  986.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:982: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  980.       int modifiers = object.getModifiers();
  981.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  982. >       throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984.             + object.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:980: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  978.   
  979.     private static <T extends AccessibleObject & Member> void validateMember(T object) {
  980. >     int modifiers = object.getModifiers();
  981.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  982.         throw new IllegalStateException(object.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:982: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  980.       int modifiers = object.getModifiers();
  981.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  982. >       throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984.             + object.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:984: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  982.         throw new IllegalStateException(object.getDeclaringClass().getName()
  983.             + "."
  984. >           + object.getName()
  985.             + " must not be private or static");
  986.       }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:988: warning: GRADUAL_DEREFERENCE
  method call on pointer `object`.
  986.       }
  987.       if ((modifiers & PUBLIC) == 0) {
  988. >       object.setAccessible(true);
  989.       }
  990.     }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:988: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$4`.
  986.     /** Uses both {@link Types#erasure} and string manipulation to strip any generic types. */
  987.     private String doubleErasure(TypeMirror elementType) {
  988. >     String name = typeUtils.erasure(elementType).toString();
  989.       int typeParamStart = name.indexOf('<');
  990.       if (typeParamStart != -1) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:989: warning: GRADUAL_DEREFERENCE
  method call on pointer `name`.
  987.     private String doubleErasure(TypeMirror elementType) {
  988.       String name = typeUtils.erasure(elementType).toString();
  989. >     int typeParamStart = name.indexOf('<');
  990.       if (typeParamStart != -1) {
  991.         name = name.substring(0, typeParamStart);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:991: warning: GRADUAL_DEREFERENCE
  method call on pointer `name`.
  989.       int typeParamStart = name.indexOf('<');
  990.       if (typeParamStart != -1) {
  991. >       name = name.substring(0, typeParamStart);
  992.       }
  993.       return name;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:988: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.typeUtils`,dereference of pointer `this`.
  986.     /** Uses both {@link Types#erasure} and string manipulation to strip any generic types. */
  987.     private String doubleErasure(TypeMirror elementType) {
  988. >     String name = typeUtils.erasure(elementType).toString();
  989.       int typeParamStart = name.indexOf('<');
  990.       if (typeParamStart != -1) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `expected`.
  997.       }
  998.       if (returnType != expected) {
  999. >       String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001.           expectedType = "'void' or " + expectedType;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:994: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  992.     /** Returns true when the return value should be propagated. Use a default otherwise. */
  993.     private static boolean validateReturnType(Method method, Class<?> expected) {
  994. >     Class<?> returnType = method.getReturnType();
  995.       if (returnType == void.class) {
  996.         return false;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1003: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1001.           expectedType = "'void' or " + expectedType;
  1002.         }
  1003. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005. >           + method.getName()
  1006.             + " must have return type of "
  1007.             + expectedType);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$11`.
  997.       }
  998.       if (returnType != expected) {
  999. >       String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001.           expectedType = "'void' or " + expectedType;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  997.       }
  998.       if (returnType != expected) {
  999. >       String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001.           expectedType = "'void' or " + expectedType;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  997.       }
  998.       if (returnType != expected) {
  999. >       String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001.           expectedType = "'void' or " + expectedType;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1001: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  999.         String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001. >         expectedType = "'void' or " + expectedType;
  1002.         }
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1001: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$31`.
  999.         String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001. >         expectedType = "'void' or " + expectedType;
  1002.         }
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1001: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  999.         String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001. >         expectedType = "'void' or " + expectedType;
  1002.         }
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1003: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  1001.           expectedType = "'void' or " + expectedType;
  1002.         }
  1003. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1003: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$43`.
  1001.           expectedType = "'void' or " + expectedType;
  1002.         }
  1003. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1003: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$50`.
  1001.           expectedType = "'void' or " + expectedType;
  1002.         }
  1003. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$53`.
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005. >           + method.getName()
  1006.             + " must have return type of "
  1007.             + expectedType);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$60`.
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005. >           + method.getName()
  1006.             + " must have return type of "
  1007.             + expectedType);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$63`.
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005. >           + method.getName()
  1006.             + " must have return type of "
  1007.             + expectedType);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$67`.
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005. >           + method.getName()
  1006.             + " must have return type of "
  1007.             + expectedType);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$71`.
  1003.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1004.             + "."
  1005. >           + method.getName()
  1006.             + " must have return type of "
  1007.             + expectedType);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$7`.
  997.       }
  998.       if (returnType != expected) {
  999. >       String expectedType = "'" + expected.getName() + "'";
  1000.         if (expected != void.class) {
  1001.           expectedType = "'void' or " + expectedType;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1008: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$36`.
  1006.   
  1007.           error(element, "Unable to generate view binder for @%s.\n\n%s",
  1008. >             annotationClass.getSimpleName(), stackTrace.toString());
  1009.         }
  1010.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1008: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1006.   
  1007.           error(element, "Unable to generate view binder for @%s.\n\n%s",
  1008. >             annotationClass.getSimpleName(), stackTrace.toString());
  1009.         }
  1010.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `e`.
  1003.         } catch (Exception e) {
  1004.           StringWriter stackTrace = new StringWriter();
  1005. >         e.printStackTrace(new PrintWriter(stackTrace));
  1006.   
  1007.           error(element, "Unable to generate view binder for @%s.\n\n%s",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `env`.
  997.         Class<? extends Annotation> annotationClass,
  998.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  999. >     for (Element element : env.getElementsAnnotatedWith(annotationClass)) {
  1000.         if (!SuperficialValidation.validateElement(element)) continue;
  1001.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1004: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$26`.
  1002.           parseListenerAnnotation(annotationClass, element, builderMap, erasedTargetNames);
  1003.         } catch (Exception e) {
  1004. >         StringWriter stackTrace = new StringWriter();
  1005.           e.printStackTrace(new PrintWriter(stackTrace));
  1006.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1005: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  1003.         } catch (Exception e) {
  1004.           StringWriter stackTrace = new StringWriter();
  1005. >         e.printStackTrace(new PrintWriter(stackTrace));
  1006.   
  1007.           error(element, "Unable to generate view binder for @%s.\n\n%s",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  997.         Class<? extends Annotation> annotationClass,
  998.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  999. >     for (Element element : env.getElementsAnnotatedWith(annotationClass)) {
  1000.         if (!SuperficialValidation.validateElement(element)) continue;
  1001.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:999: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  997.         Class<? extends Annotation> annotationClass,
  998.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  999. >     for (Element element : env.getElementsAnnotatedWith(annotationClass)) {
  1000.         if (!SuperficialValidation.validateElement(element)) continue;
  1001.         try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1008: warning: GRADUAL_DEREFERENCE
  method call on pointer `stackTrace`.
  1006.   
  1007.           error(element, "Unable to generate view binder for @%s.\n\n%s",
  1008. >             annotationClass.getSimpleName(), stackTrace.toString());
  1009.         }
  1010.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1002: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1000.         if (!SuperficialValidation.validateElement(element)) continue;
  1001.         try {
  1002. >         parseListenerAnnotation(annotationClass, element, builderMap, erasedTargetNames);
  1003.         } catch (Exception e) {
  1004.           StringWriter stackTrace = new StringWriter();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1007: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1005.           e.printStackTrace(new PrintWriter(stackTrace));
  1006.   
  1007. >         error(element, "Unable to generate view binder for @%s.\n\n%s",
  1008.               annotationClass.getSimpleName(), stackTrace.toString());
  1009.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1013: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1011.   
  1012.     private static boolean isRequired(Method method) {
  1013. >     return method.getAnnotation(Optional.class) == null;
  1014.     }
  1015.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1057: warning: GRADUAL_DEREFERENCE
  dereference of pointer `compiler.ButterKnifeProcessor.butterknife.compiler.ButterKnifeProcessor.NO_ID`.
  1055.   
  1056.       for (int id : ids) {
  1057. >       if (id == NO_ID.value) {
  1058.           if (ids.length == 1) {
  1059.             if (!required) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1056: warning: GRADUAL_DEREFERENCE
  dereference of pointer `ids`.
  1054.       }
  1055.   
  1056. >     for (int id : ids) {
  1057.         if (id == NO_ID.value) {
  1058.           if (ids.length == 1) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1084: warning: GRADUAL_DEREFERENCE
  dereference of pointer `methods`.
  1082.                   annotationClass.getSimpleName()));
  1083.         }
  1084. >       method = methods[0];
  1085.       } else {
  1086.         Method annotationCallback = annotationClass.getDeclaredMethod("callback");

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1052: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$106`.
  1050.       if (listener == null) {
  1051.         throw new IllegalStateException(
  1052. >           String.format("No @%s defined on @%s.", ListenerClass.class.getSimpleName(),
  1053.                 annotationClass.getSimpleName()));
  1054.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1053: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$106`.
  1051.         throw new IllegalStateException(
  1052.             String.format("No @%s defined on @%s.", ListenerClass.class.getSimpleName(),
  1053. >               annotationClass.getSimpleName()));
  1054.       }
  1055.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1061: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$138`.
  1059.             if (!required) {
  1060.               error(element, "ID-free binding must not be annotated with @Optional. (%s.%s)",
  1061. >                 enclosingElement.getQualifiedName(), element.getSimpleName());
  1062.               hasError = true;
  1063.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1066: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$153`.
  1064.           } else {
  1065.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1066. >               annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1067.                 element.getSimpleName());
  1068.             hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1067: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$153`.
  1065.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1066.                 annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1067. >               element.getSimpleName());
  1068.             hasError = true;
  1069.           }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1077: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$184`.
  1075.       if (methods.length > 1) {
  1076.         throw new IllegalStateException(String.format("Multiple listener methods specified on @%s.",
  1077. >           annotationClass.getSimpleName()));
  1078.       } else if (methods.length == 1) {
  1079.         if (listener.callbacks() != ListenerClass.NONE.class) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1082: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$203`.
  1080.           throw new IllegalStateException(
  1081.               String.format("Both method() and callback() defined on @%s.",
  1082. >                 annotationClass.getSimpleName()));
  1083.         }
  1084.         method = methods[0];

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1092: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$247`.
  1090.         if (method == null) {
  1091.           throw new IllegalStateException(
  1092. >             String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093.                   annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1093: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$247`.
  1091.           throw new IllegalStateException(
  1092.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093. >                 annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));
  1095.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1094: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$247`.
  1092.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093.                   annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094. >                 callback.name()));
  1095.         }
  1096.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1102: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$288`.
  1100.       if (methodParameters.size() > method.parameters().length) {
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102. >           annotationClass.getSimpleName(), method.parameters().length,
  1103.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1104.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1103: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$288`.
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102.             annotationClass.getSimpleName(), method.parameters().length,
  1103. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1104.         hasError = true;
  1105.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1117: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$343`.
  1115.       if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117. >           annotationClass.getSimpleName(), method.returnType(),
  1118.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1119.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1118: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$343`.
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117.             annotationClass.getSimpleName(), method.returnType(),
  1118. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1119.         hasError = true;
  1120.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1029: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$39`.
  1027.       Method annotationValue = annotationClass.getDeclaredMethod("value");
  1028.       if (annotationValue.getReturnType() != int[].class) {
  1029. >       throw new IllegalStateException(
  1030.             String.format("@%s annotation value() type not int[].", annotationClass));
  1031.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1180: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$572`.
  1178.                 .append(method.parameters().length)
  1179.                 .append(" parameter(s):\n");
  1180. >           for (String parameterType : method.parameters()) {
  1181.               builder.append("\n  ").append(parameterType);
  1182.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1199: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$647`.
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199. >             entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1200.           return;
  1201.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1044: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$78`.
  1042.       if (duplicateId != null) {
  1043.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1044. >           annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1045.             element.getSimpleName());
  1046.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1045: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$78`.
  1043.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1044.             annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1045. >           element.getSimpleName());
  1046.         hasError = true;
  1047.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1019: warning: GRADUAL_DEREFERENCE
  dereference of pointer `n$7`.
  1017.       if (!(element instanceof ExecutableElement) || element.getKind() != METHOD) {
  1018.         throw new IllegalStateException(
  1019. >           String.format("@%s annotation must be on a method.", annotationClass.getSimpleName()));
  1020.       }
  1021.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1143: warning: GRADUAL_DEREFERENCE
  dereference of pointer `parameterTypes`.
  1141.               continue;
  1142.             }
  1143. >           if ((isSubtypeOfType(methodParameterType, parameterTypes[j])
  1144.                 && isSubtypeOfType(methodParameterType, VIEW_TYPE))
  1145.                 || isTypeEqual(methodParameterType, parameterTypes[j])

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1145: warning: GRADUAL_DEREFERENCE
  dereference of pointer `parameterTypes`.
  1143.             if ((isSubtypeOfType(methodParameterType, parameterTypes[j])
  1144.                 && isSubtypeOfType(methodParameterType, VIEW_TYPE))
  1145. >               || isTypeEqual(methodParameterType, parameterTypes[j])
  1146.                 || isInterface(methodParameterType)) {
  1147.               parameters[i] = new Parameter(j, TypeName.get(methodParameterType));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1147: warning: GRADUAL_DEREFERENCE
  dereference of pointer `parameters`.
  1145.                 || isTypeEqual(methodParameterType, parameterTypes[j])
  1146.                 || isInterface(methodParameterType)) {
  1147. >             parameters[i] = new Parameter(j, TypeName.get(methodParameterType));
  1148.               methodParameterUsed.set(j);
  1149.               break;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1152: warning: GRADUAL_DEREFERENCE
  dereference of pointer `parameters`.
  1150.             }
  1151.           }
  1152. >         if (parameters[i] == null) {
  1153.             StringBuilder builder = new StringBuilder();
  1154.             builder.append("Unable to match @")

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1162: warning: GRADUAL_DEREFERENCE
  dereference of pointer `parameters`.
  1160.                 .append(')');
  1161.             for (int j = 0; j < parameters.length; j++) {
  1162. >             Parameter parameter = parameters[j];
  1163.               builder.append("\n\n  Parameter #")
  1164.                   .append(j + 1)

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1114: warning: GRADUAL_DEREFERENCE
  method call on pointer `"void"`.
  1112.       }
  1113.       String returnTypeString = returnType.toString();
  1114. >     boolean hasReturnValue = !"void".equals(returnTypeString);
  1115.       if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1087: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationCallback`.
  1085.       } else {
  1086.         Method annotationCallback = annotationClass.getDeclaredMethod("callback");
  1087. >       Enum<?> callback = (Enum<?>) annotationCallback.invoke(annotation);
  1088.         Field callbackField = callback.getDeclaringClass().getField(callback.name());
  1089.         method = callbackField.getAnnotation(ListenerMethod.class);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1019: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1017.       if (!(element instanceof ExecutableElement) || element.getKind() != METHOD) {
  1018.         throw new IllegalStateException(
  1019. >           String.format("@%s annotation must be on a method.", annotationClass.getSimpleName()));
  1020.       }
  1021.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1027: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1025.       // Assemble information on the method.
  1026.       Annotation annotation = element.getAnnotation(annotationClass);
  1027. >     Method annotationValue = annotationClass.getDeclaredMethod("value");
  1028.       if (annotationValue.getReturnType() != int[].class) {
  1029.         throw new IllegalStateException(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1044: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1042.       if (duplicateId != null) {
  1043.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1044. >           annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1045.             element.getSimpleName());
  1046.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1049: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1047.       }
  1048.   
  1049. >     ListenerClass listener = annotationClass.getAnnotation(ListenerClass.class);
  1050.       if (listener == null) {
  1051.         throw new IllegalStateException(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1053: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1051.         throw new IllegalStateException(
  1052.             String.format("No @%s defined on @%s.", ListenerClass.class.getSimpleName(),
  1053. >               annotationClass.getSimpleName()));
  1054.       }
  1055.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1066: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1064.           } else {
  1065.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1066. >               annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1067.                 element.getSimpleName());
  1068.             hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1077: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1075.       if (methods.length > 1) {
  1076.         throw new IllegalStateException(String.format("Multiple listener methods specified on @%s.",
  1077. >           annotationClass.getSimpleName()));
  1078.       } else if (methods.length == 1) {
  1079.         if (listener.callbacks() != ListenerClass.NONE.class) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1082: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1080.           throw new IllegalStateException(
  1081.               String.format("Both method() and callback() defined on @%s.",
  1082. >                 annotationClass.getSimpleName()));
  1083.         }
  1084.         method = methods[0];

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1086: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1084.         method = methods[0];
  1085.       } else {
  1086. >       Method annotationCallback = annotationClass.getDeclaredMethod("callback");
  1087.         Enum<?> callback = (Enum<?>) annotationCallback.invoke(annotation);
  1088.         Field callbackField = callback.getDeclaringClass().getField(callback.name());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1093: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1091.           throw new IllegalStateException(
  1092.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093. >                 annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));
  1095.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1102: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1100.       if (methodParameters.size() > method.parameters().length) {
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102. >           annotationClass.getSimpleName(), method.parameters().length,
  1103.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1104.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1117: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1115.       if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117. >           annotationClass.getSimpleName(), method.returnType(),
  1118.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1119.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1155: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationClass`.
  1153.             StringBuilder builder = new StringBuilder();
  1154.             builder.append("Unable to match @")
  1155. >               .append(annotationClass.getSimpleName())
  1156.                 .append(" method arguments. (")
  1157.                 .append(enclosingElement.getQualifiedName())

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1028: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationValue`.
  1026.       Annotation annotation = element.getAnnotation(annotationClass);
  1027.       Method annotationValue = annotationClass.getDeclaredMethod("value");
  1028. >     if (annotationValue.getReturnType() != int[].class) {
  1029.         throw new IllegalStateException(
  1030.             String.format("@%s annotation value() type not int[].", annotationClass));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1033: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationValue`.
  1031.       }
  1032.   
  1033. >     int[] ids = (int[]) annotationValue.invoke(annotation);
  1034.       String name = executableElement.getSimpleName().toString();
  1035.       boolean required = isListenerRequired(executableElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1154: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1152.           if (parameters[i] == null) {
  1153.             StringBuilder builder = new StringBuilder();
  1154. >           builder.append("Unable to match @")
  1155.                 .append(annotationClass.getSimpleName())
  1156.                 .append(" method arguments. (")

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1163: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1161.             for (int j = 0; j < parameters.length; j++) {
  1162.               Parameter parameter = parameters[j];
  1163. >             builder.append("\n\n  Parameter #")
  1164.                   .append(j + 1)
  1165.                   .append(": ")

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1169: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1167.                   .append("\n    ");
  1168.               if (parameter == null) {
  1169. >               builder.append("did not match any listener parameters");
  1170.               } else {
  1171.                 builder.append("matched listener parameter #")

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1171: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1169.                 builder.append("did not match any listener parameters");
  1170.               } else {
  1171. >               builder.append("matched listener parameter #")
  1172.                     .append(parameter.getListenerPosition() + 1)
  1173.                     .append(": ")

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1177: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1175.               }
  1176.             }
  1177. >           builder.append("\n\nMethods may have up to ")
  1178.                 .append(method.parameters().length)
  1179.                 .append(" parameter(s):\n");

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1181: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1179.                 .append(" parameter(s):\n");
  1180.             for (String parameterType : method.parameters()) {
  1181. >             builder.append("\n  ").append(parameterType);
  1182.             }
  1183.             builder.append(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1183: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1181.               builder.append("\n  ").append(parameterType);
  1182.             }
  1183. >           builder.append(
  1184.                 "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1185.             error(executableElement, builder.toString());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1185: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1183.             builder.append(
  1184.                 "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1185. >           error(executableElement, builder.toString());
  1186.             return;
  1187.           }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1197: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1195.   
  1196.       for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1197. >       if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199.               entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1052: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.internal.ListenerClass`.
  1050.       if (listener == null) {
  1051.         throw new IllegalStateException(
  1052. >           String.format("No @%s defined on @%s.", ListenerClass.class.getSimpleName(),
  1053.                 annotationClass.getSimpleName()));
  1054.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1092: warning: GRADUAL_DEREFERENCE
  method call on pointer `butterknife.internal.ListenerMethod`.
  1090.         if (method == null) {
  1091.           throw new IllegalStateException(
  1092. >             String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093.                   annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1089: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackField`.
  1087.         Enum<?> callback = (Enum<?>) annotationCallback.invoke(annotation);
  1088.         Field callbackField = callback.getDeclaringClass().getField(callback.name());
  1089. >       method = callbackField.getAnnotation(ListenerMethod.class);
  1090.         if (method == null) {
  1091.           throw new IllegalStateException(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1088: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  1086.         Method annotationCallback = annotationClass.getDeclaredMethod("callback");
  1087.         Enum<?> callback = (Enum<?>) annotationCallback.invoke(annotation);
  1088. >       Field callbackField = callback.getDeclaringClass().getField(callback.name());
  1089.         method = callbackField.getAnnotation(ListenerMethod.class);
  1090.         if (method == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1093: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  1091.           throw new IllegalStateException(
  1092.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093. >                 annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));
  1095.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1094: warning: GRADUAL_DEREFERENCE
  method call on pointer `callback`.
  1092.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093.                   annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094. >                 callback.name()));
  1095.         }
  1096.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1017: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1015.         throws Exception {
  1016.       // This should be guarded by the annotation's @Target but it's worth a check for safe casting.
  1017. >     if (!(element instanceof ExecutableElement) || element.getKind() != METHOD) {
  1018.         throw new IllegalStateException(
  1019.             String.format("@%s annotation must be on a method.", annotationClass.getSimpleName()));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1023: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1021.   
  1022.       ExecutableElement executableElement = (ExecutableElement) element;
  1023. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  1024.   
  1025.       // Assemble information on the method.

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1026: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1024.   
  1025.       // Assemble information on the method.
  1026. >     Annotation annotation = element.getAnnotation(annotationClass);
  1027.       Method annotationValue = annotationClass.getDeclaredMethod("value");
  1028.       if (annotationValue.getReturnType() != int[].class) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1045: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1043.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1044.             annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1045. >           element.getSimpleName());
  1046.         hasError = true;
  1047.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1061: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1059.             if (!required) {
  1060.               error(element, "ID-free binding must not be annotated with @Optional. (%s.%s)",
  1061. >                 enclosingElement.getQualifiedName(), element.getSimpleName());
  1062.               hasError = true;
  1063.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1067: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1065.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1066.                 annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1067. >               element.getSimpleName());
  1068.             hasError = true;
  1069.           }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1103: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102.             annotationClass.getSimpleName(), method.parameters().length,
  1103. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1104.         hasError = true;
  1105.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1118: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117.             annotationClass.getSimpleName(), method.returnType(),
  1118. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1119.         hasError = true;
  1120.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1159: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1157.                 .append(enclosingElement.getQualifiedName())
  1158.                 .append('.')
  1159. >               .append(element.getSimpleName())
  1160.                 .append(')');
  1161.             for (int j = 0; j < parameters.length; j++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1199: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199. >             entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1200.           return;
  1201.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1044: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1042.       if (duplicateId != null) {
  1043.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1044. >           annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1045.             element.getSimpleName());
  1046.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1061: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1059.             if (!required) {
  1060.               error(element, "ID-free binding must not be annotated with @Optional. (%s.%s)",
  1061. >                 enclosingElement.getQualifiedName(), element.getSimpleName());
  1062.               hasError = true;
  1063.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1066: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1064.           } else {
  1065.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1066. >               annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1067.                 element.getSimpleName());
  1068.             hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1103: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102.             annotationClass.getSimpleName(), method.parameters().length,
  1103. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1104.         hasError = true;
  1105.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1118: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117.             annotationClass.getSimpleName(), method.returnType(),
  1118. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1119.         hasError = true;
  1120.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1157: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1155.                 .append(annotationClass.getSimpleName())
  1156.                 .append(" method arguments. (")
  1157. >               .append(enclosingElement.getQualifiedName())
  1158.                 .append('.')
  1159.                 .append(element.getSimpleName())

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1199: warning: GRADUAL_DEREFERENCE
  method call on pointer `enclosingElement`.
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199. >             entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1200.           return;
  1201.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1197: warning: GRADUAL_DEREFERENCE
  method call on pointer `entry`.
  1195.   
  1196.       for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1197. >       if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199.               entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1199: warning: GRADUAL_DEREFERENCE
  method call on pointer `entry`.
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199. >             entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1200.           return;
  1201.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1205: warning: GRADUAL_DEREFERENCE
  method call on pointer `erasedTargetNames`.
  1203.   
  1204.       // Add the type-erased version to the valid binding targets set.
  1205. >     erasedTargetNames.add(enclosingElement);
  1206.     }
  1207.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1034: warning: GRADUAL_DEREFERENCE
  method call on pointer `executableElement`.
  1032.   
  1033.       int[] ids = (int[]) annotationValue.invoke(annotation);
  1034. >     String name = executableElement.getSimpleName().toString();
  1035.       boolean required = isListenerRequired(executableElement);
  1036.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1099: warning: GRADUAL_DEREFERENCE
  method call on pointer `executableElement`.
  1097.   
  1098.       // Verify that the method has equal to or less than the number of parameters as the listener.
  1099. >     List<? extends VariableElement> methodParameters = executableElement.getParameters();
  1100.       if (methodParameters.size() > method.parameters().length) {
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1108: warning: GRADUAL_DEREFERENCE
  method call on pointer `executableElement`.
  1106.   
  1107.       // Verify method return type matches the listener.
  1108. >     TypeMirror returnType = executableElement.getReturnType();
  1109.       if (returnType instanceof TypeVariable) {
  1110.         TypeVariable typeVariable = (TypeVariable) returnType;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1074: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  1072.   
  1073.       ListenerMethod method;
  1074. >     ListenerMethod[] methods = listener.method();
  1075.       if (methods.length > 1) {
  1076.         throw new IllegalStateException(String.format("Multiple listener methods specified on @%s.",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1079: warning: GRADUAL_DEREFERENCE
  method call on pointer `listener`.
  1077.             annotationClass.getSimpleName()));
  1078.       } else if (methods.length == 1) {
  1079. >       if (listener.callbacks() != ListenerClass.NONE.class) {
  1080.           throw new IllegalStateException(
  1081.               String.format("Both method() and callback() defined on @%s.",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1140: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameterUsed`.
  1138.   
  1139.           for (int j = 0; j < parameterTypes.length; j++) {
  1140. >           if (methodParameterUsed.get(j)) {
  1141.               continue;
  1142.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1148: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameterUsed`.
  1146.                 || isInterface(methodParameterType)) {
  1147.               parameters[i] = new Parameter(j, TypeName.get(methodParameterType));
  1148. >             methodParameterUsed.set(j);
  1149.               break;
  1150.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1133: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameter`.
  1131.         for (int i = 0; i < methodParameters.size(); i++) {
  1132.           VariableElement methodParameter = methodParameters.get(i);
  1133. >         TypeMirror methodParameterType = methodParameter.asType();
  1134.           if (methodParameterType instanceof TypeVariable) {
  1135.             TypeVariable typeVariable = (TypeVariable) methodParameterType;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1100: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1098.       // Verify that the method has equal to or less than the number of parameters as the listener.
  1099.       List<? extends VariableElement> methodParameters = executableElement.getParameters();
  1100. >     if (methodParameters.size() > method.parameters().length) {
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102.             annotationClass.getSimpleName(), method.parameters().length,

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1127: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1125.   
  1126.       Parameter[] parameters = Parameter.NONE;
  1127. >     if (!methodParameters.isEmpty()) {
  1128.         parameters = new Parameter[methodParameters.size()];
  1129.         BitSet methodParameterUsed = new BitSet(methodParameters.size());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1128: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1126.       Parameter[] parameters = Parameter.NONE;
  1127.       if (!methodParameters.isEmpty()) {
  1128. >       parameters = new Parameter[methodParameters.size()];
  1129.         BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1130.         String[] parameterTypes = method.parameters();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1129: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1127.       if (!methodParameters.isEmpty()) {
  1128.         parameters = new Parameter[methodParameters.size()];
  1129. >       BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1130.         String[] parameterTypes = method.parameters();
  1131.         for (int i = 0; i < methodParameters.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1131: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1129.         BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1130.         String[] parameterTypes = method.parameters();
  1131. >       for (int i = 0; i < methodParameters.size(); i++) {
  1132.           VariableElement methodParameter = methodParameters.get(i);
  1133.           TypeMirror methodParameterType = methodParameter.asType();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1132: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1130.         String[] parameterTypes = method.parameters();
  1131.         for (int i = 0; i < methodParameters.size(); i++) {
  1132. >         VariableElement methodParameter = methodParameters.get(i);
  1133.           TypeMirror methodParameterType = methodParameter.asType();
  1134.           if (methodParameterType instanceof TypeVariable) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1166: warning: GRADUAL_DEREFERENCE
  method call on pointer `methodParameters`.
  1164.                   .append(j + 1)
  1165.                   .append(": ")
  1166. >                 .append(methodParameters.get(j).asType().toString())
  1167.                   .append("\n    ");
  1168.               if (parameter == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1100: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1098.       // Verify that the method has equal to or less than the number of parameters as the listener.
  1099.       List<? extends VariableElement> methodParameters = executableElement.getParameters();
  1100. >     if (methodParameters.size() > method.parameters().length) {
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102.             annotationClass.getSimpleName(), method.parameters().length,

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1102: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1100.       if (methodParameters.size() > method.parameters().length) {
  1101.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102. >           annotationClass.getSimpleName(), method.parameters().length,
  1103.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1104.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1115: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1113.       String returnTypeString = returnType.toString();
  1114.       boolean hasReturnValue = !"void".equals(returnTypeString);
  1115. >     if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117.             annotationClass.getSimpleName(), method.returnType(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1117: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1115.       if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117. >           annotationClass.getSimpleName(), method.returnType(),
  1118.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1119.         hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1130: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1128.         parameters = new Parameter[methodParameters.size()];
  1129.         BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1130. >       String[] parameterTypes = method.parameters();
  1131.         for (int i = 0; i < methodParameters.size(); i++) {
  1132.           VariableElement methodParameter = methodParameters.get(i);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1178: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1176.             }
  1177.             builder.append("\n\nMethods may have up to ")
  1178. >               .append(method.parameters().length)
  1179.                 .append(" parameter(s):\n");
  1180.             for (String parameterType : method.parameters()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1180: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1178.                 .append(method.parameters().length)
  1179.                 .append(" parameter(s):\n");
  1180. >           for (String parameterType : method.parameters()) {
  1181.               builder.append("\n  ").append(parameterType);
  1182.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1052: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$117`.
  1050.       if (listener == null) {
  1051.         throw new IllegalStateException(
  1052. >           String.format("No @%s defined on @%s.", ListenerClass.class.getSimpleName(),
  1053.                 annotationClass.getSimpleName()));
  1054.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1019: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  1017.       if (!(element instanceof ExecutableElement) || element.getKind() != METHOD) {
  1018.         throw new IllegalStateException(
  1019. >           String.format("@%s annotation must be on a method.", annotationClass.getSimpleName()));
  1020.       }
  1021.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1076: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$192`.
  1074.       ListenerMethod[] methods = listener.method();
  1075.       if (methods.length > 1) {
  1076. >       throw new IllegalStateException(String.format("Multiple listener methods specified on @%s.",
  1077.             annotationClass.getSimpleName()));
  1078.       } else if (methods.length == 1) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1081: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$211`.
  1079.         if (listener.callbacks() != ListenerClass.NONE.class) {
  1080.           throw new IllegalStateException(
  1081. >             String.format("Both method() and callback() defined on @%s.",
  1082.                   annotationClass.getSimpleName()));
  1083.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1088: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$233`.
  1086.         Method annotationCallback = annotationClass.getDeclaredMethod("callback");
  1087.         Enum<?> callback = (Enum<?>) annotationCallback.invoke(annotation);
  1088. >       Field callbackField = callback.getDeclaringClass().getField(callback.name());
  1089.         method = callbackField.getAnnotation(ListenerMethod.class);
  1090.         if (method == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1093: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$258`.
  1091.           throw new IllegalStateException(
  1092.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093. >                 annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));
  1095.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1092: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$271`.
  1090.         if (method == null) {
  1091.           throw new IllegalStateException(
  1092. >             String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1093.                   annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1094.                   callback.name()));

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1129: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$382`.
  1127.       if (!methodParameters.isEmpty()) {
  1128.         parameters = new Parameter[methodParameters.size()];
  1129. >       BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1130.         String[] parameterTypes = method.parameters();
  1131.         for (int i = 0; i < methodParameters.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1147: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$443`.
  1145.                 || isTypeEqual(methodParameterType, parameterTypes[j])
  1146.                 || isInterface(methodParameterType)) {
  1147. >             parameters[i] = new Parameter(j, TypeName.get(methodParameterType));
  1148.               methodParameterUsed.set(j);
  1149.               break;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  1028.       if (annotationValue.getReturnType() != int[].class) {
  1029.         throw new IllegalStateException(
  1030. >           String.format("@%s annotation value() type not int[].", annotationClass));
  1031.       }
  1032.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1153: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$459`.
  1151.           }
  1152.           if (parameters[i] == null) {
  1153. >           StringBuilder builder = new StringBuilder();
  1154.             builder.append("Unable to match @")
  1155.                 .append(annotationClass.getSimpleName())

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1155: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$463`.
  1153.             StringBuilder builder = new StringBuilder();
  1154.             builder.append("Unable to match @")
  1155. >               .append(annotationClass.getSimpleName())
  1156.                 .append(" method arguments. (")
  1157.                 .append(enclosingElement.getQualifiedName())

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1156: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$470`.
  1154.             builder.append("Unable to match @")
  1155.                 .append(annotationClass.getSimpleName())
  1156. >               .append(" method arguments. (")
  1157.                 .append(enclosingElement.getQualifiedName())
  1158.                 .append('.')

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1157: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$473`.
  1155.                 .append(annotationClass.getSimpleName())
  1156.                 .append(" method arguments. (")
  1157. >               .append(enclosingElement.getQualifiedName())
  1158.                 .append('.')
  1159.                 .append(element.getSimpleName())

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1158: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$480`.
  1156.                 .append(" method arguments. (")
  1157.                 .append(enclosingElement.getQualifiedName())
  1158. >               .append('.')
  1159.                 .append(element.getSimpleName())
  1160.                 .append(')');

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1159: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$483`.
  1157.                 .append(enclosingElement.getQualifiedName())
  1158.                 .append('.')
  1159. >               .append(element.getSimpleName())
  1160.                 .append(')');
  1161.             for (int j = 0; j < parameters.length; j++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1160: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$490`.
  1158.                 .append('.')
  1159.                 .append(element.getSimpleName())
  1160. >               .append(')');
  1161.             for (int j = 0; j < parameters.length; j++) {
  1162.               Parameter parameter = parameters[j];

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1164: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$504`.
  1162.               Parameter parameter = parameters[j];
  1163.               builder.append("\n\n  Parameter #")
  1164. >                 .append(j + 1)
  1165.                   .append(": ")
  1166.                   .append(methodParameters.get(j).asType().toString())

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1165: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$508`.
  1163.               builder.append("\n\n  Parameter #")
  1164.                   .append(j + 1)
  1165. >                 .append(": ")
  1166.                   .append(methodParameters.get(j).asType().toString())
  1167.                   .append("\n    ");

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1166: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$511`.
  1164.                   .append(j + 1)
  1165.                   .append(": ")
  1166. >                 .append(methodParameters.get(j).asType().toString())
  1167.                   .append("\n    ");
  1168.               if (parameter == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1166: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$515`.
  1164.                   .append(j + 1)
  1165.                   .append(": ")
  1166. >                 .append(methodParameters.get(j).asType().toString())
  1167.                   .append("\n    ");
  1168.               if (parameter == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1166: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$519`.
  1164.                   .append(j + 1)
  1165.                   .append(": ")
  1166. >                 .append(methodParameters.get(j).asType().toString())
  1167.                   .append("\n    ");
  1168.               if (parameter == null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1167: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$526`.
  1165.                   .append(": ")
  1166.                   .append(methodParameters.get(j).asType().toString())
  1167. >                 .append("\n    ");
  1168.               if (parameter == null) {
  1169.                 builder.append("did not match any listener parameters");

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1172: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$536`.
  1170.               } else {
  1171.                 builder.append("matched listener parameter #")
  1172. >                   .append(parameter.getListenerPosition() + 1)
  1173.                     .append(": ")
  1174.                     .append(parameter.getType());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1173: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$543`.
  1171.                 builder.append("matched listener parameter #")
  1172.                     .append(parameter.getListenerPosition() + 1)
  1173. >                   .append(": ")
  1174.                     .append(parameter.getType());
  1175.               }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1174: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$546`.
  1172.                     .append(parameter.getListenerPosition() + 1)
  1173.                     .append(": ")
  1174. >                   .append(parameter.getType());
  1175.               }
  1176.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1178: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$557`.
  1176.             }
  1177.             builder.append("\n\nMethods may have up to ")
  1178. >               .append(method.parameters().length)
  1179.                 .append(" parameter(s):\n");
  1180.             for (String parameterType : method.parameters()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1179: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$566`.
  1177.             builder.append("\n\nMethods may have up to ")
  1178.                 .append(method.parameters().length)
  1179. >               .append(" parameter(s):\n");
  1180.             for (String parameterType : method.parameters()) {
  1181.               builder.append("\n  ").append(parameterType);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1181: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$584`.
  1179.                 .append(" parameter(s):\n");
  1180.             for (String parameterType : method.parameters()) {
  1181. >             builder.append("\n  ").append(parameterType);
  1182.             }
  1183.             builder.append(

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1034: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$59`.
  1032.   
  1033.       int[] ids = (int[]) annotationValue.invoke(annotation);
  1034. >     String name = executableElement.getSimpleName().toString();
  1035.       boolean required = isListenerRequired(executableElement);
  1036.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1192: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$605`.
  1190.   
  1191.       MethodViewBinding binding =
  1192. >         new MethodViewBinding(name, Arrays.asList(parameters), required, hasReturnValue);
  1193.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  1194.       Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1196: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$622`.
  1194.       Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);
  1195.   
  1196. >     for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1196: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$625`.
  1194.       Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);
  1195.   
  1196. >     for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1172: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameter`.
  1170.               } else {
  1171.                 builder.append("matched listener parameter #")
  1172. >                   .append(parameter.getListenerPosition() + 1)
  1173.                     .append(": ")
  1174.                     .append(parameter.getType());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1174: warning: GRADUAL_DEREFERENCE
  method call on pointer `parameter`.
  1172.                     .append(parameter.getListenerPosition() + 1)
  1173.                     .append(": ")
  1174. >                   .append(parameter.getType());
  1175.               }
  1176.             }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1196: warning: GRADUAL_DEREFERENCE
  method call on pointer `resourceIds`.
  1194.       Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);
  1195.   
  1196. >     for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1115: warning: GRADUAL_DEREFERENCE
  method call on pointer `returnTypeString`.
  1113.       String returnTypeString = returnType.toString();
  1114.       boolean hasReturnValue = !"void".equals(returnTypeString);
  1115. >     if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117.             annotationClass.getSimpleName(), method.returnType(),

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1113: warning: GRADUAL_DEREFERENCE
  method call on pointer `returnType`.
  1111.         returnType = typeVariable.getUpperBound();
  1112.       }
  1113. >     String returnTypeString = returnType.toString();
  1114.       boolean hasReturnValue = !"void".equals(returnTypeString);
  1115.       if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1038: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1036.   
  1037.       // Verify that the method and its containing class are accessible via generated code.
  1038. >     boolean hasError = isInaccessibleViaGeneratedCode(annotationClass, "methods", element);
  1039.       hasError |= isBindingInWrongPackage(annotationClass, element);
  1040.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1039: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1037.       // Verify that the method and its containing class are accessible via generated code.
  1038.       boolean hasError = isInaccessibleViaGeneratedCode(annotationClass, "methods", element);
  1039. >     hasError |= isBindingInWrongPackage(annotationClass, element);
  1040.   
  1041.       Integer duplicateId = findDuplicate(ids);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1043: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1041.       Integer duplicateId = findDuplicate(ids);
  1042.       if (duplicateId != null) {
  1043. >       error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1044.             annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1045.             element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1060: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1058.           if (ids.length == 1) {
  1059.             if (!required) {
  1060. >             error(element, "ID-free binding must not be annotated with @Optional. (%s.%s)",
  1061.                   enclosingElement.getQualifiedName(), element.getSimpleName());
  1062.               hasError = true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1065: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1063.             }
  1064.           } else {
  1065. >           error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1066.                 annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1067.                 element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1101: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1099.       List<? extends VariableElement> methodParameters = executableElement.getParameters();
  1100.       if (methodParameters.size() > method.parameters().length) {
  1101. >       error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1102.             annotationClass.getSimpleName(), method.parameters().length,
  1103.             enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1116: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1114.       boolean hasReturnValue = !"void".equals(returnTypeString);
  1115.       if (!returnTypeString.equals(method.returnType()) && hasReturnValue) {
  1116. >       error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1117.             annotationClass.getSimpleName(), method.returnType(),
  1118.             enclosingElement.getQualifiedName(), element.getSimpleName());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1146: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1144.                 && isSubtypeOfType(methodParameterType, VIEW_TYPE))
  1145.                 || isTypeEqual(methodParameterType, parameterTypes[j])
  1146. >               || isInterface(methodParameterType)) {
  1147.               parameters[i] = new Parameter(j, TypeName.get(methodParameterType));
  1148.               methodParameterUsed.set(j);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1185: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1183.             builder.append(
  1184.                 "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1185. >           error(executableElement, builder.toString());
  1186.             return;
  1187.           }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1193: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1191.       MethodViewBinding binding =
  1192.           new MethodViewBinding(name, Arrays.asList(parameters), required, hasReturnValue);
  1193. >     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  1194.       Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);
  1195.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1194: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1192.           new MethodViewBinding(name, Arrays.asList(parameters), required, hasReturnValue);
  1193.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
  1194. >     Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);
  1195.   
  1196.       for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1198: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1196.       for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1197.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1198. >         error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1199.               entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1200.           return;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1111: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeVariable`.
  1109.       if (returnType instanceof TypeVariable) {
  1110.         TypeVariable typeVariable = (TypeVariable) returnType;
  1111. >       returnType = typeVariable.getUpperBound();
  1112.       }
  1113.       String returnTypeString = returnType.toString();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1136: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeVariable`.
  1134.           if (methodParameterType instanceof TypeVariable) {
  1135.             TypeVariable typeVariable = (TypeVariable) methodParameterType;
  1136. >           methodParameterType = typeVariable.getUpperBound();
  1137.           }
  1138.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1046: warning: GRADUAL_DEREFERENCE
  dereference of pointer `callbackIndexUsed`.
  1044.         Class<?> targetParameterType = targetParameterTypes[targetIndex];
  1045.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  1046. >         if (callbackIndexUsed[callbackIndex]) {
  1047.             continue; // We have already used this callback argument.
  1048.           }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1059: warning: GRADUAL_DEREFERENCE
  dereference of pointer `callbackIndexUsed`.
  1057.               || targetParameterType.isInterface()) {
  1058.             indexMap[targetIndex] = callbackIndex;
  1059. >           callbackIndexUsed[callbackIndex] = true;
  1060.             continue nextTarget; // This avoids the error handling code if loop exits normally.
  1061.           }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1049: warning: GRADUAL_DEREFERENCE
  dereference of pointer `callbackParameterTypes`.
  1047.             continue; // We have already used this callback argument.
  1048.           }
  1049. >         Class<?> callbackParameterType = callbackParameterTypes[callbackIndex];
  1050.   
  1051.           if (/* exact match */

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1088: warning: GRADUAL_DEREFERENCE
  dereference of pointer `callbackParameterTypes`.
  1086.             .append(callbackParameterLength)
  1087.             .append(" parameter(s):\n");
  1088. >       for (Class<?> callbackParameter : callbackParameterTypes) {
  1089.           builder.append("\n  ").append(callbackParameter.getName());
  1090.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1058: warning: GRADUAL_DEREFERENCE
  dereference of pointer `indexMap`.
  1056.               /* or interface (like Checkable) */
  1057.               || targetParameterType.isInterface()) {
  1058. >           indexMap[targetIndex] = callbackIndex;
  1059.             callbackIndexUsed[callbackIndex] = true;
  1060.             continue nextTarget; // This avoids the error handling code if loop exits normally.

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1044: warning: GRADUAL_DEREFERENCE
  dereference of pointer `targetParameterTypes`.
  1042.       final int[] indexMap = new int[targetParameterLength];
  1043.       nextTarget: for (int targetIndex = 0; targetIndex < targetParameterLength; targetIndex++) {
  1044. >       Class<?> targetParameterType = targetParameterTypes[targetIndex];
  1045.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  1046.           if (callbackIndexUsed[callbackIndex]) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1080: warning: GRADUAL_DEREFERENCE
  method call on pointer `*(callbackParameterTypes)[_]`,dereference of pointer `callbackParameterTypes`.
  1078.                 .append(indexMap[i])
  1079.                 .append(": ")
  1080. >               .append(callbackParameterTypes[indexMap[i]].getName());
  1081.           } else {
  1082.             builder.append("did not match any listener parameters");

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1074: warning: GRADUAL_DEREFERENCE
  method call on pointer `*(targetParameterTypes)[_]`,dereference of pointer `targetParameterTypes`.
  1072.               .append(i + 1)
  1073.               .append(": ")
  1074. >             .append(targetParameterTypes[i].getName())
  1075.               .append("\n    ");
  1076.           if (i < targetIndex) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1054: warning: GRADUAL_DEREFERENCE
  method call on pointer `android.view.View`.
  1052.               callbackParameterType.equals(targetParameterType)
  1053.               /* or subtype of view */
  1054. >             || (View.class.isAssignableFrom(callbackParameterType)
  1055.                   && callbackParameterType.isAssignableFrom(targetParameterType))
  1056.               /* or interface (like Checkable) */

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1065: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1063.   
  1064.         StringBuilder builder = new StringBuilder();
  1065. >       builder.append("Unable to match ")
  1066.             .append(method.getDeclaringClass().getName())
  1067.             .append('.')

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1071: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1069.             .append(" method arguments.");
  1070.         for (int i = 0; i < targetParameterLength; i++) {
  1071. >         builder.append("\n\n  Parameter #")
  1072.               .append(i + 1)
  1073.               .append(": ")

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1077: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1075.               .append("\n    ");
  1076.           if (i < targetIndex) {
  1077. >           builder.append("matched listener parameter #")
  1078.                 .append(indexMap[i])
  1079.                 .append(": ")

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1082: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1080.                 .append(callbackParameterTypes[indexMap[i]].getName());
  1081.           } else {
  1082. >           builder.append("did not match any listener parameters");
  1083.           }
  1084.         }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1085: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1083.           }
  1084.         }
  1085. >       builder.append("\n\nMethods may have up to ")
  1086.             .append(callbackParameterLength)
  1087.             .append(" parameter(s):\n");

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1089: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1087.             .append(" parameter(s):\n");
  1088.         for (Class<?> callbackParameter : callbackParameterTypes) {
  1089. >         builder.append("\n  ").append(callbackParameter.getName());
  1090.         }
  1091.         builder.append(

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1091: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1089.           builder.append("\n  ").append(callbackParameter.getName());
  1090.         }
  1091. >       builder.append(
  1092.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1093.         throw new IllegalStateException(builder.toString());

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1093: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1091.         builder.append(
  1092.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1093. >       throw new IllegalStateException(builder.toString());
  1094.       }
  1095.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1052: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackParameterType`.
  1050.   
  1051.           if (/* exact match */
  1052. >             callbackParameterType.equals(targetParameterType)
  1053.               /* or subtype of view */
  1054.               || (View.class.isAssignableFrom(callbackParameterType)

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1055: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackParameterType`.
  1053.               /* or subtype of view */
  1054.               || (View.class.isAssignableFrom(callbackParameterType)
  1055. >                 && callbackParameterType.isAssignableFrom(targetParameterType))
  1056.               /* or interface (like Checkable) */
  1057.               || targetParameterType.isInterface()) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1089: warning: GRADUAL_DEREFERENCE
  method call on pointer `callbackParameter`.
  1087.             .append(" parameter(s):\n");
  1088.         for (Class<?> callbackParameter : callbackParameterTypes) {
  1089. >         builder.append("\n  ").append(callbackParameter.getName());
  1090.         }
  1091.         builder.append(

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1018: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1016.     private static ArgumentTransformer createArgumentTransformer(Method method,
  1017.         Class<?>[] callbackParameterTypes) {
  1018. >     Class<?>[] targetParameterTypes = method.getParameterTypes();
  1019.   
  1020.       int targetParameterLength = targetParameterTypes.length;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1028: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1026.       int callbackParameterLength = callbackParameterTypes.length;
  1027.       if (targetParameterLength > callbackParameterLength) {
  1028. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1066: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1064.         StringBuilder builder = new StringBuilder();
  1065.         builder.append("Unable to match ")
  1066. >           .append(method.getDeclaringClass().getName())
  1067.             .append('.')
  1068.             .append(method.getName())

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1068: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1066.             .append(method.getDeclaringClass().getName())
  1067.             .append('.')
  1068. >           .append(method.getName())
  1069.             .append(" method arguments.");
  1070.         for (int i = 0; i < targetParameterLength; i++) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1064: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$100`.
  1062.         }
  1063.   
  1064. >       StringBuilder builder = new StringBuilder();
  1065.         builder.append("Unable to match ")
  1066.             .append(method.getDeclaringClass().getName())

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1066: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$104`.
  1064.         StringBuilder builder = new StringBuilder();
  1065.         builder.append("Unable to match ")
  1066. >           .append(method.getDeclaringClass().getName())
  1067.             .append('.')
  1068.             .append(method.getName())

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1066: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$107`.
  1064.         StringBuilder builder = new StringBuilder();
  1065.         builder.append("Unable to match ")
  1066. >           .append(method.getDeclaringClass().getName())
  1067.             .append('.')
  1068.             .append(method.getName())

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1067: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$114`.
  1065.         builder.append("Unable to match ")
  1066.             .append(method.getDeclaringClass().getName())
  1067. >           .append('.')
  1068.             .append(method.getName())
  1069.             .append(" method arguments.");

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1068: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$117`.
  1066.             .append(method.getDeclaringClass().getName())
  1067.             .append('.')
  1068. >           .append(method.getName())
  1069.             .append(" method arguments.");
  1070.         for (int i = 0; i < targetParameterLength; i++) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1069: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$124`.
  1067.             .append('.')
  1068.             .append(method.getName())
  1069. >           .append(" method arguments.");
  1070.         for (int i = 0; i < targetParameterLength; i++) {
  1071.           builder.append("\n\n  Parameter #")

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1072: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$132`.
  1070.         for (int i = 0; i < targetParameterLength; i++) {
  1071.           builder.append("\n\n  Parameter #")
  1072. >             .append(i + 1)
  1073.               .append(": ")
  1074.               .append(targetParameterTypes[i].getName())

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1073: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$136`.
  1071.           builder.append("\n\n  Parameter #")
  1072.               .append(i + 1)
  1073. >             .append(": ")
  1074.               .append(targetParameterTypes[i].getName())
  1075.               .append("\n    ");

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1074: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$139`.
  1072.               .append(i + 1)
  1073.               .append(": ")
  1074. >             .append(targetParameterTypes[i].getName())
  1075.               .append("\n    ");
  1076.           if (i < targetIndex) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1028: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$13`.
  1026.       int callbackParameterLength = callbackParameterTypes.length;
  1027.       if (targetParameterLength > callbackParameterLength) {
  1028. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1075: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$149`.
  1073.               .append(": ")
  1074.               .append(targetParameterTypes[i].getName())
  1075. >             .append("\n    ");
  1076.           if (i < targetIndex) {
  1077.             builder.append("matched listener parameter #")

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1078: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$157`,dereference of pointer `indexMap`.
  1076.           if (i < targetIndex) {
  1077.             builder.append("matched listener parameter #")
  1078. >               .append(indexMap[i])
  1079.                 .append(": ")
  1080.                 .append(callbackParameterTypes[indexMap[i]].getName());

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1079: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$164`.
  1077.             builder.append("matched listener parameter #")
  1078.                 .append(indexMap[i])
  1079. >               .append(": ")
  1080.                 .append(callbackParameterTypes[indexMap[i]].getName());
  1081.           } else {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1080: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$167`.
  1078.                 .append(indexMap[i])
  1079.                 .append(": ")
  1080. >               .append(callbackParameterTypes[indexMap[i]].getName());
  1081.           } else {
  1082.             builder.append("did not match any listener parameters");

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1028: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  1026.       int callbackParameterLength = callbackParameterTypes.length;
  1027.       if (targetParameterLength > callbackParameterLength) {
  1028. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1086: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$187`.
  1084.         }
  1085.         builder.append("\n\nMethods may have up to ")
  1086. >           .append(callbackParameterLength)
  1087.             .append(" parameter(s):\n");
  1088.         for (Class<?> callbackParameter : callbackParameterTypes) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1087: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$191`.
  1085.         builder.append("\n\nMethods may have up to ")
  1086.             .append(callbackParameterLength)
  1087. >           .append(" parameter(s):\n");
  1088.         for (Class<?> callbackParameter : callbackParameterTypes) {
  1089.           builder.append("\n  ").append(callbackParameter.getName());

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1089: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$207`.
  1087.             .append(" parameter(s):\n");
  1088.         for (Class<?> callbackParameter : callbackParameterTypes) {
  1089. >         builder.append("\n  ").append(callbackParameter.getName());
  1090.         }
  1091.         builder.append(

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1093: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$222`.
  1091.         builder.append(
  1092.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1093. >       throw new IllegalStateException(builder.toString());
  1094.       }
  1095.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1096: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$227`.
  1094.       }
  1095.   
  1096. >     return new ArgumentTransformer() {
  1097.         @Override public Object[] transform(Object... arguments) {
  1098.           Object[] newArguments = new Object[indexMap.length];

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1028: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  1026.       int callbackParameterLength = callbackParameterTypes.length;
  1027.       if (targetParameterLength > callbackParameterLength) {
  1028. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030.             + method.getName()

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$27`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$44`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1030: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  1028.         throw new IllegalStateException(method.getDeclaringClass().getName()
  1029.             + "."
  1030. >           + method.getName()
  1031.             + " must have at most "
  1032.             + callbackParameterLength

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1057: warning: GRADUAL_DEREFERENCE
  method call on pointer `targetParameterType`.
  1055.                   && callbackParameterType.isAssignableFrom(targetParameterType))
  1056.               /* or interface (like Checkable) */
  1057. >             || targetParameterType.isInterface()) {
  1058.             indexMap[targetIndex] = callbackIndex;
  1059.             callbackIndexUsed[callbackIndex] = true;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1186: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1184.     private interface ArgumentTransformer {
  1185.       ArgumentTransformer EMPTY = new ArgumentTransformer() {
  1186. >       private final Object[] empty = new Object[0];
  1187.   
  1188.         @Override public Object[] transform(Object... arguments) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1185: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1183.   
  1184.     private interface ArgumentTransformer {
  1185. >     ArgumentTransformer EMPTY = new ArgumentTransformer() {
  1186.         private final Object[] empty = new Object[0];
  1187.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1096: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1094.       }
  1095.   
  1096. >     return new ArgumentTransformer() {
  1097.         @Override public Object[] transform(Object... arguments) {
  1098.           Object[] newArguments = new Object[indexMap.length];

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1096: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1094.       }
  1095.   
  1096. >     return new ArgumentTransformer() {
  1097.         @Override public Object[] transform(Object... arguments) {
  1098.           Object[] newArguments = new Object[indexMap.length];

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1100: warning: GRADUAL_DEREFERENCE
  dereference of pointer `newArguments`,dereference of pointer `arguments`.
  1098.           Object[] newArguments = new Object[indexMap.length];
  1099.           for (int i = 0; i < indexMap.length; i++) {
  1100. >           newArguments[i] = arguments[indexMap[i]];
  1101.           }
  1102.           return newArguments;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1098: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1096.       return new ArgumentTransformer() {
  1097.         @Override public Object[] transform(Object... arguments) {
  1098. >         Object[] newArguments = new Object[indexMap.length];
  1099.           for (int i = 0; i < indexMap.length; i++) {
  1100.             newArguments[i] = arguments[indexMap[i]];

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1099: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1097.         @Override public Object[] transform(Object... arguments) {
  1098.           Object[] newArguments = new Object[indexMap.length];
  1099. >         for (int i = 0; i < indexMap.length; i++) {
  1100.             newArguments[i] = arguments[indexMap[i]];
  1101.           }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1107: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1105.         @Override public String toString() {
  1106.           StringBuilder builder = new StringBuilder("ArgumentTransformer[");
  1107. >         for (int i = 0; i < indexMap.length; i++) {
  1108.             if (i > 0) {
  1109.               builder.append(", ");

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1109: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1107.           for (int i = 0; i < indexMap.length; i++) {
  1108.             if (i > 0) {
  1109. >             builder.append(", ");
  1110.             }
  1111.             builder.append(i).append(" => ").append(indexMap[i]);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1111: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1109.               builder.append(", ");
  1110.             }
  1111. >           builder.append(i).append(" => ").append(indexMap[i]);
  1112.           }
  1113.           return builder.append(']').toString();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1113: warning: GRADUAL_DEREFERENCE
  method call on pointer `builder`.
  1111.             builder.append(i).append(" => ").append(indexMap[i]);
  1112.           }
  1113. >         return builder.append(']').toString();
  1114.         }
  1115.       };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1106: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  1104.   
  1105.         @Override public String toString() {
  1106. >         StringBuilder builder = new StringBuilder("ArgumentTransformer[");
  1107.           for (int i = 0; i < indexMap.length; i++) {
  1108.             if (i > 0) {

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  1109.               builder.append(", ");
  1110.             }
  1111. >           builder.append(i).append(" => ").append(indexMap[i]);
  1112.           }
  1113.           return builder.append(']').toString();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1111: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`,dereference of pointer `this->butterknife.ButterKnife$7.val$indexMap`,dereference of pointer `this`.
  1109.               builder.append(", ");
  1110.             }
  1111. >           builder.append(i).append(" => ").append(indexMap[i]);
  1112.           }
  1113.           return builder.append(']').toString();

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1113: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$29`.
  1111.             builder.append(i).append(" => ").append(indexMap[i]);
  1112.           }
  1113. >         return builder.append(']').toString();
  1114.         }
  1115.       };

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1120: warning: GRADUAL_DEREFERENCE
  method call on pointer `field`.
  1118.     static void trySet(Field field, Object target, @Nullable Object value) {
  1119.       try {
  1120. >       field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122.         throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1122: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$6`.
  1120.         field.set(target, value);
  1121.       } catch (IllegalAccessException e) {
  1122. >       throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  1123.       }
  1124.     }

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1129: warning: GRADUAL_DEREFERENCE
  method call on pointer `method`.
  1127.       Throwable cause;
  1128.       try {
  1129. >       return method.invoke(target, arguments);
  1130.       } catch (IllegalAccessException e) {
  1131.         cause = e;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  1133.         cause = e;
  1134.       }
  1135. >     throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137.               + Arrays.toString(arguments), cause);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$14`.
  1133.         cause = e;
  1134.       }
  1135. >     throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137.               + Arrays.toString(arguments), cause);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  1133.         cause = e;
  1134.       }
  1135. >     throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137.               + Arrays.toString(arguments), cause);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$21`.
  1133.         cause = e;
  1134.       }
  1135. >     throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137.               + Arrays.toString(arguments), cause);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1135: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$25`.
  1133.         cause = e;
  1134.       }
  1135. >     throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137.               + Arrays.toString(arguments), cause);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  1135.       throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137. >             + Arrays.toString(arguments), cause);
  1138.     }
  1139.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$34`.
  1135.       throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137. >             + Arrays.toString(arguments), cause);
  1138.     }
  1139.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1137: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$38`.
  1135.       throw new RuntimeException(
  1136.           "Unable to invoke " + method + " on " + target + " with arguments "
  1137. >             + Arrays.toString(arguments), cause);
  1138.     }
  1139.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1141: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1139.   
  1140.     private static final Setter<CompoundButton, CompoundButton.OnCheckedChangeListener>
  1141. >       ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  1142.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  1143.         (view, value, index) -> view.setOnClickListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1143: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1141.         ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  1142.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  1143. >       (view, value, index) -> view.setOnClickListener(value);
  1144.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  1145.         (view, value, index) -> view.setOnEditorActionListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1145: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1143.         (view, value, index) -> view.setOnClickListener(value);
  1144.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  1145. >       (view, value, index) -> view.setOnEditorActionListener(value);
  1146.     private static final Setter<View, View.OnFocusChangeListener> ON_FOCUS_CHANGE =
  1147.         (view, value, index) -> view.setOnFocusChangeListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1147: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1145.         (view, value, index) -> view.setOnEditorActionListener(value);
  1146.     private static final Setter<View, View.OnFocusChangeListener> ON_FOCUS_CHANGE =
  1147. >       (view, value, index) -> view.setOnFocusChangeListener(value);
  1148.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  1149.         (view, value, index) -> view.setOnItemClickListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1149: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1147.         (view, value, index) -> view.setOnFocusChangeListener(value);
  1148.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  1149. >       (view, value, index) -> view.setOnItemClickListener(value);
  1150.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  1151.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1151: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1149.         (view, value, index) -> view.setOnItemClickListener(value);
  1150.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  1151. >       ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  1152.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  1153.         (view, value, index) -> view.setOnLongClickListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1153: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1151.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  1152.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  1153. >       (view, value, index) -> view.setOnLongClickListener(value);
  1154.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  1155.         (view, value, index) -> view.setOnTouchListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1155: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1153.         (view, value, index) -> view.setOnLongClickListener(value);
  1154.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  1155. >       (view, value, index) -> view.setOnTouchListener(value);
  1156.     private static final Setter<ViewPager, ViewPager.OnPageChangeListener> ADD_ON_PAGE_CHANGE =
  1157.         (view, value, index) -> view.addOnPageChangeListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1157: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1155.         (view, value, index) -> view.setOnTouchListener(value);
  1156.     private static final Setter<ViewPager, ViewPager.OnPageChangeListener> ADD_ON_PAGE_CHANGE =
  1157. >       (view, value, index) -> view.addOnPageChangeListener(value);
  1158.     private static final Setter<ViewPager, ViewPager.OnPageChangeListener> REMOVE_ON_PAGE_CHANGE =
  1159.         (view, value, index) -> view.removeOnPageChangeListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1159: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1157.         (view, value, index) -> view.addOnPageChangeListener(value);
  1158.     private static final Setter<ViewPager, ViewPager.OnPageChangeListener> REMOVE_ON_PAGE_CHANGE =
  1159. >       (view, value, index) -> view.removeOnPageChangeListener(value);
  1160.     private static final Setter<TextView, TextWatcher> ADD_TEXT_WATCHER =
  1161.         (view, value, index) -> view.addTextChangedListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1161: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1159.         (view, value, index) -> view.removeOnPageChangeListener(value);
  1160.     private static final Setter<TextView, TextWatcher> ADD_TEXT_WATCHER =
  1161. >       (view, value, index) -> view.addTextChangedListener(value);
  1162.     private static final Setter<TextView, TextWatcher> REMOVE_TEXT_WATCHER =
  1163.         (view, value, index) -> view.removeTextChangedListener(value);

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1163: warning: GRADUAL_DEREFERENCE
  method call on pointer `view`.
  1161.         (view, value, index) -> view.addTextChangedListener(value);
  1162.     private static final Setter<TextView, TextWatcher> REMOVE_TEXT_WATCHER =
  1163. >       (view, value, index) -> view.removeTextChangedListener(value);
  1164.   
  1165.     private static final Class<?>[] ON_CHECKED_CHANGED_TYPES =

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1185: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  1183.   
  1184.     private interface ArgumentTransformer {
  1185. >     ArgumentTransformer EMPTY = new ArgumentTransformer() {
  1186.         private final Object[] empty = new Object[0];
  1187.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1196: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$3`.
  1194.         }
  1195.       };
  1196. >     ArgumentTransformer IDENTITY = new ArgumentTransformer() {
  1197.         @Override public Object[] transform(Object... arguments) {
  1198.           return arguments;

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1189: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1187.   
  1188.         @Override public Object[] transform(Object... arguments) {
  1189. >         return empty;
  1190.         }
  1191.   

butterknife-reflect/src/main/java/butterknife/ButterKnife.java:1196: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1194.         }
  1195.       };
  1196. >     ArgumentTransformer IDENTITY = new ArgumentTransformer() {
  1197.         @Override public Object[] transform(Object... arguments) {
  1198.           return arguments;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1210: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  1208.     private boolean isInterface(TypeMirror typeMirror) {
  1209.       return typeMirror instanceof DeclaredType
  1210. >         && ((DeclaredType) typeMirror).asElement().getKind() == INTERFACE;
  1211.     }
  1212.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1210: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeMirror`.
  1208.     private boolean isInterface(TypeMirror typeMirror) {
  1209.       return typeMirror instanceof DeclaredType
  1210. >         && ((DeclaredType) typeMirror).asElement().getKind() == INTERFACE;
  1211.     }
  1212.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1221: warning: GRADUAL_DEREFERENCE
  method call on pointer `declaredType`.
  1219.       }
  1220.       DeclaredType declaredType = (DeclaredType) typeMirror;
  1221. >     List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1222.       if (typeArguments.size() > 0) {
  1223.         StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1223: warning: GRADUAL_DEREFERENCE
  method call on pointer `declaredType`.
  1221.       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1222.       if (typeArguments.size() > 0) {
  1223. >       StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1224.         typeString.append('<');
  1225.         for (int i = 0; i < typeArguments.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1236: warning: GRADUAL_DEREFERENCE
  method call on pointer `declaredType`.
  1234.         }
  1235.       }
  1236. >     Element element = declaredType.asElement();
  1237.       if (!(element instanceof TypeElement)) {
  1238.         return false;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1223: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  1221.       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1222.       if (typeArguments.size() > 0) {
  1223. >       StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1224.         typeString.append('<');
  1225.         for (int i = 0; i < typeArguments.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1223: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$24`.
  1221.       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1222.       if (typeArguments.size() > 0) {
  1223. >       StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1224.         typeString.append('<');
  1225.         for (int i = 0; i < typeArguments.size(); i++) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1232: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$48`.
  1230.         }
  1231.         typeString.append('>');
  1232. >       if (typeString.toString().equals(otherType)) {
  1233.           return true;
  1234.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1245: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$70`.
  1243.         return true;
  1244.       }
  1245. >     for (TypeMirror interfaceType : typeElement.getInterfaces()) {
  1246.         if (isSubtypeOfType(interfaceType, otherType)) {
  1247.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1245: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$73`.
  1243.         return true;
  1244.       }
  1245. >     for (TypeMirror interfaceType : typeElement.getInterfaces()) {
  1246.         if (isSubtypeOfType(interfaceType, otherType)) {
  1247.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1222: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeArguments`.
  1220.       DeclaredType declaredType = (DeclaredType) typeMirror;
  1221.       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1222. >     if (typeArguments.size() > 0) {
  1223.         StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1224.         typeString.append('<');

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1225: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeArguments`.
  1223.         StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1224.         typeString.append('<');
  1225. >       for (int i = 0; i < typeArguments.size(); i++) {
  1226.           if (i > 0) {
  1227.             typeString.append(',');

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1241: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeElement`.
  1239.       }
  1240.       TypeElement typeElement = (TypeElement) element;
  1241. >     TypeMirror superType = typeElement.getSuperclass();
  1242.       if (isSubtypeOfType(superType, otherType)) {
  1243.         return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1245: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeElement`.
  1243.         return true;
  1244.       }
  1245. >     for (TypeMirror interfaceType : typeElement.getInterfaces()) {
  1246.         if (isSubtypeOfType(interfaceType, otherType)) {
  1247.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1217: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeMirror`.
  1215.         return true;
  1216.       }
  1217. >     if (typeMirror.getKind() != TypeKind.DECLARED) {
  1218.         return false;
  1219.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1224: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeString`.
  1222.       if (typeArguments.size() > 0) {
  1223.         StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1224. >       typeString.append('<');
  1225.         for (int i = 0; i < typeArguments.size(); i++) {
  1226.           if (i > 0) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1227: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeString`.
  1225.         for (int i = 0; i < typeArguments.size(); i++) {
  1226.           if (i > 0) {
  1227. >           typeString.append(',');
  1228.           }
  1229.           typeString.append('?');

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1229: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeString`.
  1227.             typeString.append(',');
  1228.           }
  1229. >         typeString.append('?');
  1230.         }
  1231.         typeString.append('>');

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1231: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeString`.
  1229.           typeString.append('?');
  1230.         }
  1231. >       typeString.append('>');
  1232.         if (typeString.toString().equals(otherType)) {
  1233.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1232: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeString`.
  1230.         }
  1231.         typeString.append('>');
  1232. >       if (typeString.toString().equals(otherType)) {
  1233.           return true;
  1234.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1254: warning: GRADUAL_DEREFERENCE
  method call on pointer `otherType`.
  1252.   
  1253.     private static boolean isTypeEqual(TypeMirror typeMirror, String otherType) {
  1254. >     return otherType.equals(typeMirror.toString());
  1255.     }
  1256.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1254: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeMirror`.
  1252.   
  1253.     private static boolean isTypeEqual(TypeMirror typeMirror, String otherType) {
  1254. >     return otherType.equals(typeMirror.toString());
  1255.     }
  1256.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1259: warning: GRADUAL_DEREFERENCE
  method call on pointer `builderMap`.
  1257.     private BindingSet.Builder getOrCreateBindingBuilder(
  1258.         Map<TypeElement, BindingSet.Builder> builderMap, TypeElement enclosingElement) {
  1259. >     BindingSet.Builder builder = builderMap.get(enclosingElement);
  1260.       if (builder == null) {
  1261.         builder = BindingSet.newBuilder(enclosingElement);

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1262: warning: GRADUAL_DEREFERENCE
  method call on pointer `builderMap`.
  1260.       if (builder == null) {
  1261.         builder = BindingSet.newBuilder(enclosingElement);
  1262. >       builderMap.put(enclosingElement, builder);
  1263.       }
  1264.       return builder;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1276: warning: GRADUAL_DEREFERENCE
  method call on pointer `parents`.
  1274.         }
  1275.         typeElement = (TypeElement) ((DeclaredType) type).asElement();
  1276. >       if (parents.contains(typeElement)) {
  1277.           return typeElement;
  1278.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1271: warning: GRADUAL_DEREFERENCE
  method call on pointer `typeElement`.
  1269.       TypeMirror type;
  1270.       while (true) {
  1271. >       type = typeElement.getSuperclass();
  1272.         if (type.getKind() == TypeKind.NONE) {
  1273.           return null;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1272: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  1270.       while (true) {
  1271.         type = typeElement.getSuperclass();
  1272. >       if (type.getKind() == TypeKind.NONE) {
  1273.           return null;
  1274.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1275: warning: GRADUAL_DEREFERENCE
  method call on pointer `type`.
  1273.           return null;
  1274.         }
  1275. >       typeElement = (TypeElement) ((DeclaredType) type).asElement();
  1276.         if (parents.contains(typeElement)) {
  1277.           return typeElement;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1287: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1285.   
  1286.     private void error(Element element, String message, Object... args) {
  1287. >     printMessage(Kind.ERROR, element, message, args);
  1288.     }
  1289.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1291: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1289.   
  1290.     private void note(Element element, String message, Object... args) {
  1291. >     printMessage(Kind.NOTE, element, message, args);
  1292.     }
  1293.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1299: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$10`.
  1297.       }
  1298.   
  1299. >     processingEnv.getMessager().printMessage(kind, message, element);
  1300.     }
  1301.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1299: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->javax.annotation.processing.AbstractProcessor.processingEnv`,dereference of pointer `this`.
  1297.       }
  1298.   
  1299. >     processingEnv.getMessager().printMessage(kind, message, element);
  1300.     }
  1301.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1308: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$32`.
  1306.         tree.accept(rScanner);
  1307.         if (!rScanner.resourceIds.isEmpty()) {
  1308. >         return rScanner.resourceIds.values().iterator().next();
  1309.         }
  1310.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1308: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$35`.
  1306.         tree.accept(rScanner);
  1307.         if (!rScanner.resourceIds.isEmpty()) {
  1308. >         return rScanner.resourceIds.values().iterator().next();
  1309.         }
  1310.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1311: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$41`.
  1309.         }
  1310.       }
  1311. >     return new Id(value);
  1312.     }
  1313.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1307: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner->butterknife.compiler.ButterKnifeProcessor$RScanner.resourceIds`,dereference of pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner`,dereference of pointer `this`.
  1305.         rScanner.reset();
  1306.         tree.accept(rScanner);
  1307. >       if (!rScanner.resourceIds.isEmpty()) {
  1308.           return rScanner.resourceIds.values().iterator().next();
  1309.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1308: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner->butterknife.compiler.ButterKnifeProcessor$RScanner.resourceIds`,dereference of pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner`,dereference of pointer `this`.
  1306.         tree.accept(rScanner);
  1307.         if (!rScanner.resourceIds.isEmpty()) {
  1308. >         return rScanner.resourceIds.values().iterator().next();
  1309.         }
  1310.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1305: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner`,dereference of pointer `this`.
  1303.       JCTree tree = (JCTree) trees.getTree(element, getMirror(element, annotation));
  1304.       if (tree != null) { // tree can be null if the references are compiled types and not source
  1305. >       rScanner.reset();
  1306.         tree.accept(rScanner);
  1307.         if (!rScanner.resourceIds.isEmpty()) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1303: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.trees`,dereference of pointer `this`.
  1301.   
  1302.     private Id elementToId(Element element, Class<? extends Annotation> annotation, int value) {
  1303. >     JCTree tree = (JCTree) trees.getTree(element, getMirror(element, annotation));
  1304.       if (tree != null) { // tree can be null if the references are compiled types and not source
  1305.         rScanner.reset();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1306: warning: GRADUAL_DEREFERENCE
  method call on pointer `tree`,dereference of pointer `this`.
  1304.       if (tree != null) { // tree can be null if the references are compiled types and not source
  1305.         rScanner.reset();
  1306. >       tree.accept(rScanner);
  1307.         if (!rScanner.resourceIds.isEmpty()) {
  1308.           return rScanner.resourceIds.values().iterator().next();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1321: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner`,dereference of pointer `this`.
  1319.         rScanner.reset();
  1320.         tree.accept(rScanner);
  1321. >       resourceIds = rScanner.resourceIds;
  1322.       }
  1323.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1325: warning: GRADUAL_DEREFERENCE
  dereference of pointer `values`.
  1323.   
  1324.       // Every value looked up should have an Id
  1325. >     for (int value : values) {
  1326.         resourceIds.putIfAbsent(value, new Id(value));
  1327.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1316: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$0`.
  1314.     private Map<Integer, Id> elementToIds(Element element, Class<? extends Annotation> annotation,
  1315.         int[] values) {
  1316. >     Map<Integer, Id> resourceIds = new LinkedHashMap<>();
  1317.       JCTree tree = (JCTree) trees.getTree(element, getMirror(element, annotation));
  1318.       if (tree != null) { // tree can be null if the references are compiled types and not source

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1326: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$39`.
  1324.       // Every value looked up should have an Id
  1325.       for (int value : values) {
  1326. >       resourceIds.putIfAbsent(value, new Id(value));
  1327.       }
  1328.       return resourceIds;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1326: warning: GRADUAL_DEREFERENCE
  method call on pointer `resourceIds`.
  1324.       // Every value looked up should have an Id
  1325.       for (int value : values) {
  1326. >       resourceIds.putIfAbsent(value, new Id(value));
  1327.       }
  1328.       return resourceIds;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1319: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.rScanner`,dereference of pointer `this`.
  1317.       JCTree tree = (JCTree) trees.getTree(element, getMirror(element, annotation));
  1318.       if (tree != null) { // tree can be null if the references are compiled types and not source
  1319. >       rScanner.reset();
  1320.         tree.accept(rScanner);
  1321.         resourceIds = rScanner.resourceIds;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1317: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor.trees`,dereference of pointer `this`.
  1315.         int[] values) {
  1316.       Map<Integer, Id> resourceIds = new LinkedHashMap<>();
  1317. >     JCTree tree = (JCTree) trees.getTree(element, getMirror(element, annotation));
  1318.       if (tree != null) { // tree can be null if the references are compiled types and not source
  1319.         rScanner.reset();

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1320: warning: GRADUAL_DEREFERENCE
  method call on pointer `tree`,dereference of pointer `this`.
  1318.       if (tree != null) { // tree can be null if the references are compiled types and not source
  1319.         rScanner.reset();
  1320. >       tree.accept(rScanner);
  1321.         resourceIds = rScanner.resourceIds;
  1322.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1332: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1330.   
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332. >     for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1333: warning: GRADUAL_DEREFERENCE
  method call on pointer `mirror`.
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332.       for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333. >       String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {
  1335.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1333: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332.       for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333. >       String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {
  1335.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1333: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332.       for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333. >       String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {
  1335.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1333: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$23`.
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332.       for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333. >       String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {
  1335.           return true;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1332: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  1330.   
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332. >     for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1332: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  1330.   
  1331.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1332. >     for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334.         if (simpleName.equals(annotationName)) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1334: warning: GRADUAL_DEREFERENCE
  method call on pointer `simpleName`.
  1332.       for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1333.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1334. >       if (simpleName.equals(annotationName)) {
  1335.           return true;
  1336.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1346: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1344.   
  1345.     private static boolean isListenerRequired(ExecutableElement element) {
  1346. >     return element.getAnnotation(Optional.class) == null;
  1347.     }
  1348.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1352: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotationMirror`.
  1350.         Class<? extends Annotation> annotation) {
  1351.       for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352. >       if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;
  1354.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1352: warning: GRADUAL_DEREFERENCE
  method call on pointer `annotation`.
  1350.         Class<? extends Annotation> annotation) {
  1351.       for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352. >       if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;
  1354.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1351: warning: GRADUAL_DEREFERENCE
  method call on pointer `element`.
  1349.     private static @Nullable AnnotationMirror getMirror(Element element,
  1350.         Class<? extends Annotation> annotation) {
  1351. >     for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352.         if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1352: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$17`.
  1350.         Class<? extends Annotation> annotation) {
  1351.       for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352. >       if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;
  1354.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1352: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$20`.
  1350.         Class<? extends Annotation> annotation) {
  1351.       for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352. >       if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;
  1354.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1351: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  1349.     private static @Nullable AnnotationMirror getMirror(Element element,
  1350.         Class<? extends Annotation> annotation) {
  1351. >     for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352.         if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1351: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$5`.
  1349.     private static @Nullable AnnotationMirror getMirror(Element element,
  1350.         Class<? extends Annotation> annotation) {
  1351. >     for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1352.         if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1353.           return annotationMirror;

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1360: warning: GRADUAL_DEREFERENCE
  dereference of pointer `this`.
  1358.   
  1359.     private static class RScanner extends TreeScanner {
  1360. >     Map<Integer, Id> resourceIds = new LinkedHashMap<>();
  1361.   
  1362.       @Override public void visitSelect(JCTree.JCFieldAccess jcFieldAccess) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1360: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$2`.
  1358.   
  1359.     private static class RScanner extends TreeScanner {
  1360. >     Map<Integer, Id> resourceIds = new LinkedHashMap<>();
  1361.   
  1362.       @Override public void visitSelect(JCTree.JCFieldAccess jcFieldAccess) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1359: warning: GRADUAL_DEREFERENCE
  method call on pointer `this`.
  1357.     }
  1358.   
  1359. >   private static class RScanner extends TreeScanner {
  1360.       Map<Integer, Id> resourceIds = new LinkedHashMap<>();
  1361.   

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1363: warning: GRADUAL_DEREFERENCE
  dereference of pointer `jcFieldAccess`.
  1361.   
  1362.       @Override public void visitSelect(JCTree.JCFieldAccess jcFieldAccess) {
  1363. >       Symbol symbol = jcFieldAccess.sym;
  1364.         if (symbol.getEnclosingElement() != null
  1365.             && symbol.getEnclosingElement().getEnclosingElement() != null

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1366: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$15`.
  1364.         if (symbol.getEnclosingElement() != null
  1365.             && symbol.getEnclosingElement().getEnclosingElement() != null
  1366. >           && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {
  1368.             int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1366: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$18`.
  1364.         if (symbol.getEnclosingElement() != null
  1365.             && symbol.getEnclosingElement().getEnclosingElement() != null
  1366. >           && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {
  1368.             int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1368: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$28`.
  1366.             && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {
  1368. >           int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());
  1369.             resourceIds.put(value, new Id(value, symbol));
  1370.           } catch (Exception ignored) { }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1369: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$37`.
  1367.           try {
  1368.             int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());
  1369. >           resourceIds.put(value, new Id(value, symbol));
  1370.           } catch (Exception ignored) { }
  1371.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1365: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$8`.
  1363.         Symbol symbol = jcFieldAccess.sym;
  1364.         if (symbol.getEnclosingElement() != null
  1365. >           && symbol.getEnclosingElement().getEnclosingElement() != null
  1366.             && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1364: warning: GRADUAL_DEREFERENCE
  method call on pointer `symbol`.
  1362.       @Override public void visitSelect(JCTree.JCFieldAccess jcFieldAccess) {
  1363.         Symbol symbol = jcFieldAccess.sym;
  1364. >       if (symbol.getEnclosingElement() != null
  1365.             && symbol.getEnclosingElement().getEnclosingElement() != null
  1366.             && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1365: warning: GRADUAL_DEREFERENCE
  method call on pointer `symbol`.
  1363.         Symbol symbol = jcFieldAccess.sym;
  1364.         if (symbol.getEnclosingElement() != null
  1365. >           && symbol.getEnclosingElement().getEnclosingElement() != null
  1366.             && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1366: warning: GRADUAL_DEREFERENCE
  method call on pointer `symbol`.
  1364.         if (symbol.getEnclosingElement() != null
  1365.             && symbol.getEnclosingElement().getEnclosingElement() != null
  1366. >           && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {
  1368.             int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1368: warning: GRADUAL_DEREFERENCE
  method call on pointer `symbol`.
  1366.             && symbol.getEnclosingElement().getEnclosingElement().enclClass() != null) {
  1367.           try {
  1368. >           int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());
  1369.             resourceIds.put(value, new Id(value, symbol));
  1370.           } catch (Exception ignored) { }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1369: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor$RScanner.resourceIds`,dereference of pointer `this`.
  1367.           try {
  1368.             int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());
  1369. >           resourceIds.put(value, new Id(value, symbol));
  1370.           } catch (Exception ignored) { }
  1371.         }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1376: warning: GRADUAL_DEREFERENCE
  method call on pointer `jcLiteral->com.sun.tools.javac.tree.JCTree$JCLiteral.value`,dereference of pointer `jcLiteral`.
  1374.       @Override public void visitLiteral(JCTree.JCLiteral jcLiteral) {
  1375.         try {
  1376. >         int value = (Integer) jcLiteral.value;
  1377.           resourceIds.put(value, new Id(value));
  1378.         } catch (Exception ignored) { }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1377: warning: GRADUAL_DEREFERENCE
  method call on pointer `n$9`.
  1375.         try {
  1376.           int value = (Integer) jcLiteral.value;
  1377. >         resourceIds.put(value, new Id(value));
  1378.         } catch (Exception ignored) { }
  1379.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1377: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor$RScanner.resourceIds`,dereference of pointer `this`.
  1375.         try {
  1376.           int value = (Integer) jcLiteral.value;
  1377. >         resourceIds.put(value, new Id(value));
  1378.         } catch (Exception ignored) { }
  1379.       }

butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1382: warning: GRADUAL_DEREFERENCE
  method call on pointer `this->butterknife.compiler.ButterKnifeProcessor$RScanner.resourceIds`,dereference of pointer `this`.
  1380.   
  1381.       void reset() {
  1382. >       resourceIds.clear();
  1383.       }
  1384.     }

Summary of the reports

  GRADUAL_DEREFERENCE: 3588