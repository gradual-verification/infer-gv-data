No issues foundFound 15 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.lint.InvalidR2UsageDetector$1.this$0`.
  45.   
  46.     @Override public UElementHandler createUastHandler(final JavaContext context) {
  47. >     return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49.           node.accept(new R2UsageVisitor(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.lint.InvalidR2UsageDetector$1.val$context`.
  45.   
  46.     @Override public UElementHandler createUastHandler(final JavaContext context) {
  47. >     return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49.           node.accept(new R2UsageVisitor(context));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:49: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `node`.
  47.       return new UElementHandler() {
  48.         @Override public void visitClass(UClass node) {
  49. >         node.accept(new R2UsageVisitor(context));
  50.         }
  51.       };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.lint.InvalidR2UsageDetector$R2UsageVisitor.context`.
  56.   
  57.       R2UsageVisitor(JavaContext context) {
  58. >       this.context = context;
  59.       }
  60.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:68: warning: GRADUAL_BOUNDARY
  check ambiguous argument `node` passed to nonnull parameter.
  66.       @Override public boolean visitQualifiedReferenceExpression(UQualifiedReferenceExpression node) {
  67.         detectR2(context, node);
  68. >       return super.visitQualifiedReferenceExpression(node);
  69.       }
  70.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:74: warning: GRADUAL_BOUNDARY
  check ambiguous argument `node` passed to nonnull parameter.
  72.       public boolean visitSimpleNameReferenceExpression(USimpleNameReferenceExpression node) {
  73.         detectR2(context, node);
  74. >       return super.visitSimpleNameReferenceExpression(node);
  75.       }
  76.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:90: warning: GRADUAL_BOUNDARY
  check ambiguous argument `node` passed to nonnull parameter.
  88.         }
  89.         boolean isR2 = isR2Expression(node);
  90. >       if (isR2 && !context.isSuppressedWithComment(node, ISSUE)) {
  91.           context.report(ISSUE, node, context.getLocation(node), LINT_ERROR_BODY);
  92.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:91: warning: GRADUAL_BOUNDARY
  check ambiguous argument `node` passed to nonnull parameter.
  89.         boolean isR2 = isR2Expression(node);
  90.         if (isR2 && !context.isSuppressedWithComment(node, ISSUE)) {
  91. >         context.report(ISSUE, node, context.getLocation(node), LINT_ERROR_BODY);
  92.         }
  93.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:78: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  76.   
  77.       private static void detectR2(JavaContext context, UElement node) {
  78. >       UFile sourceFile = context.getUastFile();
  79.         List<UClass> classes = sourceFile.getClasses();
  80.         if (!classes.isEmpty() && classes.get(0).getName() != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:90: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  88.         }
  89.         boolean isR2 = isR2Expression(node);
  90. >       if (isR2 && !context.isSuppressedWithComment(node, ISSUE)) {
  91.           context.report(ISSUE, node, context.getLocation(node), LINT_ERROR_BODY);
  92.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:91: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `context`.
  89.         boolean isR2 = isR2Expression(node);
  90.         if (isR2 && !context.isSuppressedWithComment(node, ISSUE)) {
  91. >         context.report(ISSUE, node, context.getLocation(node), LINT_ERROR_BODY);
  92.         }
  93.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:96: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `node`.
  94.   
  95.       private static boolean isR2Expression(UElement node) {
  96. >       UElement parentNode = node.getUastParent();
  97.         if (parentNode == null) {
  98.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:100: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `node`.
  98.           return false;
  99.         }
  100. >       String text = node.asSourceString();
  101.         UElement parent = LintUtils.skipParentheses(parentNode);
  102.         return (text.equals(R2) || text.contains(".R2"))

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:109: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `possibleValues`.
  107.       private static boolean endsWithAny(String text, Set<String> possibleValues) {
  108.         String[] tokens = text.split("\\.");
  109. >       return tokens.length > 1 && possibleValues.contains(tokens[tokens.length - 1]);
  110.       }
  111.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-lint/src/main/java/butterknife/lint/InvalidR2UsageDetector.java:108: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `text`.
  106.   
  107.       private static boolean endsWithAny(String text, Set<String> possibleValues) {
  108. >       String[] tokens = text.split("\\.");
  109.         return tokens.length > 1 && possibleValues.contains(tokens[tokens.length - 1]);
  110.       }

Summary of the reports

     GRADUAL_CHECK: 8
  GRADUAL_BOUNDARY: 7Found 55 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.internal.ImmutableList.views`.
  12.   
  13.     ImmutableList(T[] views) {
  14. >     this.views = views;
  15.     }
  16.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_BOUNDARY
  check ambiguous argument `i` passed to nonnull parameter.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(List,butterknife.Action[])`.
  15.         @NonNull Action<? super T>... actions) {
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17. >       for (Action<? super T> action : actions) {
  18.           action.apply(list.get(i), i);
  19.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:17: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `actions`.
  15.         @NonNull Action<? super T>... actions) {
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17. >       for (Action<? super T> action : actions) {
  18.           action.apply(list.get(i), i);
  19.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/DebouncingOnClickListener.java:17: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `v`.
  15.       if (enabled) {
  16.         enabled = false;
  17. >       v.post(ENABLE_AGAIN);
  18.         doClick(v);
  19.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:18: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ImmutableList.get(int)`.
  16.   
  17.     @Override public T get(int index) {
  18. >     return views[index];
  19.     }
  20.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:22: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int ImmutableList.size()`.
  20.   
  21.     @Override public int size() {
  22. >     return views.length;
  23.     }
  24.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:27: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(android.view.View[],butterknife.Action[])`.
  25.     @SafeVarargs public static <T extends View> void run(@NonNull T[] array,
  26.         @NonNull Action<? super T>... actions) {
  27. >     for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:28: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(android.view.View[],butterknife.Action[])`.
  26.         @NonNull Action<? super T>... actions) {
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28. >       for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);
  30.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:28: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `actions`.
  26.         @NonNull Action<? super T>... actions) {
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28. >       for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);
  30.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`,check dereference of ambiguous pointer `array`.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:26: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ImmutableList.contains(Object)`.
  24.   
  25.     @Override public boolean contains(Object o) {
  26. >     for (T view : views) {
  27.         if (view == o) {
  28.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_BOUNDARY
  check ambiguous argument `i` passed to nonnull parameter.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(android.view.View[],Action)`.
  44.     @UiThread
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46. >     for (int i = 0, count = array.length; i < count; i++) {
  47.         action.apply(array[i], i);
  48.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`,check dereference of ambiguous pointer `array`.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  54.         @NonNull Action<? super T>... actions) {
  55.       for (Action<? super T> action : actions) {
  56. >       action.apply(view, 0);
  57.       }
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:55: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(View,butterknife.Action[])`.
  53.     @SafeVarargs public static <T extends View> void run(@NonNull T view,
  54.         @NonNull Action<? super T>... actions) {
  55. >     for (Action<? super T> action : actions) {
  56.         action.apply(view, 0);
  57.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:55: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `actions`.
  53.     @SafeVarargs public static <T extends View> void run(@NonNull T view,
  54.         @NonNull Action<? super T>... actions) {
  55. >     for (Action<? super T> action : actions) {
  56.         action.apply(view, 0);
  57.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:56: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  54.         @NonNull Action<? super T>... actions) {
  55.       for (Action<? super T> action : actions) {
  56. >       action.apply(view, 0);
  57.       }
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:67: warning: GRADUAL_BOUNDARY
  check ambiguous argument `views` passed to nonnull parameter.
  65.       //noinspection unchecked
  66.       T[] newViews = (T[]) Array.newInstance(views.getClass().getComponentType(), end);
  67. >     System.arraycopy(views, 0, newViews, 0, end);
  68.       return newViews;
  69.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:67: warning: GRADUAL_BOUNDARY
  check ambiguous argument `views` passed to nonnull parameter,check ambiguous argument `end` passed to nonnull parameter.
  65.       //noinspection unchecked
  66.       T[] newViews = (T[]) Array.newInstance(views.getClass().getComponentType(), end);
  67. >     System.arraycopy(views, 0, newViews, 0, end);
  68.       return newViews;
  69.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:55: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] Utils.arrayFilteringNull(java.lang.Object[])`.
  53.     public static <T> T[] arrayFilteringNull(T... views) {
  54.       int end = 0;
  55. >     int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57.         T view = views[i];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:57: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] Utils.arrayFilteringNull(java.lang.Object[])`.
  55.       int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57. >       T view = views[i];
  58.         if (view != null) {
  59.           views[end++] = view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:63: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] Utils.arrayFilteringNull(java.lang.Object[])`.
  61.       }
  62.       if (end == length) {
  63. >       return views;
  64.       }
  65.       //noinspection unchecked

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:57: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `views`.
  55.       int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57. >       T view = views[i];
  58.         if (view != null) {
  59.           views[end++] = view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:59: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `views`.
  57.         T view = views[i];
  58.         if (view != null) {
  59. >         views[end++] = view;
  60.         }
  61.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:66: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  64.       }
  65.       //noinspection unchecked
  66. >     T[] newViews = (T[]) Array.newInstance(views.getClass().getComponentType(), end);
  67.       System.arraycopy(views, 0, newViews, 0, end);
  68.       return newViews;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter,check ambiguous argument `value` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:79: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.set(android.view.View[],Setter,Object)`.
  77.     public static <T extends View, V> void set(@NonNull T[] array,
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79. >     for (int i = 0, count = array.length; i < count; i++) {
  80.         setter.set(array[i], value, i);
  81.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`,check dereference of ambiguous pointer `array`.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:99: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  97.       //noinspection ForLoopReplaceableByForEach
  98.       for (int i = 0, count = list.size(); i < count; i++) {
  99. >       setter.set(list.get(i), value);
  100.       }
  101.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:99: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`.
  97.       //noinspection ForLoopReplaceableByForEach
  98.       for (int i = 0, count = list.size(); i < count; i++) {
  99. >       setter.set(list.get(i), value);
  100.       }
  101.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:107: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object Utils.castView(View,int,String,Class)`.
  105.       try {
  106.         return cls.cast(view);
  107. >     } catch (ClassCastException e) {
  108.         String name = getResourceEntryName(view, id);
  109.         throw new IllegalStateException("View '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:107: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Object Utils.castView(View,int,String,Class)`.
  105.       try {
  106.         return cls.cast(view);
  107. >     } catch (ClassCastException e) {
  108.         String name = getResourceEntryName(view, id);
  109.         throw new IllegalStateException("View '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:110: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.set(android.view.View[],Property,Object)`.
  108.         @NonNull Property<? super T, V> setter, @Nullable V value) {
  109.       //noinspection ForLoopReplaceableByForEach
  110. >     for (int i = 0, count = array.length; i < count; i++) {
  111.         setter.set(array[i], value);
  112.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:111: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`,check dereference of ambiguous pointer `array`.
  109.       //noinspection ForLoopReplaceableByForEach
  110.       for (int i = 0, count = array.length; i < count; i++) {
  111. >       setter.set(array[i], value);
  112.       }
  113.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:124: warning: GRADUAL_BOUNDARY
  check ambiguous argument `from` passed to nonnull parameter.
  122.         return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124. >       throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)
  126.             + " of method '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:124: warning: GRADUAL_BOUNDARY
  check ambiguous argument `to` passed to nonnull parameter.
  122.         return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124. >       throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)
  126.             + " of method '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:122: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  120.         Class<T> cls) {
  121.       try {
  122. >       return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:123: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object Utils.castParam(Object,String,int,String,int,Class)`.
  121.       try {
  122.         return cls.cast(value);
  123. >     } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:122: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  120.         Class<T> cls) {
  121.       try {
  122. >       return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:123: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Object Utils.castParam(Object,String,int,String,int,Class)`.
  121.       try {
  122.         return cls.cast(value);
  123. >     } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)

Summary of the reports

  GRADUAL_BOUNDARY: 31
     GRADUAL_CHECK: 22
    GRADUAL_STATIC: 2Found 17 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:88: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ButterKnife.debug`.
  86.     /** Control whether debug logging is enabled. */
  87.     public static void setDebug(boolean debug) {
  88. >     ButterKnife.debug = debug;
  89.     }
  90.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:172: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  170.       try {
  171.         return constructor.newInstance(target, source);
  172. >     } catch (IllegalAccessException e) {
  173.         throw new RuntimeException("Unable to invoke " + constructor, e);
  174.       } catch (InstantiationException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  172.       } catch (IllegalAccessException e) {
  173.         throw new RuntimeException("Unable to invoke " + constructor, e);
  174. >     } catch (InstantiationException e) {
  175.         throw new RuntimeException("Unable to invoke " + constructor, e);
  176.       } catch (InvocationTargetException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:176: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  174.       } catch (InstantiationException e) {
  175.         throw new RuntimeException("Unable to invoke " + constructor, e);
  176. >     } catch (InvocationTargetException e) {
  177.         Throwable cause = e.getCause();
  178.         if (cause instanceof RuntimeException) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:177: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `e`.
  175.         throw new RuntimeException("Unable to invoke " + constructor, e);
  176.       } catch (InvocationTargetException e) {
  177. >       Throwable cause = e.getCause();
  178.         if (cause instanceof RuntimeException) {
  179.           throw (RuntimeException) cause;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:172: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  170.       try {
  171.         return constructor.newInstance(target, source);
  172. >     } catch (IllegalAccessException e) {
  173.         throw new RuntimeException("Unable to invoke " + constructor, e);
  174.       } catch (InstantiationException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:190: warning: GRADUAL_BOUNDARY
  check ambiguous argument `cls` passed to nonnull parameter.
  188.     @Nullable @CheckResult @UiThread
  189.     private static Constructor<? extends Unbinder> findBindingConstructorForClass(Class<?> cls) {
  190. >     Constructor<? extends Unbinder> bindingCtor = BINDINGS.get(cls);
  191.       if (bindingCtor != null || BINDINGS.containsKey(cls)) {
  192.         if (debug) Log.d(TAG, "HIT: Cached in binding map.");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_BOUNDARY
  check ambiguous argument `cls` passed to nonnull parameter.
  189.     private static Constructor<? extends Unbinder> findBindingConstructorForClass(Class<?> cls) {
  190.       Constructor<? extends Unbinder> bindingCtor = BINDINGS.get(cls);
  191. >     if (bindingCtor != null || BINDINGS.containsKey(cls)) {
  192.         if (debug) Log.d(TAG, "HIT: Cached in binding map.");
  193.         return bindingCtor;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:212: warning: GRADUAL_BOUNDARY
  check ambiguous argument `cls` passed to nonnull parameter.
  210.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  211.       }
  212. >     BINDINGS.put(cls, bindingCtor);
  213.       return bindingCtor;
  214.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  204.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
  205.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  206. >     } catch (ClassNotFoundException e) {
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:209: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  209. >     } catch (NoSuchMethodException e) {
  210.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  211.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:195: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  193.         return bindingCtor;
  194.       }
  195. >     String clsName = cls.getName();
  196.       if (clsName.startsWith("android.") || clsName.startsWith("java.")
  197.           || clsName.startsWith("androidx.")) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:202: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  200.       }
  201.       try {
  202. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  203.         //noinspection unchecked
  204.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:207: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  205.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  206.       } catch (ClassNotFoundException e) {
  207. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  209.       } catch (NoSuchMethodException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:208: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  206.       } catch (ClassNotFoundException e) {
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208. >       bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  209.       } catch (NoSuchMethodException e) {
  210.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:199: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  197.           || clsName.startsWith("androidx.")) {
  198.         if (debug) Log.d(TAG, "MISS: Reached framework class. Abandoning search.");
  199. >       return null;
  200.       }
  201.       try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:206: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  204.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
  205.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  206. >     } catch (ClassNotFoundException e) {
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());

Summary of the reports

  GRADUAL_BOUNDARY: 9
     GRADUAL_CHECK: 5
    GRADUAL_STATIC: 3Found 55 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.internal.ImmutableList.views`.
  12.   
  13.     ImmutableList(T[] views) {
  14. >     this.views = views;
  15.     }
  16.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_BOUNDARY
  check ambiguous argument `i` passed to nonnull parameter.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(List,butterknife.Action[])`.
  15.         @NonNull Action<? super T>... actions) {
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17. >       for (Action<? super T> action : actions) {
  18.           action.apply(list.get(i), i);
  19.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:17: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `actions`.
  15.         @NonNull Action<? super T>... actions) {
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17. >       for (Action<? super T> action : actions) {
  18.           action.apply(list.get(i), i);
  19.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:18: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  16.       for (int i = 0, count = list.size(); i < count; i++) {
  17.         for (Action<? super T> action : actions) {
  18. >         action.apply(list.get(i), i);
  19.         }
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/DebouncingOnClickListener.java:17: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `v`.
  15.       if (enabled) {
  16.         enabled = false;
  17. >       v.post(ENABLE_AGAIN);
  18.         doClick(v);
  19.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:18: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ImmutableList.get(int)`.
  16.   
  17.     @Override public T get(int index) {
  18. >     return views[index];
  19.     }
  20.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:22: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int ImmutableList.size()`.
  20.   
  21.     @Override public int size() {
  22. >     return views.length;
  23.     }
  24.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:27: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(android.view.View[],butterknife.Action[])`.
  25.     @SafeVarargs public static <T extends View> void run(@NonNull T[] array,
  26.         @NonNull Action<? super T>... actions) {
  27. >     for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:28: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(android.view.View[],butterknife.Action[])`.
  26.         @NonNull Action<? super T>... actions) {
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28. >       for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);
  30.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:28: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `actions`.
  26.         @NonNull Action<? super T>... actions) {
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28. >       for (Action<? super T> action : actions) {
  29.           action.apply(array[i], i);
  30.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:29: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`,check dereference of ambiguous pointer `array`.
  27.       for (int i = 0, count = array.length; i < count; i++) {
  28.         for (Action<? super T> action : actions) {
  29. >         action.apply(array[i], i);
  30.         }
  31.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/ImmutableList.java:26: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ImmutableList.contains(Object)`.
  24.   
  25.     @Override public boolean contains(Object o) {
  26. >     for (T view : views) {
  27.         if (view == o) {
  28.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_BOUNDARY
  check ambiguous argument `i` passed to nonnull parameter.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:39: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  37.         @NonNull Action<? super T> action) {
  38.       for (int i = 0, count = list.size(); i < count; i++) {
  39. >       action.apply(list.get(i), i);
  40.       }
  41.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(android.view.View[],Action)`.
  44.     @UiThread
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46. >     for (int i = 0, count = array.length; i < count; i++) {
  47.         action.apply(array[i], i);
  48.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:47: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`,check dereference of ambiguous pointer `array`.
  45.     public static <T extends View> void run(@NonNull T[] array, @NonNull Action<? super T> action) {
  46.       for (int i = 0, count = array.length; i < count; i++) {
  47. >       action.apply(array[i], i);
  48.       }
  49.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  54.         @NonNull Action<? super T>... actions) {
  55.       for (Action<? super T> action : actions) {
  56. >       action.apply(view, 0);
  57.       }
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:55: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.run(View,butterknife.Action[])`.
  53.     @SafeVarargs public static <T extends View> void run(@NonNull T view,
  54.         @NonNull Action<? super T>... actions) {
  55. >     for (Action<? super T> action : actions) {
  56.         action.apply(view, 0);
  57.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:55: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `actions`.
  53.     @SafeVarargs public static <T extends View> void run(@NonNull T view,
  54.         @NonNull Action<? super T>... actions) {
  55. >     for (Action<? super T> action : actions) {
  56.         action.apply(view, 0);
  57.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:56: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `action`.
  54.         @NonNull Action<? super T>... actions) {
  55.       for (Action<? super T> action : actions) {
  56. >       action.apply(view, 0);
  57.       }
  58.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:67: warning: GRADUAL_BOUNDARY
  check ambiguous argument `views` passed to nonnull parameter.
  65.       //noinspection unchecked
  66.       T[] newViews = (T[]) Array.newInstance(views.getClass().getComponentType(), end);
  67. >     System.arraycopy(views, 0, newViews, 0, end);
  68.       return newViews;
  69.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:67: warning: GRADUAL_BOUNDARY
  check ambiguous argument `views` passed to nonnull parameter,check ambiguous argument `end` passed to nonnull parameter.
  65.       //noinspection unchecked
  66.       T[] newViews = (T[]) Array.newInstance(views.getClass().getComponentType(), end);
  67. >     System.arraycopy(views, 0, newViews, 0, end);
  68.       return newViews;
  69.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:55: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] Utils.arrayFilteringNull(java.lang.Object[])`.
  53.     public static <T> T[] arrayFilteringNull(T... views) {
  54.       int end = 0;
  55. >     int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57.         T view = views[i];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:57: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] Utils.arrayFilteringNull(java.lang.Object[])`.
  55.       int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57. >       T view = views[i];
  58.         if (view != null) {
  59.           views[end++] = view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:63: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] Utils.arrayFilteringNull(java.lang.Object[])`.
  61.       }
  62.       if (end == length) {
  63. >       return views;
  64.       }
  65.       //noinspection unchecked

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:57: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `views`.
  55.       int length = views.length;
  56.       for (int i = 0; i < length; i++) {
  57. >       T view = views[i];
  58.         if (view != null) {
  59.           views[end++] = view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:59: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `views`.
  57.         T view = views[i];
  58.         if (view != null) {
  59. >         views[end++] = view;
  60.         }
  61.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:66: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  64.       }
  65.       //noinspection unchecked
  66. >     T[] newViews = (T[]) Array.newInstance(views.getClass().getComponentType(), end);
  67.       System.arraycopy(views, 0, newViews, 0, end);
  68.       return newViews;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:71: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`.
  69.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  70.       for (int i = 0, count = list.size(); i < count; i++) {
  71. >       setter.set(list.get(i), value, i);
  72.       }
  73.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous argument `*(array)[_]` passed to nonnull parameter,check ambiguous argument `value` passed to nonnull parameter,check ambiguous argument `i` passed to nonnull parameter.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:79: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.set(android.view.View[],Setter,Object)`.
  77.     public static <T extends View, V> void set(@NonNull T[] array,
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79. >     for (int i = 0, count = array.length; i < count; i++) {
  80.         setter.set(array[i], value, i);
  81.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:80: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`,check dereference of ambiguous pointer `array`.
  78.         @NonNull Setter<? super T, V> setter, @Nullable V value) {
  79.       for (int i = 0, count = array.length; i < count; i++) {
  80. >       setter.set(array[i], value, i);
  81.       }
  82.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:99: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `list`.
  97.       //noinspection ForLoopReplaceableByForEach
  98.       for (int i = 0, count = list.size(); i < count; i++) {
  99. >       setter.set(list.get(i), value);
  100.       }
  101.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:99: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`.
  97.       //noinspection ForLoopReplaceableByForEach
  98.       for (int i = 0, count = list.size(); i < count; i++) {
  99. >       setter.set(list.get(i), value);
  100.       }
  101.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:107: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object Utils.castView(View,int,String,Class)`.
  105.       try {
  106.         return cls.cast(view);
  107. >     } catch (ClassCastException e) {
  108.         String name = getResourceEntryName(view, id);
  109.         throw new IllegalStateException("View '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:107: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Object Utils.castView(View,int,String,Class)`.
  105.       try {
  106.         return cls.cast(view);
  107. >     } catch (ClassCastException e) {
  108.         String name = getResourceEntryName(view, id);
  109.         throw new IllegalStateException("View '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:110: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ViewCollections.set(android.view.View[],Property,Object)`.
  108.         @NonNull Property<? super T, V> setter, @Nullable V value) {
  109.       //noinspection ForLoopReplaceableByForEach
  110. >     for (int i = 0, count = array.length; i < count; i++) {
  111.         setter.set(array[i], value);
  112.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/ViewCollections.java:111: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `setter`,check dereference of ambiguous pointer `array`.
  109.       //noinspection ForLoopReplaceableByForEach
  110.       for (int i = 0, count = array.length; i < count; i++) {
  111. >       setter.set(array[i], value);
  112.       }
  113.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:124: warning: GRADUAL_BOUNDARY
  check ambiguous argument `from` passed to nonnull parameter.
  122.         return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124. >       throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)
  126.             + " of method '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:124: warning: GRADUAL_BOUNDARY
  check ambiguous argument `to` passed to nonnull parameter.
  122.         return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124. >       throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)
  126.             + " of method '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:122: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  120.         Class<T> cls) {
  121.       try {
  122. >       return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:123: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object Utils.castParam(Object,String,int,String,int,Class)`.
  121.       try {
  122.         return cls.cast(value);
  123. >     } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:122: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  120.         Class<T> cls) {
  121.       try {
  122. >       return cls.cast(value);
  123.       } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/main/java/butterknife/internal/Utils.java:123: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Object Utils.castParam(Object,String,int,String,int,Class)`.
  121.       try {
  122.         return cls.cast(value);
  123. >     } catch (ClassCastException e) {
  124.         throw new IllegalStateException("Parameter #"
  125.             + (fromPos + 1)

Summary of the reports

  GRADUAL_BOUNDARY: 31
     GRADUAL_CHECK: 22
    GRADUAL_STATIC: 2Found 17 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:88: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ButterKnife.debug`.
  86.     /** Control whether debug logging is enabled. */
  87.     public static void setDebug(boolean debug) {
  88. >     ButterKnife.debug = debug;
  89.     }
  90.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:172: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  170.       try {
  171.         return constructor.newInstance(target, source);
  172. >     } catch (IllegalAccessException e) {
  173.         throw new RuntimeException("Unable to invoke " + constructor, e);
  174.       } catch (InstantiationException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  172.       } catch (IllegalAccessException e) {
  173.         throw new RuntimeException("Unable to invoke " + constructor, e);
  174. >     } catch (InstantiationException e) {
  175.         throw new RuntimeException("Unable to invoke " + constructor, e);
  176.       } catch (InvocationTargetException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:176: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  174.       } catch (InstantiationException e) {
  175.         throw new RuntimeException("Unable to invoke " + constructor, e);
  176. >     } catch (InvocationTargetException e) {
  177.         Throwable cause = e.getCause();
  178.         if (cause instanceof RuntimeException) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:177: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `e`.
  175.         throw new RuntimeException("Unable to invoke " + constructor, e);
  176.       } catch (InvocationTargetException e) {
  177. >       Throwable cause = e.getCause();
  178.         if (cause instanceof RuntimeException) {
  179.           throw (RuntimeException) cause;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:172: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  170.       try {
  171.         return constructor.newInstance(target, source);
  172. >     } catch (IllegalAccessException e) {
  173.         throw new RuntimeException("Unable to invoke " + constructor, e);
  174.       } catch (InstantiationException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:190: warning: GRADUAL_BOUNDARY
  check ambiguous argument `cls` passed to nonnull parameter.
  188.     @Nullable @CheckResult @UiThread
  189.     private static Constructor<? extends Unbinder> findBindingConstructorForClass(Class<?> cls) {
  190. >     Constructor<? extends Unbinder> bindingCtor = BINDINGS.get(cls);
  191.       if (bindingCtor != null || BINDINGS.containsKey(cls)) {
  192.         if (debug) Log.d(TAG, "HIT: Cached in binding map.");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_BOUNDARY
  check ambiguous argument `cls` passed to nonnull parameter.
  189.     private static Constructor<? extends Unbinder> findBindingConstructorForClass(Class<?> cls) {
  190.       Constructor<? extends Unbinder> bindingCtor = BINDINGS.get(cls);
  191. >     if (bindingCtor != null || BINDINGS.containsKey(cls)) {
  192.         if (debug) Log.d(TAG, "HIT: Cached in binding map.");
  193.         return bindingCtor;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:212: warning: GRADUAL_BOUNDARY
  check ambiguous argument `cls` passed to nonnull parameter.
  210.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  211.       }
  212. >     BINDINGS.put(cls, bindingCtor);
  213.       return bindingCtor;
  214.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:206: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  204.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
  205.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  206. >     } catch (ClassNotFoundException e) {
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:209: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  209. >     } catch (NoSuchMethodException e) {
  210.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);
  211.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:195: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  193.         return bindingCtor;
  194.       }
  195. >     String clsName = cls.getName();
  196.       if (clsName.startsWith("android.") || clsName.startsWith("java.")
  197.           || clsName.startsWith("androidx.")) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:202: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  200.       }
  201.       try {
  202. >       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
  203.         //noinspection unchecked
  204.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:207: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  205.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  206.       } catch (ClassNotFoundException e) {
  207. >       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  209.       } catch (NoSuchMethodException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:208: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  206.       } catch (ClassNotFoundException e) {
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208. >       bindingCtor = findBindingConstructorForClass(cls.getSuperclass());
  209.       } catch (NoSuchMethodException e) {
  210.         throw new RuntimeException("Unable to find binding constructor for " + clsName, e);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:199: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  197.           || clsName.startsWith("androidx.")) {
  198.         if (debug) Log.d(TAG, "MISS: Reached framework class. Abandoning search.");
  199. >       return null;
  200.       }
  201.       try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife/src/main/java/butterknife/ButterKnife.java:206: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Constructor ButterKnife.findBindingConstructorForClass(Class)`.
  204.         bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
  205.         if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
  206. >     } catch (ClassNotFoundException e) {
  207.         if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
  208.         bindingCtor = findBindingConstructorForClass(cls.getSuperclass());

Summary of the reports

  GRADUAL_BOUNDARY: 9
     GRADUAL_CHECK: 5
    GRADUAL_STATIC: 3Found 505 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:12: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldAnimationBinding.id`.
  10.   
  11.     FieldAnimationBinding(Id id, String name) {
  12. >     this.id = id;
  13.       this.name = name;
  14.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldAnimationBinding.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldAnimationBinding.name`.
  11.     FieldAnimationBinding(Id id, String name) {
  12.       this.id = id;
  13. >     this.name = name;
  14.     }
  15.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldViewBinding.name`.
  11.   
  12.     FieldViewBinding(String name, TypeName type, boolean required) {
  13. >     this.name = name;
  14.       this.type = type;
  15.       this.required = required;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:15: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldViewBinding.required`.
  13.       this.name = name;
  14.       this.type = type;
  15. >     this.required = required;
  16.     }
  17.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldViewBinding.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldViewBinding.type`.
  12.     FieldViewBinding(String name, TypeName type, boolean required) {
  13.       this.name = name;
  14. >     this.type = type;
  15.       this.required = required;
  16.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.MethodViewBinding.name`.
  11.   
  12.     MethodViewBinding(String name, List<Parameter> parameters, boolean required) {
  13. >     this.name = name;
  14.       this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  15.       this.required = required;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/MethodViewBinding.java:15: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.MethodViewBinding.required`.
  13.       this.name = name;
  14.       this.parameters = Collections.unmodifiableList(new ArrayList<>(parameters));
  15. >     this.required = required;
  16.     }
  17.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.Parameter.listenerPosition`.
  11.   
  12.     Parameter(int listenerPosition, TypeName type) {
  13. >     this.listenerPosition = listenerPosition;
  14.       this.type = type;
  15.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/Parameter.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.Parameter.type`.
  12.     Parameter(int listenerPosition, TypeName type) {
  13.       this.listenerPosition = listenerPosition;
  14. >     this.type = type;
  15.     }
  16.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:16: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  14.       BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
  15.       BOOL("getBoolean"),
  16. >     COLOR_LEGACY(new ResourceMethod(BindingSet.CONTEXT_COMPAT_LEGACY, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:18: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  16.       COLOR_LEGACY(new ResourceMethod(BindingSet.CONTEXT_COMPAT_LEGACY, "getColor", false, 1),
  17.           new ResourceMethod(null, "getColor", false, 23)),
  18. >     COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  19.           new ResourceMethod(null, "getColor", false, 23)),
  20.       COLOR_STATE_LIST_LEGACY(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:20: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  18.       COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
  19.           new ResourceMethod(null, "getColor", false, 23)),
  20. >     COLOR_STATE_LIST_LEGACY(
  21.           new ResourceMethod(BindingSet.CONTEXT_COMPAT_LEGACY, "getColorStateList", false, 1),
  22.           new ResourceMethod(null, "getColorStateList", false, 23)),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:23: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  21.           new ResourceMethod(BindingSet.CONTEXT_COMPAT_LEGACY, "getColorStateList", false, 1),
  22.           new ResourceMethod(null, "getColorStateList", false, 23)),
  23. >     COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,
  24.           "getColorStateList", false, 1),
  25.           new ResourceMethod(null, "getColorStateList", false, 23)),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldDrawableBinding.id`.
  15.   
  16.     FieldDrawableBinding(Id id, String name, Id tintAttributeId, boolean useLegacyTypes) {
  17. >     this.id = id;
  18.       this.name = name;
  19.       this.tintAttributeId = tintAttributeId;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:18: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldDrawableBinding.name`.
  16.     FieldDrawableBinding(Id id, String name, Id tintAttributeId, boolean useLegacyTypes) {
  17.       this.id = id;
  18. >     this.name = name;
  19.       this.tintAttributeId = tintAttributeId;
  20.       this.useLegacyTypes = useLegacyTypes;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:19: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldDrawableBinding.tintAttributeId`.
  17.       this.id = id;
  18.       this.name = name;
  19. >     this.tintAttributeId = tintAttributeId;
  20.       this.useLegacyTypes = useLegacyTypes;
  21.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java:20: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldDrawableBinding.useLegacyTypes`.
  18.       this.name = name;
  19.       this.tintAttributeId = tintAttributeId;
  20. >     this.useLegacyTypes = useLegacyTypes;
  21.     }
  22.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:19: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldCollectionViewBinding$Kind.factoryName`.
  17.   
  18.       Kind(String factoryName) {
  19. >       this.factoryName = factoryName;
  20.       }
  21.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/Id.java:20: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  18.   
  19.     Id(int value) {
  20. >     this(value, null);
  21.     }
  22.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/Id.java:20: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  18.   
  19.     Id(int value) {
  20. >     this(value, null);
  21.     }
  22.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:24: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldTypefaceBinding$TypefaceStyles.value`.
  22.   
  23.       TypefaceStyles(int value) {
  24. >       this.value = value;
  25.       }
  26.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:28: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `FieldTypefaceBinding$TypefaceStyles FieldTypefaceBinding$TypefaceStyles.fromValue(int)`.
  26.   
  27.       @Nullable static TypefaceStyles fromValue(int value) {
  28. >       for (TypefaceStyles style : values()) {
  29.           if (style.value == value) {
  30.             return style;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:30: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `FieldTypefaceBinding$TypefaceStyles FieldTypefaceBinding$TypefaceStyles.fromValue(int)`.
  28.         for (TypefaceStyles style : values()) {
  29.           if (style.value == value) {
  30. >           return style;
  31.           }
  32.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:28: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$0`.
  26.   
  27.       @Nullable static TypefaceStyles fromValue(int value) {
  28. >       for (TypefaceStyles style : values()) {
  29.           if (style.value == value) {
  30.             return style;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:29: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `style`.
  27.       @Nullable static TypefaceStyles fromValue(int value) {
  28.         for (TypefaceStyles style : values()) {
  29. >         if (style.value == value) {
  30.             return style;
  31.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:33: error: GRADUAL_STATIC
  possibly-null return in nonnull method `FieldTypefaceBinding$TypefaceStyles FieldTypefaceBinding$TypefaceStyles.fromValue(int)`.
  31.           }
  32.         }
  33. >       return null;
  34.       }
  35.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:34: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldCollectionViewBinding.ids`.
  32.       this.type = type;
  33.       this.kind = kind;
  34. >     this.ids = ids;
  35.       this.required = required;
  36.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:33: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldCollectionViewBinding.kind`.
  31.       this.name = name;
  32.       this.type = type;
  33. >     this.kind = kind;
  34.       this.ids = ids;
  35.       this.required = required;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:31: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldCollectionViewBinding.name`.
  29.     FieldCollectionViewBinding(String name, TypeName type, Kind kind, List<Id> ids,
  30.         boolean required) {
  31. >     this.name = name;
  32.       this.type = type;
  33.       this.kind = kind;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:35: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldCollectionViewBinding.required`.
  33.       this.kind = kind;
  34.       this.ids = ids;
  35. >     this.required = required;
  36.     }
  37.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:32: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldCollectionViewBinding.type`.
  30.         boolean required) {
  31.       this.name = name;
  32. >     this.type = type;
  33.       this.kind = kind;
  34.       this.ids = ids;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:51: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List ViewBinding.getRequiredBindings()`.
  49.         }
  50.       }
  51. >     return requiredBindings;
  52.     }
  53.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:42: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$20`.
  40.         requiredBindings.add(fieldBinding);
  41.       }
  42. >     for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:43: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$35`.
  41.       }
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43. >       for (Set<MethodViewBinding> set : methodBinding.values()) {
  44.           for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:44: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$47`.
  42.       for (Map<ListenerMethod, Set<MethodViewBinding>> methodBinding : methodBindings.values()) {
  43.         for (Set<MethodViewBinding> set : methodBinding.values()) {
  44. >         for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {
  46.               requiredBindings.add(binding);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:46: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `requiredBindings`.
  44.           for (MethodViewBinding binding : set) {
  45.             if (binding.isRequired()) {
  46. >             requiredBindings.add(binding);
  47.             }
  48.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:58: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `CodeBlock FieldCollectionViewBinding.render(boolean)`.
  56.         } else {
  57.           builder.add("$T.find", UTILS);
  58. >         builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {
  60.             builder.add("AsType");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:58: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `$T1_216`.
  56.         } else {
  57.           builder.add("$T.find", UTILS);
  58. >         builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {
  60.             builder.add("AsType");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:43: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  41.       for (int i = 0; i < ids.size(); i++) {
  42.         if (i > 0) {
  43. >         builder.add(", ");
  44.         }
  45.         builder.add("\n");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:45: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  43.           builder.add(", ");
  44.         }
  45. >       builder.add("\n");
  46.   
  47.         Id id = ids.get(i);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:51: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  49.         if (!debuggable) {
  50.           if (requiresCast) {
  51. >           builder.add("($T) ", type);
  52.           }
  53.           builder.add("source.findViewById($L)", id.code);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:53: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  51.             builder.add("($T) ", type);
  52.           }
  53. >         builder.add("source.findViewById($L)", id.code);
  54.         } else if (!requiresCast && !required) {
  55.           builder.add("source.findViewById($L)", id.code);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:55: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  53.           builder.add("source.findViewById($L)", id.code);
  54.         } else if (!requiresCast && !required) {
  55. >         builder.add("source.findViewById($L)", id.code);
  56.         } else {
  57.           builder.add("$T.find", UTILS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:57: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  55.           builder.add("source.findViewById($L)", id.code);
  56.         } else {
  57. >         builder.add("$T.find", UTILS);
  58.           builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:60: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  58.           builder.add(required ? "RequiredView" : "OptionalView");
  59.           if (requiresCast) {
  60. >           builder.add("AsType");
  61.           }
  62.           builder.add("(source, $L, \"field '$L'\"", id.code, name);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:62: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  60.             builder.add("AsType");
  61.           }
  62. >         builder.add("(source, $L, \"field '$L'\"", id.code, name);
  63.           if (requiresCast) {
  64.             TypeName rawType = type;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:68: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  66.               rawType = ((ParameterizedTypeName) rawType).rawType;
  67.             }
  68. >           builder.add(", $T.class", rawType);
  69.           }
  70.           builder.add(")");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:70: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  68.             builder.add(", $T.class", rawType);
  69.           }
  70. >         builder.add(")");
  71.         }
  72.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldCollectionViewBinding.java:73: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  71.         }
  72.       }
  73. >     return builder.add(")").build();
  74.     }
  75.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/Id.java:41: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `o`.
  39.   
  40.     @Override public boolean equals(Object o) {
  41. >     return o instanceof Id && value == ((Id) o).value;
  42.     }
  43.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:42: warning: GRADUAL_BOUNDARY
  check ambiguous argument `x0` passed to nonnull parameter,check ambiguous argument `x1` passed to nonnull parameter,check ambiguous argument `x2` passed to nonnull parameter,check ambiguous argument `x3` passed to nonnull parameter,check ambiguous argument `x4` passed to nonnull parameter,check ambiguous argument `x5` passed to nonnull parameter,check ambiguous argument `x6` passed to nonnull parameter,check ambiguous argument `x7` passed to nonnull parameter,check ambiguous argument `x8` passed to nonnull parameter,check ambiguous argument `x9` passed to nonnull parameter.
  40.   
  41.   /** A set of all the bindings requested by a single type. */
  42. > final class BindingSet {
  43.     static final ClassName UTILS = ClassName.get("butterknife.internal", "Utils");
  44.     private static final ClassName VIEW = ClassName.get("android.view", "View");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:43: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldTypefaceBinding.id`.
  41.   
  42.     FieldTypefaceBinding(Id id, String name, TypefaceStyles style, boolean useLegacyTypes) {
  43. >     this.id = id;
  44.       this.name = name;
  45.       this.style = style;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:44: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldTypefaceBinding.name`.
  42.     FieldTypefaceBinding(Id id, String name, TypefaceStyles style, boolean useLegacyTypes) {
  43.       this.id = id;
  44. >     this.name = name;
  45.       this.style = style;
  46.       this.useLegacyTypes = useLegacyTypes;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:45: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldTypefaceBinding.style`.
  43.       this.id = id;
  44.       this.name = name;
  45. >     this.style = style;
  46.       this.useLegacyTypes = useLegacyTypes;
  47.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java:46: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldTypefaceBinding.useLegacyTypes`.
  44.       this.name = name;
  45.       this.style = style;
  46. >     this.useLegacyTypes = useLegacyTypes;
  47.     }
  48.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:47: warning: GRADUAL_BOUNDARY
  check ambiguous argument `methodName` passed to nonnull parameter.
  45.   
  46.       Type(String methodName) {
  47. >       methods = ImmutableList.of(new ResourceMethod(null, methodName, true, 1));
  48.       }
  49.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:47: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  45.   
  46.       Type(String methodName) {
  47. >       methods = ImmutableList.of(new ResourceMethod(null, methodName, true, 1));
  48.       }
  49.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:51: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  49.   
  50.       ResourceMethod methodForSdk(int sdk) {
  51. >       for (ResourceMethod method : methods) {
  52.           if (method.sdk <= sdk) {
  53.             return method;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:76: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `other`.
  74.   
  75.       @Override public int compareTo(ResourceMethod other) {
  76. >       return Integer.compare(sdk, other.sdk);
  77.       }
  78.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:80: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.ViewBinding$Builder.id`.
  78.   
  79.       Builder(Id id) {
  80. >       this.id = id;
  81.       }
  82.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:85: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldResourceBinding.id`.
  83.   
  84.     FieldResourceBinding(Id id, String name, Type type) {
  85. >     this.id = id;
  86.       this.name = name;
  87.       this.type = type;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:86: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldResourceBinding.name`.
  84.     FieldResourceBinding(Id id, String name, Type type) {
  85.       this.id = id;
  86. >     this.name = name;
  87.       this.type = type;
  88.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java:87: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.FieldResourceBinding.type`.
  85.       this.id = id;
  86.       this.name = name;
  87. >     this.type = type;
  88.     }
  89.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:91: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ViewBinding$Builder.addMethodBinding(ListenerClass,ListenerMethod,MethodViewBinding)`.
  89.           MethodViewBinding binding) {
  90.         Map<ListenerMethod, Set<MethodViewBinding>> methods = methodBindings.get(listener);
  91. >       Set<MethodViewBinding> set = null;
  92.         if (methods == null) {
  93.           methods = new LinkedHashMap<>();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ViewBinding.java:109: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.ViewBinding$Builder.fieldBinding`.
  107.           throw new AssertionError();
  108.         }
  109. >       this.fieldBinding = fieldBinding;
  110.       }
  111.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:137: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.init(ProcessingEnvironment)`.
  135.         try {
  136.           this.sdk = Integer.parseInt(sdk);
  137. >       } catch (NumberFormatException e) {
  138.           env.getMessager()
  139.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:133: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  131.       super.init(env);
  132.   
  133. >     String sdk = env.getOptions().get(OPTION_SDK_INT);
  134.       if (sdk != null) {
  135.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:138: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  136.           this.sdk = Integer.parseInt(sdk);
  137.         } catch (NumberFormatException e) {
  138. >         env.getMessager()
  139.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"
  140.                   + sdk

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:145: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  143.       }
  144.   
  145. >     debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  146.       useLegacyTypes = !hasAndroidX(env.getElementUtils());
  147.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:146: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  144.   
  145.       debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
  146. >     useLegacyTypes = !hasAndroidX(env.getElementUtils());
  147.   
  148.       typeUtils = env.getTypeUtils();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:148: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  146.       useLegacyTypes = !hasAndroidX(env.getElementUtils());
  147.   
  148. >     typeUtils = env.getTypeUtils();
  149.       filer = env.getFiler();
  150.       try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:149: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  147.   
  148.       typeUtils = env.getTypeUtils();
  149. >     filer = env.getFiler();
  150.       try {
  151.         trees = Trees.instance(processingEnv);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:137: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor.init(ProcessingEnvironment)`.
  135.         try {
  136.           this.sdk = Integer.parseInt(sdk);
  137. >       } catch (NumberFormatException e) {
  138.           env.getMessager()
  139.               .printMessage(Kind.WARNING, "Unable to parse supplied minSdk option '"

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:152: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor.init(ProcessingEnvironment)`.
  150.       try {
  151.         trees = Trees.instance(processingEnv);
  152. >     } catch (IllegalArgumentException ignored) {
  153.       }
  154.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:165: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Set ButterKnifeProcessor.getSupportedAnnotationTypes()`.
  163.         types.add(annotation.getCanonicalName());
  164.       }
  165. >     return types;
  166.     }
  167.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:162: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$6`.
  160.     @Override public Set<String> getSupportedAnnotationTypes() {
  161.       Set<String> types = new LinkedHashSet<>();
  162. >     for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  163.         types.add(annotation.getCanonicalName());
  164.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:163: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `types`.
  161.       Set<String> types = new LinkedHashSet<>();
  162.       for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
  163. >       types.add(annotation.getCanonicalName());
  164.       }
  165.       return types;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:199: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ButterKnifeProcessor.process(Set,RoundEnvironment)`.
  197.         try {
  198.           javaFile.writeTo(filer);
  199. >       } catch (IOException e) {
  200.           error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
  201.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:200: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `e`.
  198.           javaFile.writeTo(filer);
  199.         } catch (IOException e) {
  200. >         error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
  201.         }
  202.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:192: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$8`.
  190.       Map<TypeElement, BindingSet> bindingMap = findAndParseTargets(env);
  191.   
  192. >     for (Map.Entry<TypeElement, BindingSet> entry : bindingMap.entrySet()) {
  193.         TypeElement typeElement = entry.getKey();
  194.         BindingSet binding = entry.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:199: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean ButterKnifeProcessor.process(Set,RoundEnvironment)`.
  197.         try {
  198.           javaFile.writeTo(filer);
  199. >       } catch (IOException e) {
  200.           error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
  201.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:244: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `constructor`.
  242.         }
  243.         for (FieldCollectionViewBinding binding : collectionBindings) {
  244. >         constructor.addStatement("$L", binding.render(debuggable));
  245.         }
  246.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:248: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `constructor`.
  246.   
  247.         if (!resourceBindings.isEmpty()) {
  248. >         constructor.addCode("\n");
  249.         }
  250.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:254: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `constructor`.
  252.       if (!resourceBindings.isEmpty()) {
  253.         if (constructorNeedsView()) {
  254. >         constructor.addStatement("$T context = source.getContext()", CONTEXT);
  255.         }
  256.         if (hasResourceBindingsNeedingResource(sdk)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:257: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `constructor`.
  255.         }
  256.         if (hasResourceBindingsNeedingResource(sdk)) {
  257. >         constructor.addStatement("$T res = context.getResources()", RESOURCES);
  258.         }
  259.         for (ResourceBinding binding : resourceBindings) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:260: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `constructor`.
  258.         }
  259.         for (ResourceBinding binding : resourceBindings) {
  260. >         constructor.addStatement("$L", binding.render(sdk));
  261.         }
  262.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:264: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `constructor`.
  262.       }
  263.   
  264. >     return constructor.build();
  265.     }
  266.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:240: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$147`.
  238.           constructor.addStatement("$T view", VIEW);
  239.         }
  240. >       for (ViewBinding binding : viewBindings) {
  241.           addViewBinding(constructor, binding, debuggable, useLegacyTypes);
  242.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:243: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$166`.
  241.           addViewBinding(constructor, binding, debuggable, useLegacyTypes);
  242.         }
  243. >       for (FieldCollectionViewBinding binding : collectionBindings) {
  244.           constructor.addStatement("$L", binding.render(debuggable));
  245.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:259: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$226`.
  257.           constructor.addStatement("$T res = context.getResources()", RESOURCES);
  258.         }
  259. >       for (ResourceBinding binding : resourceBindings) {
  260.           constructor.addStatement("$L", binding.render(sdk));
  261.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:216: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  214.         try {
  215.           parseResourceAnimation(element, builderMap, erasedTargetNames);
  216. >       } catch (Exception e) {
  217.           logParsingError(element, BindAnim.class, e);
  218.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:226: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  224.         try {
  225.           parseResourceArray(element, builderMap, erasedTargetNames);
  226. >       } catch (Exception e) {
  227.           logParsingError(element, BindArray.class, e);
  228.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:236: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  234.         try {
  235.           parseResourceBitmap(element, builderMap, erasedTargetNames);
  236. >       } catch (Exception e) {
  237.           logParsingError(element, BindBitmap.class, e);
  238.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:246: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  244.         try {
  245.           parseResourceBool(element, builderMap, erasedTargetNames);
  246. >       } catch (Exception e) {
  247.           logParsingError(element, BindBool.class, e);
  248.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:256: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  254.         try {
  255.           parseResourceColor(element, builderMap, erasedTargetNames);
  256. >       } catch (Exception e) {
  257.           logParsingError(element, BindColor.class, e);
  258.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:266: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  264.         try {
  265.           parseResourceDimen(element, builderMap, erasedTargetNames);
  266. >       } catch (Exception e) {
  267.           logParsingError(element, BindDimen.class, e);
  268.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:276: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  274.         try {
  275.           parseResourceDrawable(element, builderMap, erasedTargetNames);
  276. >       } catch (Exception e) {
  277.           logParsingError(element, BindDrawable.class, e);
  278.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:286: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  284.         try {
  285.           parseResourceFloat(element, builderMap, erasedTargetNames);
  286. >       } catch (Exception e) {
  287.           logParsingError(element, BindFloat.class, e);
  288.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:296: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  294.         try {
  295.           parseResourceFont(element, builderMap, erasedTargetNames);
  296. >       } catch (Exception e) {
  297.           logParsingError(element, BindFont.class, e);
  298.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:306: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  304.         try {
  305.           parseResourceInt(element, builderMap, erasedTargetNames);
  306. >       } catch (Exception e) {
  307.           logParsingError(element, BindInt.class, e);
  308.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:316: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  314.         try {
  315.           parseResourceString(element, builderMap, erasedTargetNames);
  316. >       } catch (Exception e) {
  317.           logParsingError(element, BindString.class, e);
  318.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:327: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  325.         try {
  326.           parseBindView(element, builderMap, erasedTargetNames);
  327. >       } catch (Exception e) {
  328.           logParsingError(element, BindView.class, e);
  329.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:338: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  336.         try {
  337.           parseBindViews(element, builderMap, erasedTargetNames);
  338. >       } catch (Exception e) {
  339.           logParsingError(element, BindViews.class, e);
  340.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:374: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  372.       }
  373.   
  374. >     return bindingMap;
  375.     }
  376.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:361: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindingMap`.
  359.         TypeElement parentType = findParentType(type, erasedTargetNames);
  360.         if (parentType == null) {
  361. >         bindingMap.put(type, builder.build());
  362.         } else {
  363.           BindingSet parentBinding = bindingMap.get(parentType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:363: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindingMap`.
  361.           bindingMap.put(type, builder.build());
  362.         } else {
  363. >         BindingSet parentBinding = bindingMap.get(parentType);
  364.           if (parentBinding != null) {
  365.             builder.setParent(parentBinding);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:366: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindingMap`.
  364.           if (parentBinding != null) {
  365.             builder.setParent(parentBinding);
  366. >           bindingMap.put(type, builder.build());
  367.           } else {
  368.             // Has a superclass binding but we haven't built it yet. Re-enqueue for later.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:351: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builderMap`.
  349.       // which starts at the roots (superclasses) and walks to the leafs (subclasses).
  350.       Deque<Map.Entry<TypeElement, BindingSet.Builder>> entries =
  351. >         new ArrayDeque<>(builderMap.entrySet());
  352.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  353.       while (!entries.isEmpty()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:353: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `entries`.
  351.           new ArrayDeque<>(builderMap.entrySet());
  352.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  353. >     while (!entries.isEmpty()) {
  354.         Map.Entry<TypeElement, BindingSet.Builder> entry = entries.removeFirst();
  355.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:354: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `entries`.
  352.       Map<TypeElement, BindingSet> bindingMap = new LinkedHashMap<>();
  353.       while (!entries.isEmpty()) {
  354. >       Map.Entry<TypeElement, BindingSet.Builder> entry = entries.removeFirst();
  355.   
  356.         TypeElement type = entry.getKey();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:369: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `entries`.
  367.           } else {
  368.             // Has a superclass binding but we haven't built it yet. Re-enqueue for later.
  369. >           entries.addLast(entry);
  370.           }
  371.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:212: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  210.   
  211.       // Process each @BindAnim element.
  212. >     for (Element element : env.getElementsAnnotatedWith(BindAnim.class)) {
  213.         if (!SuperficialValidation.validateElement(element)) continue;
  214.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:222: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  220.   
  221.       // Process each @BindArray element.
  222. >     for (Element element : env.getElementsAnnotatedWith(BindArray.class)) {
  223.         if (!SuperficialValidation.validateElement(element)) continue;
  224.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:232: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  230.   
  231.       // Process each @BindBitmap element.
  232. >     for (Element element : env.getElementsAnnotatedWith(BindBitmap.class)) {
  233.         if (!SuperficialValidation.validateElement(element)) continue;
  234.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:242: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  240.   
  241.       // Process each @BindBool element.
  242. >     for (Element element : env.getElementsAnnotatedWith(BindBool.class)) {
  243.         if (!SuperficialValidation.validateElement(element)) continue;
  244.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:252: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  250.   
  251.       // Process each @BindColor element.
  252. >     for (Element element : env.getElementsAnnotatedWith(BindColor.class)) {
  253.         if (!SuperficialValidation.validateElement(element)) continue;
  254.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:262: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  260.   
  261.       // Process each @BindDimen element.
  262. >     for (Element element : env.getElementsAnnotatedWith(BindDimen.class)) {
  263.         if (!SuperficialValidation.validateElement(element)) continue;
  264.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:272: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  270.   
  271.       // Process each @BindDrawable element.
  272. >     for (Element element : env.getElementsAnnotatedWith(BindDrawable.class)) {
  273.         if (!SuperficialValidation.validateElement(element)) continue;
  274.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:282: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  280.   
  281.       // Process each @BindFloat element.
  282. >     for (Element element : env.getElementsAnnotatedWith(BindFloat.class)) {
  283.         if (!SuperficialValidation.validateElement(element)) continue;
  284.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:292: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  290.   
  291.       // Process each @BindFont element.
  292. >     for (Element element : env.getElementsAnnotatedWith(BindFont.class)) {
  293.         if (!SuperficialValidation.validateElement(element)) continue;
  294.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:302: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  300.   
  301.       // Process each @BindInt element.
  302. >     for (Element element : env.getElementsAnnotatedWith(BindInt.class)) {
  303.         if (!SuperficialValidation.validateElement(element)) continue;
  304.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:312: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  310.   
  311.       // Process each @BindString element.
  312. >     for (Element element : env.getElementsAnnotatedWith(BindString.class)) {
  313.         if (!SuperficialValidation.validateElement(element)) continue;
  314.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:322: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  320.   
  321.       // Process each @BindView element.
  322. >     for (Element element : env.getElementsAnnotatedWith(BindView.class)) {
  323.         // we don't SuperficialValidation.validateElement(element)
  324.         // so that an unresolved View type can be generated by later processing rounds

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:333: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  331.   
  332.       // Process each @BindViews element.
  333. >     for (Element element : env.getElementsAnnotatedWith(BindViews.class)) {
  334.         // we don't SuperficialValidation.validateElement(element)
  335.         // so that an unresolved View type can be generated by later processing rounds

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:252: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$121`.
  250.   
  251.       // Process each @BindColor element.
  252. >     for (Element element : env.getElementsAnnotatedWith(BindColor.class)) {
  253.         if (!SuperficialValidation.validateElement(element)) continue;
  254.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:262: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$149`.
  260.   
  261.       // Process each @BindDimen element.
  262. >     for (Element element : env.getElementsAnnotatedWith(BindDimen.class)) {
  263.         if (!SuperficialValidation.validateElement(element)) continue;
  264.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:272: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$177`.
  270.   
  271.       // Process each @BindDrawable element.
  272. >     for (Element element : env.getElementsAnnotatedWith(BindDrawable.class)) {
  273.         if (!SuperficialValidation.validateElement(element)) continue;
  274.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:282: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$205`.
  280.   
  281.       // Process each @BindFloat element.
  282. >     for (Element element : env.getElementsAnnotatedWith(BindFloat.class)) {
  283.         if (!SuperficialValidation.validateElement(element)) continue;
  284.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:292: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$233`.
  290.   
  291.       // Process each @BindFont element.
  292. >     for (Element element : env.getElementsAnnotatedWith(BindFont.class)) {
  293.         if (!SuperficialValidation.validateElement(element)) continue;
  294.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:302: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$261`.
  300.   
  301.       // Process each @BindInt element.
  302. >     for (Element element : env.getElementsAnnotatedWith(BindInt.class)) {
  303.         if (!SuperficialValidation.validateElement(element)) continue;
  304.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:312: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$289`.
  310.   
  311.       // Process each @BindString element.
  312. >     for (Element element : env.getElementsAnnotatedWith(BindString.class)) {
  313.         if (!SuperficialValidation.validateElement(element)) continue;
  314.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:322: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$317`.
  320.   
  321.       // Process each @BindView element.
  322. >     for (Element element : env.getElementsAnnotatedWith(BindView.class)) {
  323.         // we don't SuperficialValidation.validateElement(element)
  324.         // so that an unresolved View type can be generated by later processing rounds

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:333: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$342`.
  331.   
  332.       // Process each @BindViews element.
  333. >     for (Element element : env.getElementsAnnotatedWith(BindViews.class)) {
  334.         // we don't SuperficialValidation.validateElement(element)
  335.         // so that an unresolved View type can be generated by later processing rounds

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:344: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$364`.
  342.   
  343.       // Process each annotation that corresponds to a listener.
  344. >     for (Class<? extends Annotation> listener : LISTENERS) {
  345.         findAndParseListener(env, listener, builderMap, erasedTargetNames);
  346.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:222: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$37`.
  220.   
  221.       // Process each @BindArray element.
  222. >     for (Element element : env.getElementsAnnotatedWith(BindArray.class)) {
  223.         if (!SuperficialValidation.validateElement(element)) continue;
  224.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:232: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$65`.
  230.   
  231.       // Process each @BindBitmap element.
  232. >     for (Element element : env.getElementsAnnotatedWith(BindBitmap.class)) {
  233.         if (!SuperficialValidation.validateElement(element)) continue;
  234.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:242: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$93`.
  240.   
  241.       // Process each @BindBool element.
  242. >     for (Element element : env.getElementsAnnotatedWith(BindBool.class)) {
  243.         if (!SuperficialValidation.validateElement(element)) continue;
  244.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:212: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$9`.
  210.   
  211.       // Process each @BindAnim element.
  212. >     for (Element element : env.getElementsAnnotatedWith(BindAnim.class)) {
  213.         if (!SuperficialValidation.validateElement(element)) continue;
  214.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:216: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  214.         try {
  215.           parseResourceAnimation(element, builderMap, erasedTargetNames);
  216. >       } catch (Exception e) {
  217.           logParsingError(element, BindAnim.class, e);
  218.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:226: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  224.         try {
  225.           parseResourceArray(element, builderMap, erasedTargetNames);
  226. >       } catch (Exception e) {
  227.           logParsingError(element, BindArray.class, e);
  228.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:236: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  234.         try {
  235.           parseResourceBitmap(element, builderMap, erasedTargetNames);
  236. >       } catch (Exception e) {
  237.           logParsingError(element, BindBitmap.class, e);
  238.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:246: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  244.         try {
  245.           parseResourceBool(element, builderMap, erasedTargetNames);
  246. >       } catch (Exception e) {
  247.           logParsingError(element, BindBool.class, e);
  248.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:256: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  254.         try {
  255.           parseResourceColor(element, builderMap, erasedTargetNames);
  256. >       } catch (Exception e) {
  257.           logParsingError(element, BindColor.class, e);
  258.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:266: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  264.         try {
  265.           parseResourceDimen(element, builderMap, erasedTargetNames);
  266. >       } catch (Exception e) {
  267.           logParsingError(element, BindDimen.class, e);
  268.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:276: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  274.         try {
  275.           parseResourceDrawable(element, builderMap, erasedTargetNames);
  276. >       } catch (Exception e) {
  277.           logParsingError(element, BindDrawable.class, e);
  278.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:286: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  284.         try {
  285.           parseResourceFloat(element, builderMap, erasedTargetNames);
  286. >       } catch (Exception e) {
  287.           logParsingError(element, BindFloat.class, e);
  288.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:296: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  294.         try {
  295.           parseResourceFont(element, builderMap, erasedTargetNames);
  296. >       } catch (Exception e) {
  297.           logParsingError(element, BindFont.class, e);
  298.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:306: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  304.         try {
  305.           parseResourceInt(element, builderMap, erasedTargetNames);
  306. >       } catch (Exception e) {
  307.           logParsingError(element, BindInt.class, e);
  308.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:316: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  314.         try {
  315.           parseResourceString(element, builderMap, erasedTargetNames);
  316. >       } catch (Exception e) {
  317.           logParsingError(element, BindString.class, e);
  318.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:327: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  325.         try {
  326.           parseBindView(element, builderMap, erasedTargetNames);
  327. >       } catch (Exception e) {
  328.           logParsingError(element, BindView.class, e);
  329.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:338: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Map ButterKnifeProcessor.findAndParseTargets(RoundEnvironment)`.
  336.         try {
  337.           parseBindViews(element, builderMap, erasedTargetNames);
  338. >       } catch (Exception e) {
  339.           logParsingError(element, BindViews.class, e);
  340.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:289: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$107`.
  287.           }
  288.         }
  289. >       for (FieldCollectionViewBinding binding : collectionBindings) {
  290.           result.addStatement("target.$L = null", binding.name);
  291.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:296: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$136`.
  294.       if (hasMethodBindings()) {
  295.         result.addCode("\n");
  296. >       for (ViewBinding binding : viewBindings) {
  297.           addFieldAndUnbindStatement(bindingClass, result, binding, useLegacyTypes);
  298.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:284: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$77`.
  282.         result.addStatement("$N = null", hasFieldBindings() ? "this.target" : "target");
  283.         result.addCode("\n");
  284. >       for (ViewBinding binding : viewBindings) {
  285.           if (binding.getFieldBinding() != null) {
  286.             result.addStatement("target.$L = null", binding.getFieldBinding().getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:286: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  284.         for (ViewBinding binding : viewBindings) {
  285.           if (binding.getFieldBinding() != null) {
  286. >           result.addStatement("target.$L = null", binding.getFieldBinding().getName());
  287.           }
  288.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:290: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  288.         }
  289.         for (FieldCollectionViewBinding binding : collectionBindings) {
  290. >         result.addStatement("target.$L = null", binding.name);
  291.         }
  292.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:295: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  293.   
  294.       if (hasMethodBindings()) {
  295. >       result.addCode("\n");
  296.         for (ViewBinding binding : viewBindings) {
  297.           addFieldAndUnbindStatement(bindingClass, result, binding, useLegacyTypes);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:302: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  300.   
  301.       if (parentBinding != null) {
  302. >       result.addCode("\n");
  303.         result.addStatement("super.unbind()");
  304.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:303: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  301.       if (parentBinding != null) {
  302.         result.addCode("\n");
  303. >       result.addStatement("super.unbind()");
  304.       }
  305.       return result.build();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:305: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  303.         result.addStatement("super.unbind()");
  304.       }
  305. >     return result.build();
  306.     }
  307.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:312: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  310.       // Only add fields to the binding if there are method bindings.
  311.       Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
  312. >         bindings.getMethodBindings();
  313.       if (classMethodBindings.isEmpty()) {
  314.         return;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:318: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  316.   
  317.       String fieldName =
  318. >         bindings.isBoundToRoot()
  319.               ? "viewSource"
  320.               : "view" + Integer.toHexString(bindings.getId().value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:320: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  318.           bindings.isBoundToRoot()
  319.               ? "viewSource"
  320. >             : "view" + Integer.toHexString(bindings.getId().value);
  321.       result.addField(VIEW, fieldName, PRIVATE);
  322.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:324: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  322.   
  323.       // We only need to emit the null check if there are zero required bindings.
  324. >     boolean needsNullChecked = bindings.getRequiredBindings().isEmpty();
  325.       if (needsNullChecked) {
  326.         unbindMethod.beginControlFlow("if ($N != null)", fieldName);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:329: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$61`.
  327.       }
  328.   
  329. >     for (ListenerClass listenerClass : classMethodBindings.keySet()) {
  330.         // We need to keep a reference to the listener
  331.         // in case we need to unbind it via a remove method.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:321: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  319.               ? "viewSource"
  320.               : "view" + Integer.toHexString(bindings.getId().value);
  321. >     result.addField(VIEW, fieldName, PRIVATE);
  322.   
  323.       // We only need to emit the null check if there are zero required bindings.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:337: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  335.           TypeName listenerClassName = bestGuess(getType(listenerClass, useLegacyTypes));
  336.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  337. >         result.addField(listenerClassName, listenerField, PRIVATE);
  338.         }
  339.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:326: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbindMethod`.
  324.       boolean needsNullChecked = bindings.getRequiredBindings().isEmpty();
  325.       if (needsNullChecked) {
  326. >       unbindMethod.beginControlFlow("if ($N != null)", fieldName);
  327.       }
  328.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:342: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbindMethod`.
  340.         String targetType = getTargetType(listenerClass, useLegacyTypes);
  341.         if (!VIEW_TYPE.equals(targetType)) {
  342. >         unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
  343.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  344.         } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:345: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbindMethod`.
  343.               fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
  344.         } else {
  345. >         unbindMethod.addStatement("$N.$N($N)", fieldName,
  346.               removerOrSetter(listenerClass, requiresRemoval), listenerField);
  347.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:350: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbindMethod`.
  348.   
  349.         if (requiresRemoval) {
  350. >         unbindMethod.addStatement("$N = null", listenerField);
  351.         }
  352.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:354: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbindMethod`.
  352.       }
  353.   
  354. >     unbindMethod.addStatement("$N = null", fieldName);
  355.   
  356.       if (needsNullChecked) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:357: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbindMethod`.
  355.   
  356.       if (needsNullChecked) {
  357. >       unbindMethod.endControlFlow();
  358.       }
  359.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:362: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listenerClass`.
  360.   
  361.     private static String getType(ListenerClass listenerClass, boolean useLegacyTypes) {
  362. >     String type = listenerClass.type();
  363.       String legacyType = listenerClass.legacyType();
  364.       if (useLegacyTypes && !legacyType.isEmpty()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:363: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listenerClass`.
  361.     private static String getType(ListenerClass listenerClass, boolean useLegacyTypes) {
  362.       String type = listenerClass.type();
  363. >     String legacyType = listenerClass.legacyType();
  364.       if (useLegacyTypes && !legacyType.isEmpty()) {
  365.         type = legacyType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:371: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listenerClass`.
  369.   
  370.     private static String getTargetType(ListenerClass listenerClass, boolean useLegacyTypes) {
  371. >     String targetType = listenerClass.targetType();
  372.       String legacyTargetType = listenerClass.legacyTargetType();
  373.       if (useLegacyTypes && !legacyTargetType.isEmpty()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:372: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listenerClass`.
  370.     private static String getTargetType(ListenerClass listenerClass, boolean useLegacyTypes) {
  371.       String targetType = listenerClass.targetType();
  372. >     String legacyTargetType = listenerClass.legacyTargetType();
  373.       if (useLegacyTypes && !legacyTargetType.isEmpty()) {
  374.         targetType = legacyTargetType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:381: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotation`.
  379.       StringWriter stackTrace = new StringWriter();
  380.       e.printStackTrace(new PrintWriter(stackTrace));
  381. >     error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  382.     }
  383.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:380: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `e`.
  378.         Exception e) {
  379.       StringWriter stackTrace = new StringWriter();
  380. >     e.printStackTrace(new PrintWriter(stackTrace));
  381.       error(element, "Unable to parse @%s binding.\n\n%s", annotation.getSimpleName(), stackTrace);
  382.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:381: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listenerClass`.
  379.     private String removerOrSetter(ListenerClass listenerClass, boolean requiresRemoval) {
  380.       return requiresRemoval
  381. >         ? listenerClass.remover()
  382.           : listenerClass.setter();
  383.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:382: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listenerClass`.
  380.       return requiresRemoval
  381.           ? listenerClass.remover()
  382. >         : listenerClass.setter();
  383.     }
  384.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:393: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  391.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  392.         error(element, "@%s %s must not be private or static. (%s.%s)",
  393. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  394.             element.getSimpleName());
  395.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:401: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  399.       if (enclosingElement.getKind() != CLASS) {
  400.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  401. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  402.             element.getSimpleName());
  403.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:409: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  407.       if (enclosingElement.getModifiers().contains(PRIVATE)) {
  408.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  409. >           annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  410.             element.getSimpleName());
  411.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:387: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  385.         String targetThing, Element element) {
  386.       boolean hasError = false;
  387. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  388.   
  389.       // Verify field or method modifiers.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:390: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  388.   
  389.       // Verify field or method modifiers.
  390. >     Set<Modifier> modifiers = element.getModifiers();
  391.       if (modifiers.contains(PRIVATE) || modifiers.contains(STATIC)) {
  392.         error(element, "@%s %s must not be private or static. (%s.%s)",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:394: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  392.         error(element, "@%s %s must not be private or static. (%s.%s)",
  393.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  394. >           element.getSimpleName());
  395.         hasError = true;
  396.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:402: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  400.         error(enclosingElement, "@%s %s may only be contained in classes. (%s.%s)",
  401.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  402. >           element.getSimpleName());
  403.         hasError = true;
  404.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:410: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  408.         error(enclosingElement, "@%s %s may not be contained in private classes. (%s.%s)",
  409.             annotationClass.getSimpleName(), targetThing, enclosingElement.getQualifiedName(),
  410. >           element.getSimpleName());
  411.         hasError = true;
  412.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:387: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  385.     private void addViewBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable,
  386.         boolean useLegacyTypes) {
  387. >     if (binding.isSingleFieldBinding()) {
  388.         // Optimize the common case where there's a single binding directly to a field.
  389.         FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:389: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  387.       if (binding.isSingleFieldBinding()) {
  388.         // Optimize the common case where there's a single binding directly to a field.
  389. >       FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());
  390.         CodeBlock.Builder builder = CodeBlock.builder()
  391.             .add("target.$L = ", fieldBinding.getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:398: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  396.             builder.add("($T) ", fieldBinding.getType());
  397.           }
  398. >         builder.add("source.findViewById($L)", binding.getId().code);
  399.         } else {
  400.           builder.add("$T.find", UTILS);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:405: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  403.             builder.add("AsType");
  404.           }
  405. >         builder.add("(source, $L", binding.getId().code);
  406.           if (fieldBinding.isRequired() || requiresCast) {
  407.             builder.add(", $S", asHumanDescription(singletonList(fieldBinding)));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:418: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  416.       }
  417.   
  418. >     List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  419.       if (!debuggable || requiredBindings.isEmpty()) {
  420.         result.addStatement("view = source.findViewById($L)", binding.getId().code);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:420: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  418.       List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  419.       if (!debuggable || requiredBindings.isEmpty()) {
  420. >       result.addStatement("view = source.findViewById($L)", binding.getId().code);
  421.       } else if (!binding.isBoundToRoot()) {
  422.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:421: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  419.       if (!debuggable || requiredBindings.isEmpty()) {
  420.         result.addStatement("view = source.findViewById($L)", binding.getId().code);
  421. >     } else if (!binding.isBoundToRoot()) {
  422.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  423.             binding.getId().code, asHumanDescription(requiredBindings));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:423: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  421.       } else if (!binding.isBoundToRoot()) {
  422.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  423. >           binding.getId().code, asHumanDescription(requiredBindings));
  424.       }
  425.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:414: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  412.           builder.add(")");
  413.         }
  414. >       result.addStatement("$L", builder.build());
  415.         return;
  416.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:420: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  418.       List<MemberViewBinding> requiredBindings = binding.getRequiredBindings();
  419.       if (!debuggable || requiredBindings.isEmpty()) {
  420. >       result.addStatement("view = source.findViewById($L)", binding.getId().code);
  421.       } else if (!binding.isBoundToRoot()) {
  422.         result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:422: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  420.         result.addStatement("view = source.findViewById($L)", binding.getId().code);
  421.       } else if (!binding.isBoundToRoot()) {
  422. >       result.addStatement("view = $T.findRequiredView(source, $L, $S)", UTILS,
  423.             binding.getId().code, asHumanDescription(requiredBindings));
  424.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:424: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  422.       if (qualifiedName.startsWith("android.")) {
  423.         error(element, "@%s-annotated class incorrectly in Android framework package. (%s)",
  424. >           annotationClass.getSimpleName(), qualifiedName);
  425.         return true;
  426.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:429: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  427.       if (qualifiedName.startsWith("java.")) {
  428.         error(element, "@%s-annotated class incorrectly in Java framework package. (%s)",
  429. >           annotationClass.getSimpleName(), qualifiedName);
  430.         return true;
  431.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:419: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  417.     private boolean isBindingInWrongPackage(Class<? extends Annotation> annotationClass,
  418.         Element element) {
  419. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  420.       String qualifiedName = enclosingElement.getQualifiedName().toString();
  421.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:431: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  429.   
  430.     private void addFieldBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable) {
  431. >     FieldViewBinding fieldBinding = binding.getFieldBinding();
  432.       if (fieldBinding != null) {
  433.         if (requiresCast(fieldBinding.getType())) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:436: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  434.           if (debuggable) {
  435.             result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  436. >               fieldBinding.getName(), UTILS, binding.getId().code,
  437.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  438.           } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:435: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  433.         if (requiresCast(fieldBinding.getType())) {
  434.           if (debuggable) {
  435. >           result.addStatement("target.$L = $T.castView(view, $L, $S, $T.class)",
  436.                 fieldBinding.getName(), UTILS, binding.getId().code,
  437.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:439: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  437.                 asHumanDescription(singletonList(fieldBinding)), fieldBinding.getRawType());
  438.           } else {
  439. >           result.addStatement("target.$L = ($T) view", fieldBinding.getName(),
  440.                 fieldBinding.getType());
  441.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:443: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  441.           }
  442.         } else {
  443. >         result.addStatement("target.$L = view", fieldBinding.getName());
  444.         }
  445.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:470: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builderMap`.
  468.       // Assemble information on the field.
  469.       int id = element.getAnnotation(BindView.class).value();
  470. >     BindingSet.Builder builder = builderMap.get(enclosingElement);
  471.       Id resourceId = elementToId(element, BindView.class, id);
  472.       if (builder != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:438: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  436.     private void parseBindView(Element element, Map<TypeElement, BindingSet.Builder> builderMap,
  437.         Set<TypeElement> erasedTargetNames) {
  438. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  439.   
  440.       // Start by verifying common generated code restrictions.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:445: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  443.   
  444.       // Verify that the target type extends from View.
  445. >     TypeMirror elementType = element.asType();
  446.       if (elementType.getKind() == TypeKind.TYPEVAR) {
  447.         TypeVariable typeVariable = (TypeVariable) elementType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:451: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  449.       }
  450.       Name qualifiedName = enclosingElement.getQualifiedName();
  451. >     Name simpleName = element.getSimpleName();
  452.       if (!isSubtypeOfType(elementType, VIEW_TYPE) && !isInterface(elementType)) {
  453.         if (elementType.getKind() == TypeKind.ERROR) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:469: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  467.   
  468.       // Assemble information on the field.
  469. >     int id = element.getAnnotation(BindView.class).value();
  470.       BindingSet.Builder builder = builderMap.get(enclosingElement);
  471.       Id resourceId = elementToId(element, BindView.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:477: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  475.           error(element, "Attempt to use @%s for an already bound ID %d on '%s'. (%s.%s)",
  476.               BindView.class.getSimpleName(), id, existingBindingName,
  477. >             enclosingElement.getQualifiedName(), element.getSimpleName());
  478.           return;
  479.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:491: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  489.   
  490.       // Add the type-erased version to the valid binding targets set.
  491. >     erasedTargetNames.add(enclosingElement);
  492.     }
  493.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:485: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  483.               .returns(bestGuess(method.returnType()));
  484.           String[] parameterTypes = method.parameters();
  485. >         for (int i = 0, count = parameterTypes.length; i < count; i++) {
  486.             callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  487.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:540: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  538.         if (!VIEW_TYPE.equals(targetType)) {
  539.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  540. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:542: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  540.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  543.               requiresRemoval ? listenerField : callback.build());
  544.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:543: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  541.         } else {
  542.           result.addStatement("$N.$L($L)", bindName, listener.setter(),
  543. >             requiresRemoval ? listenerField : callback.build());
  544.         }
  545.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:508: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `listenerParameters`.
  506.                 int listenerPosition = parameter.getListenerPosition();
  507.   
  508. >               if (parameter.requiresCast(listenerParameters[listenerPosition])) {
  509.                   if (debuggable) {
  510.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:486: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `parameterTypes`.
  484.           String[] parameterTypes = method.parameters();
  485.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  486. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  487.           }
  488.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:539: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `$T5_908`.
  537.         String targetType = getTargetType(listener, useLegacyTypes);
  538.         if (!VIEW_TYPE.equals(targetType)) {
  539. >         result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  540.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:542: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `$T5_955`.
  540.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  543.               requiresRemoval ? listenerField : callback.build());
  544.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:451: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  449.         boolean useLegacyTypes) {
  450.       Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
  451. >         binding.getMethodBindings();
  452.       if (classMethodBindings.isEmpty()) {
  453.         return;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:457: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  455.   
  456.       // We only need to emit the null check if there are zero required bindings.
  457. >     boolean needsNullChecked = binding.getRequiredBindings().isEmpty();
  458.       if (needsNullChecked) {
  459.         result.beginControlFlow("if (view != null)");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:465: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  463.       String fieldName = "viewSource";
  464.       String bindName = "source";
  465. >     if (!binding.isBoundToRoot()) {
  466.         fieldName = "view" + Integer.toHexString(binding.getId().value);
  467.         bindName = "view";

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:466: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `binding`.
  464.       String bindName = "source";
  465.       if (!binding.isBoundToRoot()) {
  466. >       fieldName = "view" + Integer.toHexString(binding.getId().value);
  467.         bindName = "view";
  468.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:497: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  495.           if (methodBindings.containsKey(method)) {
  496.             for (MethodViewBinding methodBinding : methodBindings.get(method)) {
  497. >             builder.add("target.$L(", methodBinding.getName());
  498.               List<Parameter> parameters = methodBinding.getParameters();
  499.               String[] listenerParameters = method.parameters();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:502: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  500.               for (int i = 0, count = parameters.size(); i < count; i++) {
  501.                 if (i > 0) {
  502. >                 builder.add(", ");
  503.                 }
  504.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:510: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  508.                 if (parameter.requiresCast(listenerParameters[listenerPosition])) {
  509.                   if (debuggable) {
  510. >                   builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  511.                         listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  512.                         parameter.getType());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:514: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  512.                         parameter.getType());
  513.                   } else {
  514. >                   builder.add("($T) p$L", parameter.getType(), listenerPosition);
  515.                   }
  516.                 } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:517: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  515.                   }
  516.                 } else {
  517. >                 builder.add("p$L", listenerPosition);
  518.                 }
  519.               }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:520: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  518.                 }
  519.               }
  520. >             builder.add(");\n");
  521.             }
  522.           } else if (hasReturnType) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:525: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  523.             builder.add("$L;\n", method.defaultReturn());
  524.           }
  525. >         callbackMethod.addCode(builder.build());
  526.           callback.addMethod(callbackMethod.build());
  527.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:486: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackMethod`.
  484.           String[] parameterTypes = method.parameters();
  485.           for (int i = 0, count = parameterTypes.length; i < count; i++) {
  486. >           callbackMethod.addParameter(bestGuess(parameterTypes[i]), "p" + i);
  487.           }
  488.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:525: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackMethod`.
  523.             builder.add("$L;\n", method.defaultReturn());
  524.           }
  525. >         callbackMethod.addCode(builder.build());
  526.           callback.addMethod(callbackMethod.build());
  527.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:526: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackMethod`.
  524.           }
  525.           callbackMethod.addCode(builder.build());
  526. >         callback.addMethod(callbackMethod.build());
  527.         }
  528.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:526: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callback`.
  524.           }
  525.           callbackMethod.addCode(builder.build());
  526. >         callback.addMethod(callbackMethod.build());
  527.         }
  528.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:534: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callback`.
  532.           TypeName listenerClassName = bestGuess(getType(listener, useLegacyTypes));
  533.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  534. >         result.addStatement("$L = $L", listenerField, callback.build());
  535.         }
  536.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:540: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callback`.
  538.         if (!VIEW_TYPE.equals(targetType)) {
  539.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  540. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:543: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callback`.
  541.         } else {
  542.           result.addStatement("$N.$L($L)", bindName, listener.setter(),
  543. >             requiresRemoval ? listenerField : callback.build());
  544.         }
  545.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:529: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  527.         }
  528.   
  529. >       boolean requiresRemoval = listener.remover().length() != 0;
  530.         String listenerField = null;
  531.         if (requiresRemoval) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:540: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  538.         if (!VIEW_TYPE.equals(targetType)) {
  539.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  540. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:542: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  540.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  543.               requiresRemoval ? listenerField : callback.build());
  544.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:511: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodBinding`.
  509.                   if (debuggable) {
  510.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  511. >                       listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  512.                         parameter.getType());
  513.                   } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:495: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodBindings`.
  493.           }
  494.   
  495. >         if (methodBindings.containsKey(method)) {
  496.             for (MethodViewBinding methodBinding : methodBindings.get(method)) {
  497.               builder.add("target.$L(", methodBinding.getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:496: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodBindings`.
  494.   
  495.           if (methodBindings.containsKey(method)) {
  496. >           for (MethodViewBinding methodBinding : methodBindings.get(method)) {
  497.               builder.add("target.$L(", methodBinding.getName());
  498.               List<Parameter> parameters = methodBinding.getParameters();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:489: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  487.           }
  488.   
  489. >         boolean hasReturnType = !"void".equals(method.returnType());
  490.           CodeBlock.Builder builder = CodeBlock.builder();
  491.           if (hasReturnType) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:499: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  497.               builder.add("target.$L(", methodBinding.getName());
  498.               List<Parameter> parameters = methodBinding.getParameters();
  499. >             String[] listenerParameters = method.parameters();
  500.               for (int i = 0, count = parameters.size(); i < count; i++) {
  501.                 if (i > 0) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:511: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  509.                   if (debuggable) {
  510.                     builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)", UTILS,
  511. >                       listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i,
  512.                         parameter.getType());
  513.                   } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:523: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  521.             }
  522.           } else if (hasReturnType) {
  523. >           builder.add("$L;\n", method.defaultReturn());
  524.           }
  525.           callbackMethod.addCode(builder.build());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:496: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$186`.
  494.   
  495.           if (methodBindings.containsKey(method)) {
  496. >           for (MethodViewBinding methodBinding : methodBindings.get(method)) {
  497.               builder.add("target.$L(", methodBinding.getName());
  498.               List<Parameter> parameters = methodBinding.getParameters();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:472: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$56`.
  470.   
  471.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e
  472. >         : classMethodBindings.entrySet()) {
  473.         ListenerClass listener = e.getKey();
  474.         Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:479: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$92`.
  477.             .superclass(ClassName.bestGuess(getType(listener, useLegacyTypes)));
  478.   
  479. >       for (ListenerMethod method : getListenerMethods(listener)) {
  480.           MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
  481.               .addAnnotation(Override.class)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:505: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `parameters`.
  503.                 }
  504.   
  505. >               Parameter parameter = parameters.get(i);
  506.                 int listenerPosition = parameter.getListenerPosition();
  507.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:459: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  457.       boolean needsNullChecked = binding.getRequiredBindings().isEmpty();
  458.       if (needsNullChecked) {
  459. >       result.beginControlFlow("if (view != null)");
  460.       }
  461.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:469: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  467.         bindName = "view";
  468.       }
  469. >     result.addStatement("$L = $N", fieldName, bindName);
  470.   
  471.       for (Map.Entry<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> e

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:534: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  532.           TypeName listenerClassName = bestGuess(getType(listener, useLegacyTypes));
  533.           listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
  534. >         result.addStatement("$L = $L", listenerField, callback.build());
  535.         }
  536.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:548: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `result`.
  546.   
  547.       if (needsNullChecked) {
  548. >       result.endControlFlow();
  549.       }
  550.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:530: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  528.   
  529.         boolean requiresRemoval = listener.remover().length() != 0;
  530. >       String listenerField = null;
  531.         if (requiresRemoval) {
  532.           TypeName listenerClassName = bestGuess(getType(listener, useLegacyTypes));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:540: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  538.         if (!VIEW_TYPE.equals(targetType)) {
  539.           result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
  540. >             listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542.           result.addStatement("$N.$L($L)", bindName, listener.setter(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:542: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void BindingSet.addMethodBindings(MethodSpec$Builder,ViewBinding,boolean,boolean)`.
  540.               listener.setter(), requiresRemoval ? listenerField : callback.build());
  541.         } else {
  542. >         result.addStatement("$N.$L($L)", bindName, listener.setter(),
  543.               requiresRemoval ? listenerField : callback.build());
  544.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:496: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  494.     private void parseBindViews(Element element, Map<TypeElement, BindingSet.Builder> builderMap,
  495.         Set<TypeElement> erasedTargetNames) {
  496. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  497.   
  498.       // Start by verifying common generated code restrictions.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:503: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  501.   
  502.       // Verify that the type is a List or an array.
  503. >     TypeMirror elementType = element.asType();
  504.       String erasedType = doubleErasure(elementType);
  505.       TypeMirror viewType = null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:517: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  515.           error(element, "@%s List must have a generic component. (%s.%s)",
  516.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  517. >             element.getSimpleName());
  518.           hasError = true;
  519.         } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:525: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  523.       } else {
  524.         error(element, "@%s must be a List or array. (%s.%s)", BindViews.class.getSimpleName(),
  525. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  526.         hasError = true;
  527.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:539: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  537.                   + "must elsewhere be generated as a View or interface. (%s.%s)",
  538.               BindViews.class.getSimpleName(), viewType, enclosingElement.getQualifiedName(),
  539. >             element.getSimpleName());
  540.         } else {
  541.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:543: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  541.           error(element, "@%s List or array type must extend from View or be an interface. (%s.%s)",
  542.               BindViews.class.getSimpleName(), enclosingElement.getQualifiedName(),
  543. >             element.getSimpleName());
  544.           hasError = true;
  545.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:549: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  547.   
  548.       // Assemble information on the field.
  549. >     String name = element.getSimpleName().toString();
  550.       int[] ids = element.getAnnotation(BindViews.class).value();
  551.       if (ids.length == 0) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:550: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  548.       // Assemble information on the field.
  549.       String name = element.getSimpleName().toString();
  550. >     int[] ids = element.getAnnotation(BindViews.class).value();
  551.       if (ids.length == 0) {
  552.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:553: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  551.       if (ids.length == 0) {
  552.         error(element, "@%s must specify at least one ID. (%s.%s)", BindViews.class.getSimpleName(),
  553. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  554.         hasError = true;
  555.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:561: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  559.         error(element, "@%s annotation contains duplicate ID %d. (%s.%s)",
  560.             BindViews.class.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  561. >           element.getSimpleName());
  562.         hasError = true;
  563.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:576: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  574.           new ArrayList<>(elementToIds(element, BindViews.class, ids).values()), required));
  575.   
  576. >     erasedTargetNames.add(enclosingElement);
  577.     }
  578.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:505: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor.parseBindViews(Element,Map,Set)`.
  503.       TypeMirror elementType = element.asType();
  504.       String erasedType = doubleErasure(elementType);
  505. >     TypeMirror viewType = null;
  506.       FieldCollectionViewBinding.Kind kind = null;
  507.       if (elementType.getKind() == TypeKind.ARRAY) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:506: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor.parseBindViews(Element,Map,Set)`.
  504.       String erasedType = doubleErasure(elementType);
  505.       TypeMirror viewType = null;
  506. >     FieldCollectionViewBinding.Kind kind = null;
  507.       if (elementType.getKind() == TypeKind.ARRAY) {
  508.         ArrayType arrayType = (ArrayType) elementType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List BindingSet.getListenerMethods(ListenerClass)`.
  558.         List<ListenerMethod> methods = new ArrayList<>();
  559.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  560. >       for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  561.           Field callbackField = callbacks.getField(callbackMethod.name());
  562.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:570: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List BindingSet.getListenerMethods(ListenerClass)`.
  568.           methods.add(method);
  569.         }
  570. >       return methods;
  571.       } catch (NoSuchFieldException e) {
  572.         throw new AssertionError(e);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:571: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List BindingSet.getListenerMethods(ListenerClass)`.
  569.         }
  570.         return methods;
  571. >     } catch (NoSuchFieldException e) {
  572.         throw new AssertionError(e);
  573.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:560: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$19`.
  558.         List<ListenerMethod> methods = new ArrayList<>();
  559.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  560. >       for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  561.           Field callbackField = callbacks.getField(callbackMethod.name());
  562.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:561: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackMethod`.
  559.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  560.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  561. >         Field callbackField = callbacks.getField(callbackMethod.name());
  562.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);
  563.           if (method == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:566: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackMethod`.
  564.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  565.                 callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  566. >               callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  567.           }
  568.           methods.add(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:561: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbacks`.
  559.         Class<? extends Enum<?>> callbacks = listener.callbacks();
  560.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  561. >         Field callbackField = callbacks.getField(callbackMethod.name());
  562.           ListenerMethod method = callbackField.getAnnotation(ListenerMethod.class);
  563.           if (method == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:565: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbacks`.
  563.           if (method == null) {
  564.             throw new IllegalStateException(String.format("@%s's %s.%s missing @%s annotation.",
  565. >               callbacks.getEnclosingClass().getSimpleName(), callbacks.getSimpleName(),
  566.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  567.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:553: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  551.   
  552.     private static List<ListenerMethod> getListenerMethods(ListenerClass listener) {
  553. >     if (listener.method().length == 1) {
  554.         return Arrays.asList(listener.method());
  555.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:554: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  552.     private static List<ListenerMethod> getListenerMethods(ListenerClass listener) {
  553.       if (listener.method().length == 1) {
  554. >       return Arrays.asList(listener.method());
  555.       }
  556.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:559: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  557.       try {
  558.         List<ListenerMethod> methods = new ArrayList<>();
  559. >       Class<? extends Enum<?>> callbacks = listener.callbacks();
  560.         for (Enum<?> callbackMethod : callbacks.getEnumConstants()) {
  561.           Field callbackField = callbacks.getField(callbackMethod.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:568: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methods`.
  566.                 callbackMethod.name(), ListenerMethod.class.getSimpleName()));
  567.           }
  568. >         methods.add(method);
  569.         }
  570.         return methods;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:571: error: GRADUAL_STATIC
  possibly-null return in nonnull method `List BindingSet.getListenerMethods(ListenerClass)`.
  569.         }
  570.         return methods;
  571. >     } catch (NoSuchFieldException e) {
  572.         throw new AssertionError(e);
  573.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:577: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  575.   
  576.     static String asHumanDescription(Collection<? extends MemberViewBinding> bindings) {
  577. >     Iterator<? extends MemberViewBinding> iterator = bindings.iterator();
  578.       switch (bindings.size()) {
  579.         case 1:

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:578: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  576.     static String asHumanDescription(Collection<? extends MemberViewBinding> bindings) {
  577.       Iterator<? extends MemberViewBinding> iterator = bindings.iterator();
  578. >     switch (bindings.size()) {
  579.         case 1:
  580.           return iterator.next().getDescription();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:585: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `bindings`.
  583.         default:
  584.           StringBuilder builder = new StringBuilder();
  585. >         for (int i = 0, count = bindings.size(); i < count; i++) {
  586.             if (i != 0) {
  587.               builder.append(", ");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:587: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  585.           for (int i = 0, count = bindings.size(); i < count; i++) {
  586.             if (i != 0) {
  587. >             builder.append(", ");
  588.             }
  589.             if (i == count - 1) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:590: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  588.             }
  589.             if (i == count - 1) {
  590. >             builder.append("and ");
  591.             }
  592.             builder.append(iterator.next().getDescription());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:592: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  590.               builder.append("and ");
  591.             }
  592. >           builder.append(iterator.next().getDescription());
  593.           }
  594.           return builder.toString();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:594: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  592.             builder.append(iterator.next().getDescription());
  593.           }
  594. >         return builder.toString();
  595.       }
  596.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:592: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `iterator`.
  590.               builder.append("and ");
  591.             }
  592. >           builder.append(iterator.next().getDescription());
  593.           }
  594.           return builder.toString();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:582: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  580.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  581.       boolean hasError = false;
  582. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  583.   
  584.       // Verify that the target type is Animation.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:585: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  583.   
  584.       // Verify that the target type is Animation.
  585. >     if (!ANIMATION_TYPE.equals(element.asType().toString())) {
  586.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  587.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:588: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  586.         error(element, "@%s field type must be 'Animation'. (%s.%s)",
  587.             BindAnim.class.getSimpleName(), enclosingElement.getQualifiedName(),
  588. >           element.getSimpleName());
  589.         hasError = true;
  590.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:601: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  599.   
  600.       // Assemble information on the field.
  601. >     String name = element.getSimpleName().toString();
  602.       int id = element.getAnnotation(BindAnim.class).value();
  603.       Id resourceId = elementToId(element, BindAnim.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:602: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  600.       // Assemble information on the field.
  601.       String name = element.getSimpleName().toString();
  602. >     int id = element.getAnnotation(BindAnim.class).value();
  603.       Id resourceId = elementToId(element, BindAnim.class, id);
  604.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:608: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  606.       builder.addResource(new FieldAnimationBinding(resourceId, name));
  607.   
  608. >     erasedTargetNames.add(enclosingElement);
  609.     }
  610.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:615: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeArguments`.
  613.             List<TypeName> typeArguments = new ArrayList<>();
  614.             do {
  615. >             typeArguments.add(WildcardTypeName.subtypeOf(Object.class));
  616.               left = type.indexOf('<', left + 1);
  617.             } while (left != -1);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:599: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `type`.
  597.   
  598.     private static TypeName bestGuess(String type) {
  599. >     switch (type) {
  600.         case "void": return TypeName.VOID;
  601.         case "boolean": return TypeName.BOOLEAN;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:610: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `type`.
  608.         case "short": return TypeName.SHORT;
  609.         default:
  610. >         int left = type.indexOf('<');
  611.           if (left != -1) {
  612.             ClassName typeClassName = ClassName.bestGuess(type.substring(0, left));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:612: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `type`.
  610.           int left = type.indexOf('<');
  611.           if (left != -1) {
  612. >           ClassName typeClassName = ClassName.bestGuess(type.substring(0, left));
  613.             List<TypeName> typeArguments = new ArrayList<>();
  614.             do {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:616: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `type`.
  614.             do {
  615.               typeArguments.add(WildcardTypeName.subtypeOf(Object.class));
  616. >             left = type.indexOf('<', left + 1);
  617.             } while (left != -1);
  618.             return ParameterizedTypeName.get(typeClassName,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:614: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  612.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  613.       boolean hasError = false;
  614. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  615.   
  616.       // Verify that the target type is bool.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:617: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  615.   
  616.       // Verify that the target type is bool.
  617. >     if (element.asType().getKind() != TypeKind.BOOLEAN) {
  618.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  619.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:620: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  618.         error(element, "@%s field type must be 'boolean'. (%s.%s)",
  619.             BindBool.class.getSimpleName(), enclosingElement.getQualifiedName(),
  620. >           element.getSimpleName());
  621.         hasError = true;
  622.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:633: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  631.   
  632.       // Assemble information on the field.
  633. >     String name = element.getSimpleName().toString();
  634.       int id = element.getAnnotation(BindBool.class).value();
  635.       Id resourceId = elementToId(element, BindBool.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:634: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  632.       // Assemble information on the field.
  633.       String name = element.getSimpleName().toString();
  634. >     int id = element.getAnnotation(BindBool.class).value();
  635.       Id resourceId = elementToId(element, BindBool.class, id);
  636.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:640: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  638.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BOOL));
  639.   
  640. >     erasedTargetNames.add(enclosingElement);
  641.     }
  642.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:632: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  630.     /** True when this type's bindings use raw integer values instead of {@code R} references. */
  631.     private boolean hasUnqualifiedResourceBindings() {
  632. >     for (ResourceBinding binding : resourceBindings) {
  633.         if (!binding.id().qualifed) {
  634.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:642: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  640.     /** True when this type's bindings use Resource directly instead of Context. */
  641.     private boolean hasResourceBindingsNeedingResource(int sdk) {
  642. >     for (ResourceBinding binding : resourceBindings) {
  643.         if (binding.requiresResources(sdk)) {
  644.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:646: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  644.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  645.       boolean hasError = false;
  646. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  647.   
  648.       // Verify that the target type is int or ColorStateList.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:650: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  648.       // Verify that the target type is int or ColorStateList.
  649.       boolean isColorStateList = false;
  650. >     TypeMirror elementType = element.asType();
  651.       if (COLOR_STATE_LIST_TYPE.equals(elementType.toString())) {
  652.         isColorStateList = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:656: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  654.         error(element, "@%s field type must be 'int' or 'ColorStateList'. (%s.%s)",
  655.             BindColor.class.getSimpleName(), enclosingElement.getQualifiedName(),
  656. >           element.getSimpleName());
  657.         hasError = true;
  658.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:669: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  667.   
  668.       // Assemble information on the field.
  669. >     String name = element.getSimpleName().toString();
  670.       int id = element.getAnnotation(BindColor.class).value();
  671.       Id resourceId = elementToId(element, BindColor.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:670: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  668.       // Assemble information on the field.
  669.       String name = element.getSimpleName().toString();
  670. >     int id = element.getAnnotation(BindColor.class).value();
  671.       Id resourceId = elementToId(element, BindColor.class, id);
  672.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:685: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  683.           isColorStateList ? colorStateList : color));
  684.   
  685. >     erasedTargetNames.add(enclosingElement);
  686.     }
  687.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:651: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  649.   
  650.     private boolean hasMethodBindings() {
  651. >     for (ViewBinding bindings : viewBindings) {
  652.         if (!bindings.getMethodBindings().isEmpty()) {
  653.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:660: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  658.   
  659.     private boolean hasOnTouchMethodBindings() {
  660. >     for (ViewBinding bindings : viewBindings) {
  661.         if (bindings.getMethodBindings()
  662.             .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:670: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  668.   
  669.     private boolean hasFieldBindings() {
  670. >     for (ViewBinding bindings : viewBindings) {
  671.         if (bindings.getFieldBinding() != null) {
  672.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:683: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$3`.
  681.   
  682.     private boolean hasViewLocal() {
  683. >     for (ViewBinding bindings : viewBindings) {
  684.         if (bindings.requiresLocal()) {
  685.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:691: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  689.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  690.       boolean hasError = false;
  691. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  692.   
  693.       // Verify that the target type is int or ColorStateList.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:695: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  693.       // Verify that the target type is int or ColorStateList.
  694.       boolean isInt = false;
  695. >     TypeMirror elementType = element.asType();
  696.       if (elementType.getKind() == TypeKind.INT) {
  697.         isInt = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:701: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  699.         error(element, "@%s field type must be 'int' or 'float'. (%s.%s)",
  700.             BindDimen.class.getSimpleName(), enclosingElement.getQualifiedName(),
  701. >           element.getSimpleName());
  702.         hasError = true;
  703.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:714: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  712.   
  713.       // Assemble information on the field.
  714. >     String name = element.getSimpleName().toString();
  715.       int id = element.getAnnotation(BindDimen.class).value();
  716.       Id resourceId = elementToId(element, BindDimen.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:715: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  713.       // Assemble information on the field.
  714.       String name = element.getSimpleName().toString();
  715. >     int id = element.getAnnotation(BindDimen.class).value();
  716.       Id resourceId = elementToId(element, BindDimen.class, id);
  717.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:721: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  719.           isInt ? FieldResourceBinding.Type.DIMEN_AS_INT : FieldResourceBinding.Type.DIMEN_AS_FLOAT));
  720.   
  721. >     erasedTargetNames.add(enclosingElement);
  722.     }
  723.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:698: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `type`.
  696.   
  697.     static boolean requiresCast(TypeName type) {
  698. >     return !VIEW_TYPE.equals(type.toString());
  699.     }
  700.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:706: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  704.   
  705.     static Builder newBuilder(TypeElement enclosingElement) {
  706. >     TypeMirror typeMirror = enclosingElement.asType();
  707.   
  708.       boolean isView = isSubtypeOfType(typeMirror, VIEW_TYPE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:718: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  716.   
  717.       String packageName = getPackage(enclosingElement).getQualifiedName().toString();
  718. >     String className = enclosingElement.getQualifiedName().toString().substring(
  719.           packageName.length() + 1).replace('.', '$');
  720.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:722: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  720.       ClassName bindingClassName = ClassName.get(packageName, className + "_ViewBinding");
  721.   
  722. >     boolean isFinal = enclosingElement.getModifiers().contains(Modifier.FINAL);
  723.       return new Builder(targetType, bindingClassName, isFinal, isView, isActivity, isDialog);
  724.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:727: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  725.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  726.       boolean hasError = false;
  727. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  728.   
  729.       // Verify that the target type is Bitmap.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:730: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  728.   
  729.       // Verify that the target type is Bitmap.
  730. >     if (!BITMAP_TYPE.equals(element.asType().toString())) {
  731.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  732.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:733: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  731.         error(element, "@%s field type must be 'Bitmap'. (%s.%s)",
  732.             BindBitmap.class.getSimpleName(), enclosingElement.getQualifiedName(),
  733. >           element.getSimpleName());
  734.         hasError = true;
  735.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:746: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  744.   
  745.       // Assemble information on the field.
  746. >     String name = element.getSimpleName().toString();
  747.       int id = element.getAnnotation(BindBitmap.class).value();
  748.       Id resourceId = elementToId(element, BindBitmap.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:747: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  745.       // Assemble information on the field.
  746.       String name = element.getSimpleName().toString();
  747. >     int id = element.getAnnotation(BindBitmap.class).value();
  748.       Id resourceId = elementToId(element, BindBitmap.class, id);
  749.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:753: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  751.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.BITMAP));
  752.   
  753. >     erasedTargetNames.add(enclosingElement);
  754.     }
  755.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:744: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.bindingClassName`.
  742.           boolean isView, boolean isActivity, boolean isDialog) {
  743.         this.targetTypeName = targetTypeName;
  744. >       this.bindingClassName = bindingClassName;
  745.         this.isFinal = isFinal;
  746.         this.isView = isView;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:747: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.isActivity`.
  745.         this.isFinal = isFinal;
  746.         this.isView = isView;
  747. >       this.isActivity = isActivity;
  748.         this.isDialog = isDialog;
  749.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:748: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.isDialog`.
  746.         this.isView = isView;
  747.         this.isActivity = isActivity;
  748. >       this.isDialog = isDialog;
  749.       }
  750.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:745: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.isFinal`.
  743.         this.targetTypeName = targetTypeName;
  744.         this.bindingClassName = bindingClassName;
  745. >       this.isFinal = isFinal;
  746.         this.isView = isView;
  747.         this.isActivity = isActivity;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:746: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.isView`.
  744.         this.bindingClassName = bindingClassName;
  745.         this.isFinal = isFinal;
  746. >       this.isView = isView;
  747.         this.isActivity = isActivity;
  748.         this.isDialog = isDialog;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:743: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.targetTypeName`.
  741.       private Builder(TypeName targetTypeName, ClassName bindingClassName, boolean isFinal,
  742.           boolean isView, boolean isActivity, boolean isDialog) {
  743. >       this.targetTypeName = targetTypeName;
  744.         this.bindingClassName = bindingClassName;
  745.         this.isFinal = isFinal;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:759: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  757.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  758.       boolean hasError = false;
  759. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  760.   
  761.       // Verify that the target type is Drawable.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:762: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  760.   
  761.       // Verify that the target type is Drawable.
  762. >     if (!DRAWABLE_TYPE.equals(element.asType().toString())) {
  763.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  764.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:765: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  763.         error(element, "@%s field type must be 'Drawable'. (%s.%s)",
  764.             BindDrawable.class.getSimpleName(), enclosingElement.getQualifiedName(),
  765. >           element.getSimpleName());
  766.         hasError = true;
  767.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:778: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  776.   
  777.       // Assemble information on the field.
  778. >     String name = element.getSimpleName().toString();
  779.       int id = element.getAnnotation(BindDrawable.class).value();
  780.       int tint = element.getAnnotation(BindDrawable.class).tint();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:779: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  777.       // Assemble information on the field.
  778.       String name = element.getSimpleName().toString();
  779. >     int id = element.getAnnotation(BindDrawable.class).value();
  780.       int tint = element.getAnnotation(BindDrawable.class).tint();
  781.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:780: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  778.       String name = element.getSimpleName().toString();
  779.       int id = element.getAnnotation(BindDrawable.class).value();
  780. >     int tint = element.getAnnotation(BindDrawable.class).tint();
  781.       Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
  782.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:787: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  785.           useLegacyTypes));
  786.   
  787. >     erasedTargetNames.add(enclosingElement);
  788.     }
  789.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:765: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  763.           MethodViewBinding binding) {
  764.         ViewBinding.Builder viewBinding = getOrCreateViewBindings(id);
  765. >       if (viewBinding.hasMethodBinding(listener, method) && !"void".equals(method.returnType())) {
  766.           return false;
  767.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:777: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSet$Builder.parentBinding`.
  775.   
  776.       void setParent(BindingSet parent) {
  777. >       this.parentBinding = parent;
  778.       }
  779.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:783: error: GRADUAL_STATIC
  possibly-null return in nonnull method `String BindingSet$Builder.findExistingBindingName(Id)`.
  781.         ViewBinding.Builder builder = viewIdMap.get(id);
  782.         if (builder == null) {
  783. >         return null;
  784.         }
  785.         FieldViewBinding fieldBinding = builder.fieldBinding;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:787: error: GRADUAL_STATIC
  possibly-null return in nonnull method `String BindingSet$Builder.findExistingBindingName(Id)`.
  785.         FieldViewBinding fieldBinding = builder.fieldBinding;
  786.         if (fieldBinding == null) {
  787. >         return null;
  788.         }
  789.         return fieldBinding.getName();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:793: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  791.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  792.       boolean hasError = false;
  793. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  794.   
  795.       // Verify that the target type is float.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:796: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  794.   
  795.       // Verify that the target type is float.
  796. >     if (element.asType().getKind() != TypeKind.FLOAT) {
  797.         error(element, "@%s field type must be 'float'. (%s.%s)",
  798.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:799: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  797.         error(element, "@%s field type must be 'float'. (%s.%s)",
  798.             BindFloat.class.getSimpleName(), enclosingElement.getQualifiedName(),
  799. >           element.getSimpleName());
  800.         hasError = true;
  801.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:812: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  810.   
  811.       // Assemble information on the field.
  812. >     String name = element.getSimpleName().toString();
  813.       int id = element.getAnnotation(BindFloat.class).value();
  814.       Id resourceId = elementToId(element, BindFloat.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:813: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  811.       // Assemble information on the field.
  812.       String name = element.getSimpleName().toString();
  813. >     int id = element.getAnnotation(BindFloat.class).value();
  814.       Id resourceId = elementToId(element, BindFloat.class, id);
  815.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:819: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  817.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.FLOAT));
  818.   
  819. >     erasedTargetNames.add(enclosingElement);
  820.     }
  821.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:803: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$7`.
  801.       BindingSet build() {
  802.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  803. >       for (ViewBinding.Builder builder : viewIdMap.values()) {
  804.           viewBindings.add(builder.build());
  805.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:804: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `viewBindings`.
  802.         ImmutableList.Builder<ViewBinding> viewBindings = ImmutableList.builder();
  803.         for (ViewBinding.Builder builder : viewIdMap.values()) {
  804. >         viewBindings.add(builder.build());
  805.         }
  806.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java:807: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `viewBindings`.
  805.         }
  806.         return new BindingSet(targetTypeName, bindingClassName, isFinal, isView, isActivity, isDialog,
  807. >           viewBindings.build(), collectionBindings.build(), resourceBindings.build(),
  808.             parentBinding);
  809.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:825: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  823.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  824.       boolean hasError = false;
  825. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  826.   
  827.       // Verify that the target type is a Typeface.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:828: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  826.   
  827.       // Verify that the target type is a Typeface.
  828. >     if (!TYPEFACE_TYPE.equals(element.asType().toString())) {
  829.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  830.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:831: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  829.         error(element, "@%s field type must be 'Typeface'. (%s.%s)",
  830.             BindFont.class.getSimpleName(), enclosingElement.getQualifiedName(),
  831. >           element.getSimpleName());
  832.         hasError = true;
  833.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:840: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  838.   
  839.       // Assemble information on the field.
  840. >     String name = element.getSimpleName().toString();
  841.       BindFont bindFont = element.getAnnotation(BindFont.class);
  842.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:841: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  839.       // Assemble information on the field.
  840.       String name = element.getSimpleName().toString();
  841. >     BindFont bindFont = element.getAnnotation(BindFont.class);
  842.   
  843.       int styleValue = bindFont.style();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:859: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  857.       builder.addResource(new FieldTypefaceBinding(resourceId, name, style, useLegacyTypes));
  858.   
  859. >     erasedTargetNames.add(enclosingElement);
  860.     }
  861.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:865: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  863.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  864.       boolean hasError = false;
  865. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  866.   
  867.       // Verify that the target type is int.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:868: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  866.   
  867.       // Verify that the target type is int.
  868. >     if (element.asType().getKind() != TypeKind.INT) {
  869.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  870.             enclosingElement.getQualifiedName(), element.getSimpleName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:870: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  868.       if (element.asType().getKind() != TypeKind.INT) {
  869.         error(element, "@%s field type must be 'int'. (%s.%s)", BindInt.class.getSimpleName(),
  870. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  871.         hasError = true;
  872.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:883: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  881.   
  882.       // Assemble information on the field.
  883. >     String name = element.getSimpleName().toString();
  884.       int id = element.getAnnotation(BindInt.class).value();
  885.       Id resourceId = elementToId(element, BindInt.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:884: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  882.       // Assemble information on the field.
  883.       String name = element.getSimpleName().toString();
  884. >     int id = element.getAnnotation(BindInt.class).value();
  885.       Id resourceId = elementToId(element, BindInt.class, id);
  886.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:890: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  888.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.INT));
  889.   
  890. >     erasedTargetNames.add(enclosingElement);
  891.     }
  892.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:896: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  894.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  895.       boolean hasError = false;
  896. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  897.   
  898.       // Verify that the target type is String.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:899: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  897.   
  898.       // Verify that the target type is String.
  899. >     if (!STRING_TYPE.equals(element.asType().toString())) {
  900.         error(element, "@%s field type must be 'String'. (%s.%s)",
  901.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:902: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  900.         error(element, "@%s field type must be 'String'. (%s.%s)",
  901.             BindString.class.getSimpleName(), enclosingElement.getQualifiedName(),
  902. >           element.getSimpleName());
  903.         hasError = true;
  904.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:915: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  913.   
  914.       // Assemble information on the field.
  915. >     String name = element.getSimpleName().toString();
  916.       int id = element.getAnnotation(BindString.class).value();
  917.       Id resourceId = elementToId(element, BindString.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:916: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  914.       // Assemble information on the field.
  915.       String name = element.getSimpleName().toString();
  916. >     int id = element.getAnnotation(BindString.class).value();
  917.       Id resourceId = elementToId(element, BindString.class, id);
  918.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:922: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  920.           new FieldResourceBinding(resourceId, name, FieldResourceBinding.Type.STRING));
  921.   
  922. >     erasedTargetNames.add(enclosingElement);
  923.     }
  924.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:928: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  926.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  927.       boolean hasError = false;
  928. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  929.   
  930.       // Verify that the target type is supported.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:936: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  934.             "@%s field type must be one of: String[], int[], CharSequence[], %s. (%s.%s)",
  935.             BindArray.class.getSimpleName(), TYPED_ARRAY_TYPE, enclosingElement.getQualifiedName(),
  936. >           element.getSimpleName());
  937.         hasError = true;
  938.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:949: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  947.   
  948.       // Assemble information on the field.
  949. >     String name = element.getSimpleName().toString();
  950.       int id = element.getAnnotation(BindArray.class).value();
  951.       Id resourceId = elementToId(element, BindArray.class, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:950: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  948.       // Assemble information on the field.
  949.       String name = element.getSimpleName().toString();
  950. >     int id = element.getAnnotation(BindArray.class).value();
  951.       Id resourceId = elementToId(element, BindArray.class, id);
  952.       BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:955: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  953.       builder.addResource(new FieldResourceBinding(resourceId, name, requireNonNull(type)));
  954.   
  955. >     erasedTargetNames.add(enclosingElement);
  956.     }
  957.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:963: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  961.      */
  962.     private static @Nullable FieldResourceBinding.Type getArrayResourceMethodName(Element element) {
  963. >     TypeMirror typeMirror = element.asType();
  964.       if (TYPED_ARRAY_TYPE.equals(typeMirror.toString())) {
  965.         return FieldResourceBinding.Type.TYPED_ARRAY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:978: error: GRADUAL_STATIC
  possibly-null return in nonnull method `FieldResourceBinding$Type ButterKnifeProcessor.getArrayResourceMethodName(Element)`.
  976.         }
  977.       }
  978. >     return null;
  979.     }
  980.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:985: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Integer ButterKnifeProcessor.findDuplicate(int[])`.
  983.       Set<Integer> seenElements = new LinkedHashSet<>();
  984.   
  985. >     for (int element : array) {
  986.         if (!seenElements.add(element)) {
  987.           return element;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:985: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `array`.
  983.       Set<Integer> seenElements = new LinkedHashSet<>();
  984.   
  985. >     for (int element : array) {
  986.         if (!seenElements.add(element)) {
  987.           return element;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:986: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `seenElements`.
  984.   
  985.       for (int element : array) {
  986. >       if (!seenElements.add(element)) {
  987.           return element;
  988.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:991: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Integer ButterKnifeProcessor.findDuplicate(int[])`.
  989.       }
  990.   
  991. >     return null;
  992.     }
  993.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1011: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.findAndParseListener(RoundEnvironment,Class,Map,Set)`.
  1009.         try {
  1010.           parseListenerAnnotation(annotationClass, element, builderMap, erasedTargetNames);
  1011. >       } catch (Exception e) {
  1012.           StringWriter stackTrace = new StringWriter();
  1013.           e.printStackTrace(new PrintWriter(stackTrace));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1016: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1014.   
  1015.           error(element, "Unable to generate view binder for @%s.\n\n%s",
  1016. >             annotationClass.getSimpleName(), stackTrace.toString());
  1017.         }
  1018.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1013: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `e`.
  1011.         } catch (Exception e) {
  1012.           StringWriter stackTrace = new StringWriter();
  1013. >         e.printStackTrace(new PrintWriter(stackTrace));
  1014.   
  1015.           error(element, "Unable to generate view binder for @%s.\n\n%s",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1007: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `env`.
  1005.         Class<? extends Annotation> annotationClass,
  1006.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  1007. >     for (Element element : env.getElementsAnnotatedWith(annotationClass)) {
  1008.         if (!SuperficialValidation.validateElement(element)) continue;
  1009.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1007: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$6`.
  1005.         Class<? extends Annotation> annotationClass,
  1006.         Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
  1007. >     for (Element element : env.getElementsAnnotatedWith(annotationClass)) {
  1008.         if (!SuperficialValidation.validateElement(element)) continue;
  1009.         try {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1011: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor.findAndParseListener(RoundEnvironment,Class,Map,Set)`.
  1009.         try {
  1010.           parseListenerAnnotation(annotationClass, element, builderMap, erasedTargetNames);
  1011. >       } catch (Exception e) {
  1012.           StringWriter stackTrace = new StringWriter();
  1013.           e.printStackTrace(new PrintWriter(stackTrace));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1030: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.parseListenerAnnotation(Class,Element,Map,Set)`.
  1028.       }
  1029.   
  1030. >     ExecutableElement executableElement = (ExecutableElement) element;
  1031.       TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  1032.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1064: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.parseListenerAnnotation(Class,Element,Map,Set)`.
  1062.       }
  1063.   
  1064. >     for (int id : ids) {
  1065.         if (id == NO_ID.value) {
  1066.           if (ids.length == 1) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1092: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.parseListenerAnnotation(Class,Element,Map,Set)`.
  1090.                   annotationClass.getSimpleName()));
  1091.         }
  1092. >       method = methods[0];
  1093.       } else {
  1094.         Method annotationCallback = annotationClass.getDeclaredMethod("callback");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1168: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.parseListenerAnnotation(Class,Element,Map,Set)`.
  1166.                 .append(')');
  1167.             for (int j = 0; j < parameters.length; j++) {
  1168. >             Parameter parameter = parameters[j];
  1169.               builder.append("\n\n  Parameter #")
  1170.                   .append(j + 1)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1186: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnifeProcessor.parseListenerAnnotation(Class,Element,Map,Set)`.
  1184.                 .append(method.parameters().length)
  1185.                 .append(" parameter(s):\n");
  1186. >           for (String parameterType : method.parameters()) {
  1187.               builder.append("\n  ").append(parameterType);
  1188.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1064: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  1062.       }
  1063.   
  1064. >     for (int id : ids) {
  1065.         if (id == NO_ID.value) {
  1066.           if (ids.length == 1) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1186: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$567`.
  1184.                 .append(method.parameters().length)
  1185.                 .append(" parameter(s):\n");
  1186. >           for (String parameterType : method.parameters()) {
  1187.               builder.append("\n  ").append(parameterType);
  1188.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1149: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `parameterTypes`.
  1147.               continue;
  1148.             }
  1149. >           if ((isSubtypeOfType(methodParameterType, parameterTypes[j])
  1150.                 && isSubtypeOfType(methodParameterType, VIEW_TYPE))
  1151.                 || isTypeEqual(methodParameterType, parameterTypes[j])

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1151: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `parameterTypes`.
  1149.             if ((isSubtypeOfType(methodParameterType, parameterTypes[j])
  1150.                 && isSubtypeOfType(methodParameterType, VIEW_TYPE))
  1151. >               || isTypeEqual(methodParameterType, parameterTypes[j])
  1152.                 || isInterface(methodParameterType)) {
  1153.               parameters[i] = new Parameter(j, TypeName.get(methodParameterType));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1153: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `parameters`.
  1151.                 || isTypeEqual(methodParameterType, parameterTypes[j])
  1152.                 || isInterface(methodParameterType)) {
  1153. >             parameters[i] = new Parameter(j, TypeName.get(methodParameterType));
  1154.               methodParameterUsed.set(j);
  1155.               break;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1168: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `parameters`.
  1166.                 .append(')');
  1167.             for (int j = 0; j < parameters.length; j++) {
  1168. >             Parameter parameter = parameters[j];
  1169.               builder.append("\n\n  Parameter #")
  1170.                   .append(j + 1)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1027: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1025.       if (!(element instanceof ExecutableElement) || element.getKind() != METHOD) {
  1026.         throw new IllegalStateException(
  1027. >           String.format("@%s annotation must be on a method.", annotationClass.getSimpleName()));
  1028.       }
  1029.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1035: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1033.       // Assemble information on the method.
  1034.       Annotation annotation = element.getAnnotation(annotationClass);
  1035. >     Method annotationValue = annotationClass.getDeclaredMethod("value");
  1036.       if (annotationValue.getReturnType() != int[].class) {
  1037.         throw new IllegalStateException(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1052: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1050.       if (duplicateId != null) {
  1051.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1052. >           annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1053.             element.getSimpleName());
  1054.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1057: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1055.       }
  1056.   
  1057. >     ListenerClass listener = annotationClass.getAnnotation(ListenerClass.class);
  1058.       if (listener == null) {
  1059.         throw new IllegalStateException(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1061: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1059.         throw new IllegalStateException(
  1060.             String.format("No @%s defined on @%s.", ListenerClass.class.getSimpleName(),
  1061. >               annotationClass.getSimpleName()));
  1062.       }
  1063.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1074: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1072.           } else {
  1073.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1074. >               annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1075.                 element.getSimpleName());
  1076.             hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1085: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1083.       if (methods.length > 1) {
  1084.         throw new IllegalStateException(String.format("Multiple listener methods specified on @%s.",
  1085. >           annotationClass.getSimpleName()));
  1086.       } else if (methods.length == 1) {
  1087.         if (listener.callbacks() != ListenerClass.NONE.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1090: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1088.           throw new IllegalStateException(
  1089.               String.format("Both method() and callback() defined on @%s.",
  1090. >                 annotationClass.getSimpleName()));
  1091.         }
  1092.         method = methods[0];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1094: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1092.         method = methods[0];
  1093.       } else {
  1094. >       Method annotationCallback = annotationClass.getDeclaredMethod("callback");
  1095.         Enum<?> callback = (Enum<?>) annotationCallback.invoke(annotation);
  1096.         Field callbackField = callback.getDeclaringClass().getField(callback.name());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1101: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1099.           throw new IllegalStateException(
  1100.               String.format("No @%s defined on @%s's %s.%s.", ListenerMethod.class.getSimpleName(),
  1101. >                 annotationClass.getSimpleName(), callback.getDeclaringClass().getSimpleName(),
  1102.                   callback.name()));
  1103.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1110: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1108.       if (methodParameters.size() > method.parameters().length) {
  1109.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1110. >           annotationClass.getSimpleName(), method.parameters().length,
  1111.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1112.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1123: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1121.       if (!returnType.toString().equals(method.returnType())) {
  1122.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1123. >           annotationClass.getSimpleName(), method.returnType(),
  1124.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1125.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1161: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotationClass`.
  1159.             StringBuilder builder = new StringBuilder();
  1160.             builder.append("Unable to match @")
  1161. >               .append(annotationClass.getSimpleName())
  1162.                 .append(" method arguments. (")
  1163.                 .append(enclosingElement.getQualifiedName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1169: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1167.             for (int j = 0; j < parameters.length; j++) {
  1168.               Parameter parameter = parameters[j];
  1169. >             builder.append("\n\n  Parameter #")
  1170.                   .append(j + 1)
  1171.                   .append(": ")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1175: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1173.                   .append("\n    ");
  1174.               if (parameter == null) {
  1175. >               builder.append("did not match any listener parameters");
  1176.               } else {
  1177.                 builder.append("matched listener parameter #")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1177: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1175.                 builder.append("did not match any listener parameters");
  1176.               } else {
  1177. >               builder.append("matched listener parameter #")
  1178.                     .append(parameter.getListenerPosition() + 1)
  1179.                     .append(": ")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1183: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1181.               }
  1182.             }
  1183. >           builder.append("\n\nMethods may have up to ")
  1184.                 .append(method.parameters().length)
  1185.                 .append(" parameter(s):\n");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1187: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1185.                 .append(" parameter(s):\n");
  1186.             for (String parameterType : method.parameters()) {
  1187. >             builder.append("\n  ").append(parameterType);
  1188.             }
  1189.             builder.append(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1189: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1187.               builder.append("\n  ").append(parameterType);
  1188.             }
  1189. >           builder.append(
  1190.                 "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1191.             error(executableElement, builder.toString());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1191: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1189.             builder.append(
  1190.                 "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  1191. >           error(executableElement, builder.toString());
  1192.             return;
  1193.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1202: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  1200.   
  1201.       for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1202. >       if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1203.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1204.               entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1025: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1023.         throws Exception {
  1024.       // This should be guarded by the annotation's @Target but it's worth a check for safe casting.
  1025. >     if (!(element instanceof ExecutableElement) || element.getKind() != METHOD) {
  1026.         throw new IllegalStateException(
  1027.             String.format("@%s annotation must be on a method.", annotationClass.getSimpleName()));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1031: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1029.   
  1030.       ExecutableElement executableElement = (ExecutableElement) element;
  1031. >     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
  1032.   
  1033.       // Assemble information on the method.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1034: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1032.   
  1033.       // Assemble information on the method.
  1034. >     Annotation annotation = element.getAnnotation(annotationClass);
  1035.       Method annotationValue = annotationClass.getDeclaredMethod("value");
  1036.       if (annotationValue.getReturnType() != int[].class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1053: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1051.         error(element, "@%s annotation for method contains duplicate ID %d. (%s.%s)",
  1052.             annotationClass.getSimpleName(), duplicateId, enclosingElement.getQualifiedName(),
  1053. >           element.getSimpleName());
  1054.         hasError = true;
  1055.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1069: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1067.             if (!required) {
  1068.               error(element, "ID-free binding must not be annotated with @Optional. (%s.%s)",
  1069. >                 enclosingElement.getQualifiedName(), element.getSimpleName());
  1070.               hasError = true;
  1071.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1075: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1073.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1074.                 annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1075. >               element.getSimpleName());
  1076.             hasError = true;
  1077.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1111: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1109.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1110.             annotationClass.getSimpleName(), method.parameters().length,
  1111. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1112.         hasError = true;
  1113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1124: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1122.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1123.             annotationClass.getSimpleName(), method.returnType(),
  1124. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1125.         hasError = true;
  1126.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1165: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1163.                 .append(enclosingElement.getQualifiedName())
  1164.                 .append('.')
  1165. >               .append(element.getSimpleName())
  1166.                 .append(')');
  1167.             for (int j = 0; j < parameters.length; j++) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1204: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1202.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1203.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1204. >             entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1205.           return;
  1206.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1069: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  1067.             if (!required) {
  1068.               error(element, "ID-free binding must not be annotated with @Optional. (%s.%s)",
  1069. >                 enclosingElement.getQualifiedName(), element.getSimpleName());
  1070.               hasError = true;
  1071.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1074: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  1072.           } else {
  1073.             error(element, "@%s annotation contains invalid ID %d. (%s.%s)",
  1074. >               annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
  1075.                 element.getSimpleName());
  1076.             hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1111: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  1109.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1110.             annotationClass.getSimpleName(), method.parameters().length,
  1111. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1112.         hasError = true;
  1113.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1124: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  1122.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1123.             annotationClass.getSimpleName(), method.returnType(),
  1124. >           enclosingElement.getQualifiedName(), element.getSimpleName());
  1125.         hasError = true;
  1126.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1163: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  1161.                 .append(annotationClass.getSimpleName())
  1162.                 .append(" method arguments. (")
  1163. >               .append(enclosingElement.getQualifiedName())
  1164.                 .append('.')
  1165.                 .append(element.getSimpleName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1204: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `enclosingElement`.
  1202.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1203.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",
  1204. >             entry.getKey(), enclosingElement.getQualifiedName(), element.getSimpleName());
  1205.           return;
  1206.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1210: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `erasedTargetNames`.
  1208.   
  1209.       // Add the type-erased version to the valid binding targets set.
  1210. >     erasedTargetNames.add(enclosingElement);
  1211.     }
  1212.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1042: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `executableElement`.
  1040.   
  1041.       int[] ids = (int[]) annotationValue.invoke(annotation);
  1042. >     String name = executableElement.getSimpleName().toString();
  1043.       boolean required = isListenerRequired(executableElement);
  1044.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1107: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `executableElement`.
  1105.   
  1106.       // Verify that the method has equal to or less than the number of parameters as the listener.
  1107. >     List<? extends VariableElement> methodParameters = executableElement.getParameters();
  1108.       if (methodParameters.size() > method.parameters().length) {
  1109.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1116: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `executableElement`.
  1114.   
  1115.       // Verify method return type matches the listener.
  1116. >     TypeMirror returnType = executableElement.getReturnType();
  1117.       if (returnType instanceof TypeVariable) {
  1118.         TypeVariable typeVariable = (TypeVariable) returnType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1082: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  1080.   
  1081.       ListenerMethod method;
  1082. >     ListenerMethod[] methods = listener.method();
  1083.       if (methods.length > 1) {
  1084.         throw new IllegalStateException(String.format("Multiple listener methods specified on @%s.",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1087: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `listener`.
  1085.             annotationClass.getSimpleName()));
  1086.       } else if (methods.length == 1) {
  1087. >       if (listener.callbacks() != ListenerClass.NONE.class) {
  1088.           throw new IllegalStateException(
  1089.               String.format("Both method() and callback() defined on @%s.",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1146: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodParameterUsed`.
  1144.   
  1145.           for (int j = 0; j < parameterTypes.length; j++) {
  1146. >           if (methodParameterUsed.get(j)) {
  1147.               continue;
  1148.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1154: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodParameterUsed`.
  1152.                 || isInterface(methodParameterType)) {
  1153.               parameters[i] = new Parameter(j, TypeName.get(methodParameterType));
  1154. >             methodParameterUsed.set(j);
  1155.               break;
  1156.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1137: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodParameters`.
  1135.         BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1136.         String[] parameterTypes = method.parameters();
  1137. >       for (int i = 0; i < methodParameters.size(); i++) {
  1138.           VariableElement methodParameter = methodParameters.get(i);
  1139.           TypeMirror methodParameterType = methodParameter.asType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1138: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodParameters`.
  1136.         String[] parameterTypes = method.parameters();
  1137.         for (int i = 0; i < methodParameters.size(); i++) {
  1138. >         VariableElement methodParameter = methodParameters.get(i);
  1139.           TypeMirror methodParameterType = methodParameter.asType();
  1140.           if (methodParameterType instanceof TypeVariable) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1172: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `methodParameters`.
  1170.                   .append(j + 1)
  1171.                   .append(": ")
  1172. >                 .append(methodParameters.get(j).asType().toString())
  1173.                   .append("\n    ");
  1174.               if (parameter == null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1108: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1106.       // Verify that the method has equal to or less than the number of parameters as the listener.
  1107.       List<? extends VariableElement> methodParameters = executableElement.getParameters();
  1108. >     if (methodParameters.size() > method.parameters().length) {
  1109.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1110.             annotationClass.getSimpleName(), method.parameters().length,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1110: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1108.       if (methodParameters.size() > method.parameters().length) {
  1109.         error(element, "@%s methods can have at most %s parameter(s). (%s.%s)",
  1110. >           annotationClass.getSimpleName(), method.parameters().length,
  1111.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1112.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1121: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1119.         returnType = typeVariable.getUpperBound();
  1120.       }
  1121. >     if (!returnType.toString().equals(method.returnType())) {
  1122.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1123.             annotationClass.getSimpleName(), method.returnType(),

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1123: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1121.       if (!returnType.toString().equals(method.returnType())) {
  1122.         error(element, "@%s methods must have a '%s' return type. (%s.%s)",
  1123. >           annotationClass.getSimpleName(), method.returnType(),
  1124.             enclosingElement.getQualifiedName(), element.getSimpleName());
  1125.         hasError = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1136: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1134.         parameters = new Parameter[methodParameters.size()];
  1135.         BitSet methodParameterUsed = new BitSet(methodParameters.size());
  1136. >       String[] parameterTypes = method.parameters();
  1137.         for (int i = 0; i < methodParameters.size(); i++) {
  1138.           VariableElement methodParameter = methodParameters.get(i);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1184: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1182.             }
  1183.             builder.append("\n\nMethods may have up to ")
  1184. >               .append(method.parameters().length)
  1185.                 .append(" parameter(s):\n");
  1186.             for (String parameterType : method.parameters()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1186: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  1184.                 .append(method.parameters().length)
  1185.                 .append(" parameter(s):\n");
  1186. >           for (String parameterType : method.parameters()) {
  1187.               builder.append("\n  ").append(parameterType);
  1188.             }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1201: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$619`.
  1199.       Map<Integer, Id> resourceIds = elementToIds(element, annotationClass, ids);
  1200.   
  1201. >     for (Map.Entry<Integer, Id> entry : resourceIds.entrySet()) {
  1202.         if (!builder.addMethod(entry.getValue(), listener, method, binding)) {
  1203.           error(element, "Multiple listener methods with return value specified for ID %d. (%s.%s)",

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1215: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeMirror`.
  1213.     private boolean isInterface(TypeMirror typeMirror) {
  1214.       return typeMirror instanceof DeclaredType
  1215. >         && ((DeclaredType) typeMirror).asElement().getKind() == INTERFACE;
  1216.     }
  1217.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1225: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ButterKnifeProcessor.isSubtypeOfType(TypeMirror,String)`.
  1223.         return false;
  1224.       }
  1225. >     DeclaredType declaredType = (DeclaredType) typeMirror;
  1226.       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1227.       if (typeArguments.size() > 0) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1226: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `declaredType`.
  1224.       }
  1225.       DeclaredType declaredType = (DeclaredType) typeMirror;
  1226. >     List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1227.       if (typeArguments.size() > 0) {
  1228.         StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1228: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `declaredType`.
  1226.       List<? extends TypeMirror> typeArguments = declaredType.getTypeArguments();
  1227.       if (typeArguments.size() > 0) {
  1228. >       StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1229.         typeString.append('<');
  1230.         for (int i = 0; i < typeArguments.size(); i++) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1241: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `declaredType`.
  1239.         }
  1240.       }
  1241. >     Element element = declaredType.asElement();
  1242.       if (!(element instanceof TypeElement)) {
  1243.         return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1250: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$73`.
  1248.         return true;
  1249.       }
  1250. >     for (TypeMirror interfaceType : typeElement.getInterfaces()) {
  1251.         if (isSubtypeOfType(interfaceType, otherType)) {
  1252.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1230: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeArguments`.
  1228.         StringBuilder typeString = new StringBuilder(declaredType.asElement().toString());
  1229.         typeString.append('<');
  1230. >       for (int i = 0; i < typeArguments.size(); i++) {
  1231.           if (i > 0) {
  1232.             typeString.append(',');

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1222: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeMirror`.
  1220.         return true;
  1221.       }
  1222. >     if (typeMirror.getKind() != TypeKind.DECLARED) {
  1223.         return false;
  1224.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1232: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeString`.
  1230.         for (int i = 0; i < typeArguments.size(); i++) {
  1231.           if (i > 0) {
  1232. >           typeString.append(',');
  1233.           }
  1234.           typeString.append('?');

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1234: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeString`.
  1232.             typeString.append(',');
  1233.           }
  1234. >         typeString.append('?');
  1235.         }
  1236.         typeString.append('>');

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1236: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeString`.
  1234.           typeString.append('?');
  1235.         }
  1236. >       typeString.append('>');
  1237.         if (typeString.toString().equals(otherType)) {
  1238.           return true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1237: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeString`.
  1235.         }
  1236.         typeString.append('>');
  1237. >       if (typeString.toString().equals(otherType)) {
  1238.           return true;
  1239.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1259: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `otherType`.
  1257.   
  1258.     private static boolean isTypeEqual(TypeMirror typeMirror, String otherType) {
  1259. >     return otherType.equals(typeMirror.toString());
  1260.     }
  1261.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1259: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeMirror`.
  1257.   
  1258.     private static boolean isTypeEqual(TypeMirror typeMirror, String otherType) {
  1259. >     return otherType.equals(typeMirror.toString());
  1260.     }
  1261.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1264: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builderMap`.
  1262.     private BindingSet.Builder getOrCreateBindingBuilder(
  1263.         Map<TypeElement, BindingSet.Builder> builderMap, TypeElement enclosingElement) {
  1264. >     BindingSet.Builder builder = builderMap.get(enclosingElement);
  1265.       if (builder == null) {
  1266.         builder = BindingSet.newBuilder(enclosingElement);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1267: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builderMap`.
  1265.       if (builder == null) {
  1266.         builder = BindingSet.newBuilder(enclosingElement);
  1267. >       builderMap.put(enclosingElement, builder);
  1268.       }
  1269.       return builder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1281: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `parents`.
  1279.         }
  1280.         typeElement = (TypeElement) ((DeclaredType) type).asElement();
  1281. >       if (parents.contains(typeElement)) {
  1282.           return typeElement;
  1283.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1276: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `typeElement`.
  1274.       TypeMirror type;
  1275.       while (true) {
  1276. >       type = typeElement.getSuperclass();
  1277.         if (type.getKind() == TypeKind.NONE) {
  1278.           return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1278: error: GRADUAL_STATIC
  possibly-null return in nonnull method `TypeElement ButterKnifeProcessor.findParentType(TypeElement,Set)`.
  1276.         type = typeElement.getSuperclass();
  1277.         if (type.getKind() == TypeKind.NONE) {
  1278. >         return null;
  1279.         }
  1280.         typeElement = (TypeElement) ((DeclaredType) type).asElement();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1330: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.elementToIds(Element,Class,int[])`.
  1328.   
  1329.       // Every value looked up should have an Id
  1330. >     for (int value : values) {
  1331.         resourceIds.putIfAbsent(value, new Id(value));
  1332.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1333: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Map ButterKnifeProcessor.elementToIds(Element,Class,int[])`.
  1331.         resourceIds.putIfAbsent(value, new Id(value));
  1332.       }
  1333. >     return resourceIds;
  1334.     }
  1335.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1330: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `values`.
  1328.   
  1329.       // Every value looked up should have an Id
  1330. >     for (int value : values) {
  1331.         resourceIds.putIfAbsent(value, new Id(value));
  1332.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1331: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `resourceIds`.
  1329.       // Every value looked up should have an Id
  1330.       for (int value : values) {
  1331. >       resourceIds.putIfAbsent(value, new Id(value));
  1332.       }
  1333.       return resourceIds;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1337: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1335.   
  1336.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1337. >     for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1338.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1339.         if (simpleName.equals(annotationName)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1337: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$5`.
  1335.   
  1336.     private static boolean hasAnnotationWithName(Element element, String simpleName) {
  1337. >     for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1338.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1339.         if (simpleName.equals(annotationName)) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1339: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `simpleName`.
  1337.       for (AnnotationMirror mirror : element.getAnnotationMirrors()) {
  1338.         String annotationName = mirror.getAnnotationType().asElement().getSimpleName().toString();
  1339. >       if (simpleName.equals(annotationName)) {
  1340.           return true;
  1341.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1351: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1349.   
  1350.     private static boolean isListenerRequired(ExecutableElement element) {
  1351. >     return element.getAnnotation(Optional.class) == null;
  1352.     }
  1353.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1357: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotation`.
  1355.         Class<? extends Annotation> annotation) {
  1356.       for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1357. >       if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1358.           return annotationMirror;
  1359.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1356: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `element`.
  1354.     private static @Nullable AnnotationMirror getMirror(Element element,
  1355.         Class<? extends Annotation> annotation) {
  1356. >     for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1357.         if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1358.           return annotationMirror;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1356: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$5`.
  1354.     private static @Nullable AnnotationMirror getMirror(Element element,
  1355.         Class<? extends Annotation> annotation) {
  1356. >     for (AnnotationMirror annotationMirror : element.getAnnotationMirrors()) {
  1357.         if (annotationMirror.getAnnotationType().toString().equals(annotation.getCanonicalName())) {
  1358.           return annotationMirror;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1361: error: GRADUAL_STATIC
  possibly-null return in nonnull method `AnnotationMirror ButterKnifeProcessor.getMirror(Element,Class)`.
  1359.         }
  1360.       }
  1361. >     return null;
  1362.     }
  1363.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1369: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `elements`.
  1367.      */
  1368.     private static boolean hasAndroidX(Elements elements) {
  1369. >     return elements.getTypeElement("androidx.core.content.ContextCompat") != null;
  1370.     }
  1371.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1376: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `jcFieldAccess`.
  1374.   
  1375.       @Override public void visitSelect(JCTree.JCFieldAccess jcFieldAccess) {
  1376. >       Symbol symbol = jcFieldAccess.sym;
  1377.         if (symbol.getEnclosingElement() != null
  1378.             && symbol.getEnclosingElement().getEnclosingElement() != null

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1383: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor$RScanner.visitSelect(JCTree$JCFieldAccess)`.
  1381.             int value = (Integer) requireNonNull(((Symbol.VarSymbol) symbol).getConstantValue());
  1382.             resourceIds.put(value, new Id(value, symbol));
  1383. >         } catch (Exception ignored) { }
  1384.         }
  1385.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1389: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `jcLiteral`.
  1387.       @Override public void visitLiteral(JCTree.JCLiteral jcLiteral) {
  1388.         try {
  1389. >         int value = (Integer) jcLiteral.value;
  1390.           resourceIds.put(value, new Id(value));
  1391.         } catch (Exception ignored) { }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java:1391: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnifeProcessor$RScanner.visitLiteral(JCTree$JCLiteral)`.
  1389.           int value = (Integer) jcLiteral.value;
  1390.           resourceIds.put(value, new Id(value));
  1391. >       } catch (Exception ignored) { }
  1392.       }
  1393.   

Summary of the reports

     GRADUAL_CHECK: 389
  GRADUAL_BOUNDARY: 77
    GRADUAL_STATIC: 39Found 1 issue

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-compiler/src/test/java/butterknife/compiler/BindingSetTest.java:30: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.compiler.BindingSetTest$TestViewBinding.description`.
  28.   
  29.       private TestViewBinding(String description) {
  30. >       this.description = description;
  31.       }
  32.   

Summary of the reports

  GRADUAL_BOUNDARY: 1Found 15 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  11.   
  12.     public A(View view) {
  13. >     ButterKnife.bind(this, view);
  14.     }
  15.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public B(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public D(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public E(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public F(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public C(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public H(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  15.     public G(View view) {
  16.       super(view);
  17. >     ButterKnife.bind(this, view);
  18.     }
  19.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:25: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int SimpleAdapter.getCount()`.
  23.   
  24.     @Override public int getCount() {
  25. >     return CONTENTS.length;
  26.     }
  27.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:31: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  29.       alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);
  31. >     view.startAnimation(alphaAnimation);
  32.     };
  33.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String SimpleAdapter.getItem(int)`.
  27.   
  28.     @Override public String getItem(int position) {
  29. >     return CONTENTS[position];
  30.     }
  31.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:33: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `long SimpleAdapter.getItemId(int)`.
  31.   
  32.     @Override public long getItemId(int position) {
  33. >     return position;
  34.     }
  35.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous argument `parent` passed to nonnull parameter.
  39.         holder = (ViewHolder) view.getTag();
  40.       } else {
  41. >       view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42.         holder = new ViewHolder(view);
  43.         view.setTag(holder);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:61: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  59.   
  60.       ViewHolder(View view) {
  61. >       ButterKnife.bind(this, view);
  62.       }
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:63: warning: GRADUAL_BOUNDARY
  check ambiguous argument `savedInstanceState` passed to nonnull parameter.
  61.   
  62.     @Override protected void onCreate(Bundle savedInstanceState) {
  63. >     super.onCreate(savedInstanceState);
  64.       setContentView(R.layout.simple_activity);
  65.       ButterKnife.bind(this);

Summary of the reports

  GRADUAL_BOUNDARY: 14
     GRADUAL_CHECK: 1Found 243 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:12: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ListenerUnbinder.setter`.
  10.     ListenerUnbinder(List<T> targets, Setter<T, ?> setter) {
  11.       this.targets = targets;
  12. >     this.setter = setter;
  13.     }
  14.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:11: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ListenerUnbinder.targets`.
  9.   
  10.     ListenerUnbinder(List<T> targets, Setter<T, ?> setter) {
  11. >     this.targets = targets;
  12.       this.setter = setter;
  13.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.FieldUnbinder.field`.
  11.     FieldUnbinder(Object target, Field field) {
  12.       this.target = target;
  13. >     this.field = field;
  14.     }
  15.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:12: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.FieldUnbinder.target`.
  10.   
  11.     FieldUnbinder(Object target, Field field) {
  12. >     this.target = target;
  13.       this.field = field;
  14.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:18: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$8`.
  16.         throw new IllegalStateException("Bindings already cleared.");
  17.       }
  18. >     for (Unbinder unbinder : unbinders) {
  19.         unbinder.unbind();
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:21: error: GRADUAL_STATIC
  possibly-null assignment to nonnull field `butterknife.CompositeUnbinder.unbinders`.
  19.         unbinder.unbind();
  20.       }
  21. >     unbinders = null;
  22.     }
  23.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:16: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  14.   
  15.     @Override public void unbind() {
  16. >     ViewCollections.set(targets, setter, null);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:17: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  15.   
  16.     @Override public void unbind() {
  17. >     trySet(field, target, null);
  18.     }
  19.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ButterKnife.debug`.
  54.     /** Control whether debug logging is enabled. */
  55.     public static void setDebug(boolean debug) {
  56. >     ButterKnife.debug = debug;
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:228: warning: GRADUAL_BOUNDARY
  check ambiguous argument `unbinders` passed to nonnull parameter.
  226.   
  227.       if (debug) Log.d(TAG, "HIT: Reflectively found " + unbinders.size() + " bindings.");
  228. >     return new CompositeUnbinder(unbinders);
  229.     }
  230.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:142: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  140.         }
  141.   
  142. >       for (Field field : targetClass.getDeclaredFields()) {
  143.           int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  189.         }
  190.   
  191. >       for (Method method : targetClass.getDeclaredMethods()) {
  192.           Unbinder unbinder;
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$212`.
  189.         }
  190.   
  191. >       for (Method method : targetClass.getDeclaredMethods()) {
  192.           Unbinder unbinder;
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:142: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$45`.
  140.         }
  141.   
  142. >       for (Field field : targetClass.getDeclaredFields()) {
  143.           int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:187: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  185.           if (unbinders.size() - unbinderStartingSize > 1) {
  186.             throw new IllegalStateException(
  187. >               "More than one bind annotation on " + targetClass.getName() + "." + field.getName());
  188.           }
  189.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:136: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  134.   
  135.       while (true) {
  136. >       String clsName = targetClass.getName();
  137.         if (clsName.startsWith("android.") || clsName.startsWith("java.")
  138.             || clsName.startsWith("androidx.")) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:142: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  140.         }
  141.   
  142. >       for (Field field : targetClass.getDeclaredFields()) {
  143.           int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:187: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  185.           if (unbinders.size() - unbinderStartingSize > 1) {
  186.             throw new IllegalStateException(
  187. >               "More than one bind annotation on " + targetClass.getName() + "." + field.getName());
  188.           }
  189.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  189.         }
  190.   
  191. >       for (Method method : targetClass.getDeclaredMethods()) {
  192.           Unbinder unbinder;
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:219: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  217.         }
  218.   
  219. >       targetClass = targetClass.getSuperclass();
  220.       }
  221.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:143: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  141.   
  142.         for (Field field : targetClass.getDeclaredFields()) {
  143. >         int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;
  145.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:147: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  145.   
  146.           unbinder = parseBindView(target, field, source);
  147. >         if (unbinder != null) unbinders.add(unbinder);
  148.   
  149.           unbinder = parseBindViews(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:150: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  148.   
  149.           unbinder = parseBindViews(target, field, source);
  150. >         if (unbinder != null) unbinders.add(unbinder);
  151.   
  152.           unbinder = parseBindAnim(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:153: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  151.   
  152.           unbinder = parseBindAnim(target, field, source);
  153. >         if (unbinder != null) unbinders.add(unbinder);
  154.   
  155.           unbinder = parseBindArray(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:156: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  154.   
  155.           unbinder = parseBindArray(target, field, source);
  156. >         if (unbinder != null) unbinders.add(unbinder);
  157.   
  158.           unbinder = parseBindBitmap(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:159: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  157.   
  158.           unbinder = parseBindBitmap(target, field, source);
  159. >         if (unbinder != null) unbinders.add(unbinder);
  160.   
  161.           unbinder = parseBindBool(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:162: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  160.   
  161.           unbinder = parseBindBool(target, field, source);
  162. >         if (unbinder != null) unbinders.add(unbinder);
  163.   
  164.           unbinder = parseBindColor(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:165: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  163.   
  164.           unbinder = parseBindColor(target, field, source);
  165. >         if (unbinder != null) unbinders.add(unbinder);
  166.   
  167.           unbinder = parseBindDimen(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:168: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  166.   
  167.           unbinder = parseBindDimen(target, field, source);
  168. >         if (unbinder != null) unbinders.add(unbinder);
  169.   
  170.           unbinder = parseBindDrawable(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:171: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  169.   
  170.           unbinder = parseBindDrawable(target, field, source);
  171. >         if (unbinder != null) unbinders.add(unbinder);
  172.   
  173.           unbinder = parseBindFloat(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  172.   
  173.           unbinder = parseBindFloat(target, field, source);
  174. >         if (unbinder != null) unbinders.add(unbinder);
  175.   
  176.           unbinder = parseBindFont(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:177: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  175.   
  176.           unbinder = parseBindFont(target, field, source);
  177. >         if (unbinder != null) unbinders.add(unbinder);
  178.   
  179.           unbinder = parseBindInt(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:180: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  178.   
  179.           unbinder = parseBindInt(target, field, source);
  180. >         if (unbinder != null) unbinders.add(unbinder);
  181.   
  182.           unbinder = parseBindString(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:183: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  181.   
  182.           unbinder = parseBindString(target, field, source);
  183. >         if (unbinder != null) unbinders.add(unbinder);
  184.   
  185.           if (unbinders.size() - unbinderStartingSize > 1) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:185: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  183.           if (unbinder != null) unbinders.add(unbinder);
  184.   
  185. >         if (unbinders.size() - unbinderStartingSize > 1) {
  186.             throw new IllegalStateException(
  187.                 "More than one bind annotation on " + targetClass.getName() + "." + field.getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:195: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  193.   
  194.           unbinder = parseOnCheckedChanged(target, method, source);
  195. >         if (unbinder != null) unbinders.add(unbinder);
  196.   
  197.           unbinder = parseOnClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:198: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  196.   
  197.           unbinder = parseOnClick(target, method, source);
  198. >         if (unbinder != null) unbinders.add(unbinder);
  199.   
  200.           unbinder = parseOnEditorAction(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  199.   
  200.           unbinder = parseOnEditorAction(target, method, source);
  201. >         if (unbinder != null) unbinders.add(unbinder);
  202.   
  203.           unbinder = parseOnFocusChange(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:204: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  202.   
  203.           unbinder = parseOnFocusChange(target, method, source);
  204. >         if (unbinder != null) unbinders.add(unbinder);
  205.   
  206.           unbinder = parseOnItemClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:207: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  205.   
  206.           unbinder = parseOnItemClick(target, method, source);
  207. >         if (unbinder != null) unbinders.add(unbinder);
  208.   
  209.           unbinder = parseOnItemLongClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:210: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  208.   
  209.           unbinder = parseOnItemLongClick(target, method, source);
  210. >         if (unbinder != null) unbinders.add(unbinder);
  211.   
  212.           unbinder = parseOnLongClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:213: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  211.   
  212.           unbinder = parseOnLongClick(target, method, source);
  213. >         if (unbinder != null) unbinders.add(unbinder);
  214.   
  215.           unbinder = parseOnTouch(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:216: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  214.   
  215.           unbinder = parseOnTouch(target, method, source);
  216. >         if (unbinder != null) unbinders.add(unbinder);
  217.         }
  218.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:222: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  220.       }
  221.   
  222. >     if (unbinders.isEmpty()) {
  223.         if (debug) Log.d(TAG, "MISS: Reached framework class. Abandoning search.");
  224.         return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:227: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  225.       }
  226.   
  227. >     if (debug) Log.d(TAG, "HIT: Reflectively found " + unbinders.size() + " bindings.");
  228.       return new CompositeUnbinder(unbinders);
  229.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:248: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  246.         view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  247.       }
  248. >     trySet(field, target, view);
  249.   
  250.       return new FieldUnbinder(target, field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:244: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter.
  242.       Object view;
  243.       if (isRequired) {
  244. >       view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  245.       } else {
  246.         view = Utils.findOptionalViewAsType(source, id, who, viewClass);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:246: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter.
  244.         view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  245.       } else {
  246. >       view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  247.       }
  248.       trySet(field, target, view);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:232: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  230.   
  231.     private static @Nullable Unbinder parseBindView(Object target, Field field, View source) {
  232. >     BindView bindView = field.getAnnotation(BindView.class);
  233.       if (bindView == null) {
  234.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:240: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  238.       int id = bindView.value();
  239.       boolean isRequired = isRequired(field);
  240. >     Class<?> viewClass = field.getType();
  241.       String who = "field '" + field.getName() + "'";
  242.       Object view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:241: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  239.       boolean isRequired = isRequired(field);
  240.       Class<?> viewClass = field.getType();
  241. >     String who = "field '" + field.getName() + "'";
  242.       Object view;
  243.       if (isRequired) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:234: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindView(Object,Field,View)`.
  232.       BindView bindView = field.getAnnotation(BindView.class);
  233.       if (bindView == null) {
  234. >       return null;
  235.       }
  236.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  300.       }
  301.   
  302. >     trySet(field, target, value);
  303.       return new FieldUnbinder(target, field);
  304.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter,check ambiguous argument `value` passed to nonnull parameter.
  300.       }
  301.   
  302. >     trySet(field, target, value);
  303.       return new FieldUnbinder(target, field);
  304.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  283.         Object view;
  284.         if (isRequired) {
  285. >         view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287.           view = Utils.findOptionalViewAsType(source, id, who, viewClass);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  285.           view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287. >         view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  288.         }
  289.         if (view != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  283.         Object view;
  284.         if (isRequired) {
  285. >         view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287.           view = Utils.findOptionalViewAsType(source, id, who, viewClass);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  285.           view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287. >         view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  288.         }
  289.         if (view != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:268: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  266.         Type fieldType = field.getGenericType();
  267.         if (fieldType instanceof ParameterizedType) {
  268. >         Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];
  269.           // TODO real rawType impl!!!!
  270.           viewClass = (Class<?>) viewType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:270: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  268.           Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];
  269.           // TODO real rawType impl!!!!
  270. >         viewClass = (Class<?>) viewType;
  271.         } else {
  272.           throw new IllegalStateException(); // TODO

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:282: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  280.       List<Object> views = new ArrayList<>(ids.length);
  281.       String who = "field '" + field.getName() + "'";
  282. >     for (int id : ids) {
  283.         Object view;
  284.         if (isRequired) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:299: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  297.         value = views.toArray(viewArray);
  298.       } else {
  299. >       value = views;
  300.       }
  301.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:282: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  280.       List<Object> views = new ArrayList<>(ids.length);
  281.       String who = "field '" + field.getName() + "'";
  282. >     for (int id : ids) {
  283.         Object view;
  284.         if (isRequired) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  252.   
  253.     private static @Nullable Unbinder parseBindViews(Object target, Field field, View source) {
  254. >     BindViews bindViews = field.getAnnotation(BindViews.class);
  255.       if (bindViews == null) {
  256.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:260: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  258.       validateMember(field);
  259.   
  260. >     Class<?> fieldClass = field.getType();
  261.       Class<?> viewClass;
  262.       boolean isArray = fieldClass.isArray();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:266: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  264.         viewClass = fieldClass.getComponentType();
  265.       } else if (fieldClass == List.class) {
  266. >       Type fieldType = field.getGenericType();
  267.         if (fieldType instanceof ParameterizedType) {
  268.           Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:281: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  279.       boolean isRequired = isRequired(field);
  280.       List<Object> views = new ArrayList<>(ids.length);
  281. >     String who = "field '" + field.getName() + "'";
  282.       for (int id : ids) {
  283.         Object view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:290: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  288.         }
  289.         if (view != null) {
  290. >         views.add(view);
  291.         }
  292.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:296: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  294.       Object value;
  295.       if (isArray) {
  296. >       Object[] viewArray = (Object[]) Array.newInstance(viewClass, views.size());
  297.         value = views.toArray(viewArray);
  298.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:297: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  295.       if (isArray) {
  296.         Object[] viewArray = (Object[]) Array.newInstance(viewClass, views.size());
  297. >       value = views.toArray(viewArray);
  298.       } else {
  299.         value = views;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:256: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  254.       BindViews bindViews = field.getAnnotation(BindViews.class);
  255.       if (bindViews == null) {
  256. >       return null;
  257.       }
  258.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:323: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  321.         throw new IllegalStateException(); // TODO
  322.       }
  323. >     trySet(field, target, value);
  324.   
  325.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:307: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  305.   
  306.     private static @Nullable Unbinder parseBindAnim(Object target, Field field, View source) {
  307. >     BindAnim bindAnim = field.getAnnotation(BindAnim.class);
  308.       if (bindAnim == null) {
  309.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:317: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  315.   
  316.       Object value;
  317. >     Class<?> fieldType = field.getType();
  318.       if (fieldType == Animation.class) {
  319.         value = resources.getAnimation(id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:314: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  312.   
  313.       int id = bindAnim.value();
  314. >     Resources resources = source.getContext().getResources();
  315.   
  316.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:309: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindAnim(Object,Field,View)`.
  307.       BindAnim bindAnim = field.getAnnotation(BindAnim.class);
  308.       if (bindAnim == null) {
  309. >       return null;
  310.       }
  311.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:356: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  354.         throw new IllegalStateException(); // TODO
  355.       }
  356. >     trySet(field, target, value);
  357.   
  358.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:329: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  327.   
  328.     private static @Nullable Unbinder parseBindArray(Object target, Field field, View source) {
  329. >     BindArray bindArray = field.getAnnotation(BindArray.class);
  330.       if (bindArray == null) {
  331.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:339: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  337.   
  338.       Object value;
  339. >     Class<?> fieldType = field.getType();
  340.       if (fieldType == TypedArray.class) {
  341.         value = resources.obtainTypedArray(id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:336: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  334.   
  335.       int id = bindArray.value();
  336. >     Resources resources = source.getContext().getResources();
  337.   
  338.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:331: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindArray(Object,Field,View)`.
  329.       BindArray bindArray = field.getAnnotation(BindArray.class);
  330.       if (bindArray == null) {
  331. >       return null;
  332.       }
  333.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:378: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  376.         throw new IllegalStateException(); // TODO
  377.       }
  378. >     trySet(field, target, value);
  379.   
  380.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:362: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  360.   
  361.     private static @Nullable Unbinder parseBindBitmap(Object target, Field field, View source) {
  362. >     BindBitmap bindBitmap = field.getAnnotation(BindBitmap.class);
  363.       if (bindBitmap == null) {
  364.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:372: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  370.   
  371.       Object value;
  372. >     Class<?> fieldType = field.getType();
  373.       if (fieldType == Bitmap.class) {
  374.         value = BitmapFactory.decodeResource(resources, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:369: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  367.   
  368.       int id = bindBitmap.value();
  369. >     Resources resources = source.getContext().getResources();
  370.   
  371.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:364: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindBitmap(Object,Field,View)`.
  362.       BindBitmap bindBitmap = field.getAnnotation(BindBitmap.class);
  363.       if (bindBitmap == null) {
  364. >       return null;
  365.       }
  366.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:400: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  398.         throw new IllegalStateException(); // TODO
  399.       }
  400. >     trySet(field, target, value);
  401.   
  402.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:384: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  382.   
  383.     private static @Nullable Unbinder parseBindBool(Object target, Field field, View source) {
  384. >     BindBool bindBool = field.getAnnotation(BindBool.class);
  385.       if (bindBool == null) {
  386.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:394: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  392.   
  393.       Object value;
  394. >     Class<?> fieldType = field.getType();
  395.       if (fieldType == boolean.class) {
  396.         value = resources.getBoolean(id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:391: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  389.   
  390.       int id = bindBool.value();
  391. >     Resources resources = source.getContext().getResources();
  392.   
  393.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:386: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindBool(Object,Field,View)`.
  384.       BindBool bindBool = field.getAnnotation(BindBool.class);
  385.       if (bindBool == null) {
  386. >       return null;
  387.       }
  388.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:424: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  422.         throw new IllegalStateException(); // TODO
  423.       }
  424. >     trySet(field, target, value);
  425.   
  426.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:406: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  404.   
  405.     private static @Nullable Unbinder parseBindColor(Object target, Field field, View source) {
  406. >     BindColor bindColor = field.getAnnotation(BindColor.class);
  407.       if (bindColor == null) {
  408.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:416: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  414.   
  415.       Object value;
  416. >     Class<?> fieldType = field.getType();
  417.       if (fieldType == int.class) {
  418.         value = ContextCompat.getColor(context, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:413: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  411.   
  412.       int id = bindColor.value();
  413. >     Context context = source.getContext();
  414.   
  415.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:408: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindColor(Object,Field,View)`.
  406.       BindColor bindColor = field.getAnnotation(BindColor.class);
  407.       if (bindColor == null) {
  408. >       return null;
  409.       }
  410.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:448: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  446.         throw new IllegalStateException(); // TODO
  447.       }
  448. >     trySet(field, target, value);
  449.   
  450.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:430: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  428.   
  429.     private static @Nullable Unbinder parseBindDimen(Object target, Field field, View source) {
  430. >     BindDimen bindDimen = field.getAnnotation(BindDimen.class);
  431.       if (bindDimen == null) {
  432.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:439: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  437.       Resources resources = source.getContext().getResources();
  438.   
  439. >     Class<?> fieldType = field.getType();
  440.       Object value;
  441.       if (fieldType == int.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:437: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  435.   
  436.       int id = bindDimen.value();
  437. >     Resources resources = source.getContext().getResources();
  438.   
  439.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:432: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindDimen(Object,Field,View)`.
  430.       BindDimen bindDimen = field.getAnnotation(BindDimen.class);
  431.       if (bindDimen == null) {
  432. >       return null;
  433.       }
  434.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:473: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  471.         throw new IllegalStateException(); // TODO
  472.       }
  473. >     trySet(field, target, value);
  474.   
  475.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:454: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  452.   
  453.     private static @Nullable Unbinder parseBindDrawable(Object target, Field field, View source) {
  454. >     BindDrawable bindDrawable = field.getAnnotation(BindDrawable.class);
  455.       if (bindDrawable == null) {
  456.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:464: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  462.       Context context = source.getContext();
  463.   
  464. >     Class<?> fieldType = field.getType();
  465.       Object value;
  466.       if (fieldType == Drawable.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:462: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  460.       int id = bindDrawable.value();
  461.       int tint = bindDrawable.tint();
  462. >     Context context = source.getContext();
  463.   
  464.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:456: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindDrawable(Object,Field,View)`.
  454.       BindDrawable bindDrawable = field.getAnnotation(BindDrawable.class);
  455.       if (bindDrawable == null) {
  456. >       return null;
  457.       }
  458.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:495: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  493.         throw new IllegalStateException(); // TODO
  494.       }
  495. >     trySet(field, target, value);
  496.   
  497.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:479: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  477.   
  478.     private static @Nullable Unbinder parseBindFloat(Object target, Field field, View source) {
  479. >     BindFloat bindInt = field.getAnnotation(BindFloat.class);
  480.       if (bindInt == null) {
  481.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:488: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  486.       Context context = source.getContext();
  487.   
  488. >     Class<?> fieldType = field.getType();
  489.       Object value;
  490.       if (fieldType == float.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:486: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  484.   
  485.       int id = bindInt.value();
  486. >     Context context = source.getContext();
  487.   
  488.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:481: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindFloat(Object,Field,View)`.
  479.       BindFloat bindInt = field.getAnnotation(BindFloat.class);
  480.       if (bindInt == null) {
  481. >       return null;
  482.       }
  483.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:521: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  519.         throw new IllegalStateException(); // TODO
  520.       }
  521. >     trySet(field, target, value);
  522.   
  523.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:501: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  499.   
  500.     private static @Nullable Unbinder parseBindFont(Object target, Field field, View source) {
  501. >     BindFont bindFont = field.getAnnotation(BindFont.class);
  502.       if (bindFont == null) {
  503.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:511: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  509.       Context context = source.getContext();
  510.   
  511. >     Class<?> fieldType = field.getType();
  512.       Object value;
  513.       if (fieldType == Typeface.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:509: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  507.       int id = bindFont.value();
  508.       int style = bindFont.style();
  509. >     Context context = source.getContext();
  510.   
  511.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:503: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindFont(Object,Field,View)`.
  501.       BindFont bindFont = field.getAnnotation(BindFont.class);
  502.       if (bindFont == null) {
  503. >       return null;
  504.       }
  505.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:543: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  541.         throw new IllegalStateException(); // TODO
  542.       }
  543. >     trySet(field, target, value);
  544.   
  545.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:527: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  525.   
  526.     private static @Nullable Unbinder parseBindInt(Object target, Field field, View source) {
  527. >     BindInt bindInt = field.getAnnotation(BindInt.class);
  528.       if (bindInt == null) {
  529.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:536: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  534.       Resources resources = source.getContext().getResources();
  535.   
  536. >     Class<?> fieldType = field.getType();
  537.       Object value;
  538.       if (fieldType == int.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  532.   
  533.       int id = bindInt.value();
  534. >     Resources resources = source.getContext().getResources();
  535.   
  536.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:529: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindInt(Object,Field,View)`.
  527.       BindInt bindInt = field.getAnnotation(BindInt.class);
  528.       if (bindInt == null) {
  529. >       return null;
  530.       }
  531.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:565: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  563.         throw new IllegalStateException(); // TODO
  564.       }
  565. >     trySet(field, target, value);
  566.   
  567.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:549: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  547.   
  548.     private static @Nullable Unbinder parseBindString(Object target, Field field, View source) {
  549. >     BindString bindString = field.getAnnotation(BindString.class);
  550.       if (bindString == null) {
  551.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:558: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  556.       Context context = source.getContext();
  557.   
  558. >     Class<?> fieldType = field.getType();
  559.       Object value;
  560.       if (fieldType == String.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:556: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  554.   
  555.       int id = bindString.value();
  556. >     Context context = source.getContext();
  557.   
  558.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:551: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindString(Object,Field,View)`.
  549.       BindString bindString = field.getAnnotation(BindString.class);
  550.       if (bindString == null) {
  551. >       return null;
  552.       }
  553.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:572: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  570.     private static @Nullable Unbinder parseOnCheckedChanged(final Object target, final Method method,
  571.         View source) {
  572. >     OnCheckedChanged onCheckedChanged = method.getAnnotation(OnCheckedChanged.class);
  573.       if (onCheckedChanged == null) {
  574.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:582: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  580.   
  581.       List<CompoundButton> views =
  582. >         findViews(source, onCheckedChanged.value(), isRequired(method), method.getName(),
  583.               CompoundButton.class);
  584.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:574: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnCheckedChanged(Object,Method,View)`.
  572.       OnCheckedChanged onCheckedChanged = method.getAnnotation(OnCheckedChanged.class);
  573.       if (onCheckedChanged == null) {
  574. >       return null;
  575.       }
  576.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:587: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  585.       ViewCollections.set(views, ON_CHECKED_CHANGE,
  586.           (buttonView, isChecked) -> tryInvoke(method, target,
  587. >             argumentTransformer.transform(buttonView, isChecked)));
  588.   
  589.       return new ListenerUnbinder<>(views, ON_CHECKED_CHANGE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:594: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  592.     private static @Nullable Unbinder parseOnClick(final Object target, final Method method,
  593.         View source) {
  594. >     OnClick onClick = method.getAnnotation(OnClick.class);
  595.       if (onClick == null) {
  596.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  602.   
  603.       List<View> views =
  604. >         findViews(source, onClick.value(), isRequired(method), method.getName(), View.class);
  605.   
  606.       ViewCollections.set(views, ON_CLICK,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:596: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnClick(Object,Method,View)`.
  594.       OnClick onClick = method.getAnnotation(OnClick.class);
  595.       if (onClick == null) {
  596. >       return null;
  597.       }
  598.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:607: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  605.   
  606.       ViewCollections.set(views, ON_CLICK,
  607. >         v -> tryInvoke(method, target, argumentTransformer.transform(v)));
  608.   
  609.       return new ListenerUnbinder<>(views, ON_CLICK);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:614: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  612.     private static @Nullable Unbinder parseOnEditorAction(final Object target, final Method method,
  613.         View source) {
  614. >     OnEditorAction onEditorAction = method.getAnnotation(OnEditorAction.class);
  615.       if (onEditorAction == null) {
  616.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:624: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  622.   
  623.       List<TextView> views =
  624. >         findViews(source, onEditorAction.value(), isRequired(method), method.getName(),
  625.               TextView.class);
  626.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:616: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnEditorAction(Object,Method,View)`.
  614.       OnEditorAction onEditorAction = method.getAnnotation(OnEditorAction.class);
  615.       if (onEditorAction == null) {
  616. >       return null;
  617.       }
  618.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:628: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  626.   
  627.       ViewCollections.set(views, ON_EDITOR_ACTION, (v, actionId, event) -> {
  628. >       Object value = tryInvoke(method, target, argumentTransformer.transform(v, actionId, event));
  629.         //noinspection SimplifiableConditionalExpression
  630.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:640: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  638.     private static @Nullable Unbinder parseOnFocusChange(final Object target, final Method method,
  639.         View source) {
  640. >     OnFocusChange onFocusChange = method.getAnnotation(OnFocusChange.class);
  641.       if (onFocusChange == null) {
  642.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:650: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  648.   
  649.       List<View> views =
  650. >         findViews(source, onFocusChange.value(), isRequired(method), method.getName(), View.class);
  651.   
  652.       ViewCollections.set(views, ON_FOCUS_CHANGE,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:642: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnFocusChange(Object,Method,View)`.
  640.       OnFocusChange onFocusChange = method.getAnnotation(OnFocusChange.class);
  641.       if (onFocusChange == null) {
  642. >       return null;
  643.       }
  644.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:653: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  651.   
  652.       ViewCollections.set(views, ON_FOCUS_CHANGE,
  653. >         (v, hasFocus) -> tryInvoke(method, target, argumentTransformer.transform(v, hasFocus)));
  654.   
  655.       return new ListenerUnbinder<>(views, ON_FOCUS_CHANGE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:660: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  658.     private static @Nullable Unbinder parseOnItemClick(final Object target, final Method method,
  659.         View source) {
  660. >     OnItemClick onItemClick = method.getAnnotation(OnItemClick.class);
  661.       if (onItemClick == null) {
  662.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:670: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  668.   
  669.       List<AdapterView<?>> views =
  670. >         findViews(source, onItemClick.value(), isRequired(method), method.getName(),
  671.               AdapterView.class);
  672.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:662: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnItemClick(Object,Method,View)`.
  660.       OnItemClick onItemClick = method.getAnnotation(OnItemClick.class);
  661.       if (onItemClick == null) {
  662. >       return null;
  663.       }
  664.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:675: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  673.       ViewCollections.set(views, ON_ITEM_CLICK,
  674.           (parent, view, position, id) -> tryInvoke(method, target,
  675. >             argumentTransformer.transform(parent, view, position, id)));
  676.   
  677.       return new ListenerUnbinder<>(views, ON_ITEM_CLICK);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:682: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  680.     private static @Nullable Unbinder parseOnItemLongClick(final Object target, final Method method,
  681.         View source) {
  682. >     OnItemLongClick onItemLongClick = method.getAnnotation(OnItemLongClick.class);
  683.       if (onItemLongClick == null) {
  684.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:692: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  690.   
  691.       List<AdapterView<?>> views =
  692. >         findViews(source, onItemLongClick.value(), isRequired(method), method.getName(),
  693.               AdapterView.class);
  694.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:684: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnItemLongClick(Object,Method,View)`.
  682.       OnItemLongClick onItemLongClick = method.getAnnotation(OnItemLongClick.class);
  683.       if (onItemLongClick == null) {
  684. >       return null;
  685.       }
  686.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:697: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  695.       ViewCollections.set(views, ON_ITEM_LONG_CLICK, (parent, view, position, id) -> {
  696.         Object value =
  697. >           tryInvoke(method, target, argumentTransformer.transform(parent, view, position, id));
  698.         //noinspection SimplifiableConditionalExpression
  699.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:709: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  707.     private static @Nullable Unbinder parseOnLongClick(final Object target, final Method method,
  708.         View source) {
  709. >     OnLongClick onLongClick = method.getAnnotation(OnLongClick.class);
  710.       if (onLongClick == null) {
  711.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:719: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  717.   
  718.       List<View> views =
  719. >         findViews(source, onLongClick.value(), isRequired(method), method.getName(), View.class);
  720.   
  721.       ViewCollections.set(views, ON_LONG_CLICK, v -> {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:711: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnLongClick(Object,Method,View)`.
  709.       OnLongClick onLongClick = method.getAnnotation(OnLongClick.class);
  710.       if (onLongClick == null) {
  711. >       return null;
  712.       }
  713.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:722: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  720.   
  721.       ViewCollections.set(views, ON_LONG_CLICK, v -> {
  722. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  723.         //noinspection SimplifiableConditionalExpression
  724.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:734: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  732.     private static @Nullable Unbinder parseOnTouch(final Object target, final Method method,
  733.         View source) {
  734. >     OnTouch onTouch = method.getAnnotation(OnTouch.class);
  735.       if (onTouch == null) {
  736.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:744: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  742.   
  743.       List<View> views =
  744. >         findViews(source, onTouch.value(), isRequired(method), method.getName(), View.class);
  745.   
  746.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:736: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnTouch(Object,Method,View)`.
  734.       OnTouch onTouch = method.getAnnotation(OnTouch.class);
  735.       if (onTouch == null) {
  736. >       return null;
  737.       }
  738.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:747: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  745.   
  746.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {
  747. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  748.         //noinspection SimplifiableConditionalExpression
  749.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:764: warning: GRADUAL_BOUNDARY
  check ambiguous argument `name` passed to nonnull parameter.
  762.       }
  763.   
  764. >     String who = "method '" + name + "'";
  765.       List<T> views = new ArrayList<>(ids.length);
  766.       for (int id : ids) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:761: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter.
  759.         String name, Class<? extends View> cls) {
  760.       if (ids.length == 1 && ids[0] == View.NO_ID) {
  761. >       return singletonList((T) cls.cast(source));
  762.       }
  763.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  766.       for (int id : ids) {
  767.         if (isRequired) {
  768. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:770: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770. >         T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  771.           if (view != null) {
  772.             views.add(view);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  766.       for (int id : ids) {
  767.         if (isRequired) {
  768. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:770: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770. >         T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  771.           if (view != null) {
  772.             views.add(view);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:766: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List ButterKnife.findViews(View,int[],boolean,String,Class)`.
  764.       String who = "method '" + name + "'";
  765.       List<T> views = new ArrayList<>(ids.length);
  766. >     for (int id : ids) {
  767.         if (isRequired) {
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:776: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List ButterKnife.findViews(View,int[],boolean,String,Class)`.
  774.         }
  775.       }
  776. >     return views;
  777.     }
  778.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:760: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  758.     private static <T extends View> List<T> findViews(View source, int[] ids, boolean isRequired,
  759.         String name, Class<? extends View> cls) {
  760. >     if (ids.length == 1 && ids[0] == View.NO_ID) {
  761.         return singletonList((T) cls.cast(source));
  762.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:766: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  764.       String who = "method '" + name + "'";
  765.       List<T> views = new ArrayList<>(ids.length);
  766. >     for (int id : ids) {
  767.         if (isRequired) {
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:761: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  759.         String name, Class<? extends View> cls) {
  760.       if (ids.length == 1 && ids[0] == View.NO_ID) {
  761. >       return singletonList((T) cls.cast(source));
  762.       }
  763.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  766.       for (int id : ids) {
  767.         if (isRequired) {
  768. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:772: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  771.           if (view != null) {
  772. >           views.add(view);
  773.           }
  774.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:780: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  778.   
  779.     private static <T extends AccessibleObject & Member> void validateMember(T object) {
  780. >     int modifiers = object.getModifiers();
  781.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  782.         throw new IllegalStateException(object.getDeclaringClass().getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:782: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  780.       int modifiers = object.getModifiers();
  781.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  782. >       throw new IllegalStateException(object.getDeclaringClass().getName()
  783.             + "."
  784.             + object.getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:784: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  782.         throw new IllegalStateException(object.getDeclaringClass().getName()
  783.             + "."
  784. >           + object.getName()
  785.             + " must not be private or static");
  786.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:788: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  786.       }
  787.       if ((modifiers & PUBLIC) == 0) {
  788. >       object.setAccessible(true);
  789.       }
  790.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:799: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `expected`.
  797.       }
  798.       if (returnType != expected) {
  799. >       String expectedType = "'" + expected.getName() + "'";
  800.         if (expected != void.class) {
  801.           expectedType = "'void' or " + expectedType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:794: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  792.     /** Returns true when the return value should be propagated. Use a default otherwise. */
  793.     private static boolean validateReturnType(Method method, Class<?> expected) {
  794. >     Class<?> returnType = method.getReturnType();
  795.       if (returnType == void.class) {
  796.         return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:803: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  801.           expectedType = "'void' or " + expectedType;
  802.         }
  803. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  804.             + "."
  805.             + method.getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:805: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  803.         throw new IllegalStateException(method.getDeclaringClass().getName()
  804.             + "."
  805. >           + method.getName()
  806.             + " must have return type of "
  807.             + expectedType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ButterKnife.isRequired(Field)`.
  811.   
  812.     private static boolean isRequired(Field field) {
  813. >     for (Annotation annotation : field.getAnnotations()) {
  814.         if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$2`.
  811.   
  812.     private static boolean isRequired(Field field) {
  813. >     for (Annotation annotation : field.getAnnotations()) {
  814.         if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:814: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotation`.
  812.     private static boolean isRequired(Field field) {
  813.       for (Annotation annotation : field.getAnnotations()) {
  814. >       if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;
  816.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  811.   
  812.     private static boolean isRequired(Field field) {
  813. >     for (Annotation annotation : field.getAnnotations()) {
  814.         if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:822: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  820.   
  821.     private static boolean isRequired(Method method) {
  822. >     return method.getAnnotation(Optional.class) == null;
  823.     }
  824.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:863: warning: GRADUAL_BOUNDARY
  check ambiguous argument `callbackParameterType` passed to nonnull parameter.
  861.               callbackParameterType.equals(targetParameterType)
  862.               /* or subtype of view */
  863. >             || (View.class.isAssignableFrom(callbackParameterType)
  864.                   && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:861: warning: GRADUAL_BOUNDARY
  check ambiguous argument `targetParameterType` passed to nonnull parameter.
  859.   
  860.           if (/* exact match */
  861. >             callbackParameterType.equals(targetParameterType)
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:864: warning: GRADUAL_BOUNDARY
  check ambiguous argument `targetParameterType` passed to nonnull parameter.
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)
  864. >                 && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */
  866.               || targetParameterType.isInterface()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:829: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  827.       Class<?>[] targetParameterTypes = method.getParameterTypes();
  828.   
  829. >     int targetParameterLength = targetParameterTypes.length;
  830.       if (targetParameterLength == 0) {
  831.         // Special case the common case of no arguments.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:835: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  833.       }
  834.   
  835. >     int callbackParameterLength = callbackParameterTypes.length;
  836.       if (targetParameterLength > callbackParameterLength) {
  837.         throw new IllegalStateException(method.getDeclaringClass().getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:853: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  851.       final int[] indexMap = new int[targetParameterLength];
  852.       nextTarget: for (int targetIndex = 0; targetIndex < targetParameterLength; targetIndex++) {
  853. >       Class<?> targetParameterType = targetParameterTypes[targetIndex];
  854.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  855.           if (callbackIndexUsed[callbackIndex]) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  856.             continue; // We have already used this callback argument.
  857.           }
  858. >         Class<?> callbackParameterType = callbackParameterTypes[callbackIndex];
  859.   
  860.           if (/* exact match */

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  895.             .append(callbackParameterLength)
  896.             .append(" parameter(s):\n");
  897. >       for (Class<?> callbackParameter : callbackParameterTypes) {
  898.           builder.append("\n  ").append(callbackParameter.getName());
  899.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:855: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackIndexUsed`.
  853.         Class<?> targetParameterType = targetParameterTypes[targetIndex];
  854.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  855. >         if (callbackIndexUsed[callbackIndex]) {
  856.             continue; // We have already used this callback argument.
  857.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackParameterTypes`.
  856.             continue; // We have already used this callback argument.
  857.           }
  858. >         Class<?> callbackParameterType = callbackParameterTypes[callbackIndex];
  859.   
  860.           if (/* exact match */

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackParameterTypes`.
  895.             .append(callbackParameterLength)
  896.             .append(" parameter(s):\n");
  897. >       for (Class<?> callbackParameter : callbackParameterTypes) {
  898.           builder.append("\n  ").append(callbackParameter.getName());
  899.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:889: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackParameterTypes`,check method call on ambiguous pointer `*(callbackParameterTypes)[_]`.
  887.                 .append(indexMap[i])
  888.                 .append(": ")
  889. >               .append(callbackParameterTypes[indexMap[i]].getName());
  890.           } else {
  891.             builder.append("did not match any listener parameters");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:887: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `indexMap`.
  885.           if (i < targetIndex) {
  886.             builder.append("matched listener parameter #")
  887. >               .append(indexMap[i])
  888.                 .append(": ")
  889.                 .append(callbackParameterTypes[indexMap[i]].getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:853: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `targetParameterTypes`.
  851.       final int[] indexMap = new int[targetParameterLength];
  852.       nextTarget: for (int targetIndex = 0; targetIndex < targetParameterLength; targetIndex++) {
  853. >       Class<?> targetParameterType = targetParameterTypes[targetIndex];
  854.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  855.           if (callbackIndexUsed[callbackIndex]) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:883: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `targetParameterTypes`,check method call on ambiguous pointer `*(targetParameterTypes)[_]`.
  881.               .append(i + 1)
  882.               .append(": ")
  883. >             .append(targetParameterTypes[i].getName())
  884.               .append("\n    ");
  885.           if (i < targetIndex) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:880: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  878.             .append(" method arguments.");
  879.         for (int i = 0; i < targetParameterLength; i++) {
  880. >         builder.append("\n\n  Parameter #")
  881.               .append(i + 1)
  882.               .append(": ")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:886: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  884.               .append("\n    ");
  885.           if (i < targetIndex) {
  886. >           builder.append("matched listener parameter #")
  887.                 .append(indexMap[i])
  888.                 .append(": ")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:891: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  889.                 .append(callbackParameterTypes[indexMap[i]].getName());
  890.           } else {
  891. >           builder.append("did not match any listener parameters");
  892.           }
  893.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:894: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  892.           }
  893.         }
  894. >       builder.append("\n\nMethods may have up to ")
  895.             .append(callbackParameterLength)
  896.             .append(" parameter(s):\n");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:898: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  896.             .append(" parameter(s):\n");
  897.         for (Class<?> callbackParameter : callbackParameterTypes) {
  898. >         builder.append("\n  ").append(callbackParameter.getName());
  899.         }
  900.         builder.append(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:900: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  898.           builder.append("\n  ").append(callbackParameter.getName());
  899.         }
  900. >       builder.append(
  901.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  902.         throw new IllegalStateException(builder.toString());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:902: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  900.         builder.append(
  901.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  902. >       throw new IllegalStateException(builder.toString());
  903.       }
  904.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:861: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackParameterType`.
  859.   
  860.           if (/* exact match */
  861. >             callbackParameterType.equals(targetParameterType)
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:864: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackParameterType`.
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)
  864. >                 && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */
  866.               || targetParameterType.isInterface()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:898: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackParameter`.
  896.             .append(" parameter(s):\n");
  897.         for (Class<?> callbackParameter : callbackParameterTypes) {
  898. >         builder.append("\n  ").append(callbackParameter.getName());
  899.         }
  900.         builder.append(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:827: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  825.     private static ArgumentTransformer createArgumentTransformer(Method method,
  826.         Class<?>[] callbackParameterTypes) {
  827. >     Class<?>[] targetParameterTypes = method.getParameterTypes();
  828.   
  829.       int targetParameterLength = targetParameterTypes.length;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:837: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  835.       int callbackParameterLength = callbackParameterTypes.length;
  836.       if (targetParameterLength > callbackParameterLength) {
  837. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  838.             + "."
  839.             + method.getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:839: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  837.         throw new IllegalStateException(method.getDeclaringClass().getName()
  838.             + "."
  839. >           + method.getName()
  840.             + " must have at most "
  841.             + callbackParameterLength

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:875: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  873.         StringBuilder builder = new StringBuilder();
  874.         builder.append("Unable to match ")
  875. >           .append(method.getDeclaringClass().getName())
  876.             .append('.')
  877.             .append(method.getName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:877: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  875.             .append(method.getDeclaringClass().getName())
  876.             .append('.')
  877. >           .append(method.getName())
  878.             .append(" method arguments.");
  879.         for (int i = 0; i < targetParameterLength; i++) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:866: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetParameterType`.
  864.                   && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */
  866. >             || targetParameterType.isInterface()) {
  867.             indexMap[targetIndex] = callbackIndex;
  868.             callbackIndexUsed[callbackIndex] = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:905: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ButterKnife$1.val$indexMap`.
  903.       }
  904.   
  905. >     return new ArgumentTransformer() {
  906.         @Override public Object[] transform(Object... arguments) {
  907.           Object[] newArguments = new Object[indexMap.length];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:909: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `arguments`.
  907.           Object[] newArguments = new Object[indexMap.length];
  908.           for (int i = 0; i < indexMap.length; i++) {
  909. >           newArguments[i] = arguments[indexMap[i]];
  910.           }
  911.           return newArguments;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:918: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  916.           for (int i = 0; i < indexMap.length; i++) {
  917.             if (i > 0) {
  918. >             builder.append(", ");
  919.             }
  920.             builder.append(i).append(" => ").append(indexMap[i]);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:920: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  918.               builder.append(", ");
  919.             }
  920. >           builder.append(i).append(" => ").append(indexMap[i]);
  921.           }
  922.           return builder.append(']').toString();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:922: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  920.             builder.append(i).append(" => ").append(indexMap[i]);
  921.           }
  922. >         return builder.append(']').toString();
  923.         }
  924.       };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:930: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnife.trySet(Field,Object,Object)`.
  928.       try {
  929.         field.set(target, value);
  930. >     } catch (IllegalAccessException e) {
  931.         throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  932.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:930: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnife.trySet(Field,Object,Object)`.
  928.       try {
  929.         field.set(target, value);
  930. >     } catch (IllegalAccessException e) {
  931.         throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  932.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:944: warning: GRADUAL_BOUNDARY
  check ambiguous argument `method` passed to nonnull parameter.
  942.         cause = e;
  943.       }
  944. >     throw new RuntimeException(
  945.           "Unable to invoke " + method + " on " + target + " with arguments "
  946.               + Arrays.toString(arguments), cause);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:944: warning: GRADUAL_BOUNDARY
  check ambiguous argument `target` passed to nonnull parameter.
  942.         cause = e;
  943.       }
  944. >     throw new RuntimeException(
  945.           "Unable to invoke " + method + " on " + target + " with arguments "
  946.               + Arrays.toString(arguments), cause);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:939: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  937.       try {
  938.         return method.invoke(target, arguments);
  939. >     } catch (IllegalAccessException e) {
  940.         cause = e;
  941.       } catch (InvocationTargetException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:940: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  938.         return method.invoke(target, arguments);
  939.       } catch (IllegalAccessException e) {
  940. >       cause = e;
  941.       } catch (InvocationTargetException e) {
  942.         cause = e;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:941: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  939.       } catch (IllegalAccessException e) {
  940.         cause = e;
  941. >     } catch (InvocationTargetException e) {
  942.         cause = e;
  943.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:942: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  940.         cause = e;
  941.       } catch (InvocationTargetException e) {
  942. >       cause = e;
  943.       }
  944.       throw new RuntimeException(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:938: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  936.       Throwable cause;
  937.       try {
  938. >       return method.invoke(target, arguments);
  939.       } catch (IllegalAccessException e) {
  940.         cause = e;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:939: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  937.       try {
  938.         return method.invoke(target, arguments);
  939. >     } catch (IllegalAccessException e) {
  940.         cause = e;
  941.       } catch (InvocationTargetException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:950: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  948.   
  949.     private static final Setter<CompoundButton, CompoundButton.OnCheckedChangeListener>
  950. >       ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952.         (view, value, index) -> view.setOnClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:950: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  948.   
  949.     private static final Setter<CompoundButton, CompoundButton.OnCheckedChangeListener>
  950. >       ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952.         (view, value, index) -> view.setOnClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:952: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  950.         ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952. >       (view, value, index) -> view.setOnClickListener(value);
  953.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  954.         (view, value, index) -> view.setOnEditorActionListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:952: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  950.         ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952. >       (view, value, index) -> view.setOnClickListener(value);
  953.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  954.         (view, value, index) -> view.setOnEditorActionListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:954: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  952.         (view, value, index) -> view.setOnClickListener(value);
  953.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  954. >       (view, value, index) -> view.setOnEditorActionListener(value);
  955.     private static final Setter<View, View.OnFocusChangeListener> ON_FOCUS_CHANGE =
  956.         (view, value, index) -> view.setOnFocusChangeListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:956: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  954.         (view, value, index) -> view.setOnEditorActionListener(value);
  955.     private static final Setter<View, View.OnFocusChangeListener> ON_FOCUS_CHANGE =
  956. >       (view, value, index) -> view.setOnFocusChangeListener(value);
  957.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  958.         (view, value, index) -> view.setOnItemClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:958: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  956.         (view, value, index) -> view.setOnFocusChangeListener(value);
  957.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  958. >       (view, value, index) -> view.setOnItemClickListener(value);
  959.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:958: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  956.         (view, value, index) -> view.setOnFocusChangeListener(value);
  957.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  958. >       (view, value, index) -> view.setOnItemClickListener(value);
  959.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:960: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  958.         (view, value, index) -> view.setOnItemClickListener(value);
  959.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  960. >       ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  961.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  962.         (view, value, index) -> view.setOnLongClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:962: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  961.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  962. >       (view, value, index) -> view.setOnLongClickListener(value);
  963.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  964.         (view, value, index) -> view.setOnTouchListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:962: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  961.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  962. >       (view, value, index) -> view.setOnLongClickListener(value);
  963.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  964.         (view, value, index) -> view.setOnTouchListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:964: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  962.         (view, value, index) -> view.setOnLongClickListener(value);
  963.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  964. >       (view, value, index) -> view.setOnTouchListener(value);
  965.   
  966.     private static final Class<?>[] ON_CHECKED_CHANGED_TYPES =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:992: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] ButterKnife$ArgumentTransformer$2.transform(java.lang.Object[])`.
  990.       ArgumentTransformer IDENTITY = new ArgumentTransformer() {
  991.         @Override public Object[] transform(Object... arguments) {
  992. >         return arguments;
  993.         }
  994.   

Summary of the reports

     GRADUAL_CHECK: 155
  GRADUAL_BOUNDARY: 62
    GRADUAL_STATIC: 26Found 15 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  11.   
  12.     public A(View view) {
  13. >     ButterKnife.bind(this, view);
  14.     }
  15.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public B(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public D(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public E(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public F(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public C(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public H(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  15.     public G(View view) {
  16.       super(view);
  17. >     ButterKnife.bind(this, view);
  18.     }
  19.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:25: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int SimpleAdapter.getCount()`.
  23.   
  24.     @Override public int getCount() {
  25. >     return CONTENTS.length;
  26.     }
  27.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:31: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  29.       alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);
  31. >     view.startAnimation(alphaAnimation);
  32.     };
  33.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String SimpleAdapter.getItem(int)`.
  27.   
  28.     @Override public String getItem(int position) {
  29. >     return CONTENTS[position];
  30.     }
  31.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:33: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `long SimpleAdapter.getItemId(int)`.
  31.   
  32.     @Override public long getItemId(int position) {
  33. >     return position;
  34.     }
  35.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous argument `parent` passed to nonnull parameter.
  39.         holder = (ViewHolder) view.getTag();
  40.       } else {
  41. >       view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42.         holder = new ViewHolder(view);
  43.         view.setTag(holder);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:61: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  59.   
  60.       ViewHolder(View view) {
  61. >       ButterKnife.bind(this, view);
  62.       }
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:63: warning: GRADUAL_BOUNDARY
  check ambiguous argument `savedInstanceState` passed to nonnull parameter.
  61.   
  62.     @Override protected void onCreate(Bundle savedInstanceState) {
  63. >     super.onCreate(savedInstanceState);
  64.       setContentView(R.layout.simple_activity);
  65.       ButterKnife.bind(this);

Summary of the reports

  GRADUAL_BOUNDARY: 14
     GRADUAL_CHECK: 1Found 15 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  11.   
  12.     public A(View view) {
  13. >     ButterKnife.bind(this, view);
  14.     }
  15.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public B(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public D(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public E(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public F(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public C(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public H(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  15.     public G(View view) {
  16.       super(view);
  17. >     ButterKnife.bind(this, view);
  18.     }
  19.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:25: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int SimpleAdapter.getCount()`.
  23.   
  24.     @Override public int getCount() {
  25. >     return CONTENTS.length;
  26.     }
  27.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:31: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  29.       alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);
  31. >     view.startAnimation(alphaAnimation);
  32.     };
  33.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String SimpleAdapter.getItem(int)`.
  27.   
  28.     @Override public String getItem(int position) {
  29. >     return CONTENTS[position];
  30.     }
  31.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:33: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `long SimpleAdapter.getItemId(int)`.
  31.   
  32.     @Override public long getItemId(int position) {
  33. >     return position;
  34.     }
  35.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous argument `parent` passed to nonnull parameter.
  39.         holder = (ViewHolder) view.getTag();
  40.       } else {
  41. >       view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42.         holder = new ViewHolder(view);
  43.         view.setTag(holder);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:61: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  59.   
  60.       ViewHolder(View view) {
  61. >       ButterKnife.bind(this, view);
  62.       }
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:63: warning: GRADUAL_BOUNDARY
  check ambiguous argument `savedInstanceState` passed to nonnull parameter.
  61.   
  62.     @Override protected void onCreate(Bundle savedInstanceState) {
  63. >     super.onCreate(savedInstanceState);
  64.       setContentView(R.layout.simple_activity);
  65.       ButterKnife.bind(this);

Summary of the reports

  GRADUAL_BOUNDARY: 14
     GRADUAL_CHECK: 1Found 243 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:12: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ListenerUnbinder.setter`.
  10.     ListenerUnbinder(List<T> targets, Setter<T, ?> setter) {
  11.       this.targets = targets;
  12. >     this.setter = setter;
  13.     }
  14.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:11: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ListenerUnbinder.targets`.
  9.   
  10.     ListenerUnbinder(List<T> targets, Setter<T, ?> setter) {
  11. >     this.targets = targets;
  12.       this.setter = setter;
  13.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.FieldUnbinder.field`.
  11.     FieldUnbinder(Object target, Field field) {
  12.       this.target = target;
  13. >     this.field = field;
  14.     }
  15.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:12: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.FieldUnbinder.target`.
  10.   
  11.     FieldUnbinder(Object target, Field field) {
  12. >     this.target = target;
  13.       this.field = field;
  14.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:18: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$8`.
  16.         throw new IllegalStateException("Bindings already cleared.");
  17.       }
  18. >     for (Unbinder unbinder : unbinders) {
  19.         unbinder.unbind();
  20.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java:21: error: GRADUAL_STATIC
  possibly-null assignment to nonnull field `butterknife.CompositeUnbinder.unbinders`.
  19.         unbinder.unbind();
  20.       }
  21. >     unbinders = null;
  22.     }
  23.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ListenerUnbinder.java:16: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  14.   
  15.     @Override public void unbind() {
  16. >     ViewCollections.set(targets, setter, null);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/FieldUnbinder.java:17: error: GRADUAL_STATIC
  possibly-null argument `null` passed to nonnull parameter.
  15.   
  16.     @Override public void unbind() {
  17. >     trySet(field, target, null);
  18.     }
  19.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:56: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ButterKnife.debug`.
  54.     /** Control whether debug logging is enabled. */
  55.     public static void setDebug(boolean debug) {
  56. >     ButterKnife.debug = debug;
  57.     }
  58.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:228: warning: GRADUAL_BOUNDARY
  check ambiguous argument `unbinders` passed to nonnull parameter.
  226.   
  227.       if (debug) Log.d(TAG, "HIT: Reflectively found " + unbinders.size() + " bindings.");
  228. >     return new CompositeUnbinder(unbinders);
  229.     }
  230.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:142: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  140.         }
  141.   
  142. >       for (Field field : targetClass.getDeclaredFields()) {
  143.           int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.bind(Object,View)`.
  189.         }
  190.   
  191. >       for (Method method : targetClass.getDeclaredMethods()) {
  192.           Unbinder unbinder;
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$212`.
  189.         }
  190.   
  191. >       for (Method method : targetClass.getDeclaredMethods()) {
  192.           Unbinder unbinder;
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:142: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$45`.
  140.         }
  141.   
  142. >       for (Field field : targetClass.getDeclaredFields()) {
  143.           int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:187: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  185.           if (unbinders.size() - unbinderStartingSize > 1) {
  186.             throw new IllegalStateException(
  187. >               "More than one bind annotation on " + targetClass.getName() + "." + field.getName());
  188.           }
  189.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:136: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  134.   
  135.       while (true) {
  136. >       String clsName = targetClass.getName();
  137.         if (clsName.startsWith("android.") || clsName.startsWith("java.")
  138.             || clsName.startsWith("androidx.")) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:142: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  140.         }
  141.   
  142. >       for (Field field : targetClass.getDeclaredFields()) {
  143.           int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:187: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  185.           if (unbinders.size() - unbinderStartingSize > 1) {
  186.             throw new IllegalStateException(
  187. >               "More than one bind annotation on " + targetClass.getName() + "." + field.getName());
  188.           }
  189.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:191: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  189.         }
  190.   
  191. >       for (Method method : targetClass.getDeclaredMethods()) {
  192.           Unbinder unbinder;
  193.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:219: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetClass`.
  217.         }
  218.   
  219. >       targetClass = targetClass.getSuperclass();
  220.       }
  221.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:143: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  141.   
  142.         for (Field field : targetClass.getDeclaredFields()) {
  143. >         int unbinderStartingSize = unbinders.size();
  144.           Unbinder unbinder;
  145.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:147: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  145.   
  146.           unbinder = parseBindView(target, field, source);
  147. >         if (unbinder != null) unbinders.add(unbinder);
  148.   
  149.           unbinder = parseBindViews(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:150: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  148.   
  149.           unbinder = parseBindViews(target, field, source);
  150. >         if (unbinder != null) unbinders.add(unbinder);
  151.   
  152.           unbinder = parseBindAnim(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:153: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  151.   
  152.           unbinder = parseBindAnim(target, field, source);
  153. >         if (unbinder != null) unbinders.add(unbinder);
  154.   
  155.           unbinder = parseBindArray(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:156: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  154.   
  155.           unbinder = parseBindArray(target, field, source);
  156. >         if (unbinder != null) unbinders.add(unbinder);
  157.   
  158.           unbinder = parseBindBitmap(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:159: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  157.   
  158.           unbinder = parseBindBitmap(target, field, source);
  159. >         if (unbinder != null) unbinders.add(unbinder);
  160.   
  161.           unbinder = parseBindBool(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:162: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  160.   
  161.           unbinder = parseBindBool(target, field, source);
  162. >         if (unbinder != null) unbinders.add(unbinder);
  163.   
  164.           unbinder = parseBindColor(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:165: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  163.   
  164.           unbinder = parseBindColor(target, field, source);
  165. >         if (unbinder != null) unbinders.add(unbinder);
  166.   
  167.           unbinder = parseBindDimen(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:168: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  166.   
  167.           unbinder = parseBindDimen(target, field, source);
  168. >         if (unbinder != null) unbinders.add(unbinder);
  169.   
  170.           unbinder = parseBindDrawable(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:171: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  169.   
  170.           unbinder = parseBindDrawable(target, field, source);
  171. >         if (unbinder != null) unbinders.add(unbinder);
  172.   
  173.           unbinder = parseBindFloat(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:174: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  172.   
  173.           unbinder = parseBindFloat(target, field, source);
  174. >         if (unbinder != null) unbinders.add(unbinder);
  175.   
  176.           unbinder = parseBindFont(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:177: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  175.   
  176.           unbinder = parseBindFont(target, field, source);
  177. >         if (unbinder != null) unbinders.add(unbinder);
  178.   
  179.           unbinder = parseBindInt(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:180: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  178.   
  179.           unbinder = parseBindInt(target, field, source);
  180. >         if (unbinder != null) unbinders.add(unbinder);
  181.   
  182.           unbinder = parseBindString(target, field, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:183: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  181.   
  182.           unbinder = parseBindString(target, field, source);
  183. >         if (unbinder != null) unbinders.add(unbinder);
  184.   
  185.           if (unbinders.size() - unbinderStartingSize > 1) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:185: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  183.           if (unbinder != null) unbinders.add(unbinder);
  184.   
  185. >         if (unbinders.size() - unbinderStartingSize > 1) {
  186.             throw new IllegalStateException(
  187.                 "More than one bind annotation on " + targetClass.getName() + "." + field.getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:195: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  193.   
  194.           unbinder = parseOnCheckedChanged(target, method, source);
  195. >         if (unbinder != null) unbinders.add(unbinder);
  196.   
  197.           unbinder = parseOnClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:198: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  196.   
  197.           unbinder = parseOnClick(target, method, source);
  198. >         if (unbinder != null) unbinders.add(unbinder);
  199.   
  200.           unbinder = parseOnEditorAction(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:201: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  199.   
  200.           unbinder = parseOnEditorAction(target, method, source);
  201. >         if (unbinder != null) unbinders.add(unbinder);
  202.   
  203.           unbinder = parseOnFocusChange(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:204: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  202.   
  203.           unbinder = parseOnFocusChange(target, method, source);
  204. >         if (unbinder != null) unbinders.add(unbinder);
  205.   
  206.           unbinder = parseOnItemClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:207: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  205.   
  206.           unbinder = parseOnItemClick(target, method, source);
  207. >         if (unbinder != null) unbinders.add(unbinder);
  208.   
  209.           unbinder = parseOnItemLongClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:210: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  208.   
  209.           unbinder = parseOnItemLongClick(target, method, source);
  210. >         if (unbinder != null) unbinders.add(unbinder);
  211.   
  212.           unbinder = parseOnLongClick(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:213: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  211.   
  212.           unbinder = parseOnLongClick(target, method, source);
  213. >         if (unbinder != null) unbinders.add(unbinder);
  214.   
  215.           unbinder = parseOnTouch(target, method, source);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:216: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  214.   
  215.           unbinder = parseOnTouch(target, method, source);
  216. >         if (unbinder != null) unbinders.add(unbinder);
  217.         }
  218.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:222: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  220.       }
  221.   
  222. >     if (unbinders.isEmpty()) {
  223.         if (debug) Log.d(TAG, "MISS: Reached framework class. Abandoning search.");
  224.         return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:227: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `unbinders`.
  225.       }
  226.   
  227. >     if (debug) Log.d(TAG, "HIT: Reflectively found " + unbinders.size() + " bindings.");
  228.       return new CompositeUnbinder(unbinders);
  229.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:248: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  246.         view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  247.       }
  248. >     trySet(field, target, view);
  249.   
  250.       return new FieldUnbinder(target, field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:244: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter.
  242.       Object view;
  243.       if (isRequired) {
  244. >       view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  245.       } else {
  246.         view = Utils.findOptionalViewAsType(source, id, who, viewClass);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:246: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter.
  244.         view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  245.       } else {
  246. >       view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  247.       }
  248.       trySet(field, target, view);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:232: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  230.   
  231.     private static @Nullable Unbinder parseBindView(Object target, Field field, View source) {
  232. >     BindView bindView = field.getAnnotation(BindView.class);
  233.       if (bindView == null) {
  234.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:240: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  238.       int id = bindView.value();
  239.       boolean isRequired = isRequired(field);
  240. >     Class<?> viewClass = field.getType();
  241.       String who = "field '" + field.getName() + "'";
  242.       Object view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:241: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  239.       boolean isRequired = isRequired(field);
  240.       Class<?> viewClass = field.getType();
  241. >     String who = "field '" + field.getName() + "'";
  242.       Object view;
  243.       if (isRequired) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:234: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindView(Object,Field,View)`.
  232.       BindView bindView = field.getAnnotation(BindView.class);
  233.       if (bindView == null) {
  234. >       return null;
  235.       }
  236.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  300.       }
  301.   
  302. >     trySet(field, target, value);
  303.       return new FieldUnbinder(target, field);
  304.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:302: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter,check ambiguous argument `value` passed to nonnull parameter.
  300.       }
  301.   
  302. >     trySet(field, target, value);
  303.       return new FieldUnbinder(target, field);
  304.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  283.         Object view;
  284.         if (isRequired) {
  285. >         view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287.           view = Utils.findOptionalViewAsType(source, id, who, viewClass);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  285.           view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287. >         view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  288.         }
  289.         if (view != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:285: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  283.         Object view;
  284.         if (isRequired) {
  285. >         view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287.           view = Utils.findOptionalViewAsType(source, id, who, viewClass);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:287: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `viewClass` passed to nonnull parameter.
  285.           view = Utils.findRequiredViewAsType(source, id, who, viewClass);
  286.         } else {
  287. >         view = Utils.findOptionalViewAsType(source, id, who, viewClass);
  288.         }
  289.         if (view != null) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:268: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  266.         Type fieldType = field.getGenericType();
  267.         if (fieldType instanceof ParameterizedType) {
  268. >         Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];
  269.           // TODO real rawType impl!!!!
  270.           viewClass = (Class<?>) viewType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:270: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  268.           Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];
  269.           // TODO real rawType impl!!!!
  270. >         viewClass = (Class<?>) viewType;
  271.         } else {
  272.           throw new IllegalStateException(); // TODO

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:282: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  280.       List<Object> views = new ArrayList<>(ids.length);
  281.       String who = "field '" + field.getName() + "'";
  282. >     for (int id : ids) {
  283.         Object view;
  284.         if (isRequired) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:299: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  297.         value = views.toArray(viewArray);
  298.       } else {
  299. >       value = views;
  300.       }
  301.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:282: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  280.       List<Object> views = new ArrayList<>(ids.length);
  281.       String who = "field '" + field.getName() + "'";
  282. >     for (int id : ids) {
  283.         Object view;
  284.         if (isRequired) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:254: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  252.   
  253.     private static @Nullable Unbinder parseBindViews(Object target, Field field, View source) {
  254. >     BindViews bindViews = field.getAnnotation(BindViews.class);
  255.       if (bindViews == null) {
  256.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:260: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  258.       validateMember(field);
  259.   
  260. >     Class<?> fieldClass = field.getType();
  261.       Class<?> viewClass;
  262.       boolean isArray = fieldClass.isArray();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:266: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  264.         viewClass = fieldClass.getComponentType();
  265.       } else if (fieldClass == List.class) {
  266. >       Type fieldType = field.getGenericType();
  267.         if (fieldType instanceof ParameterizedType) {
  268.           Type viewType = ((ParameterizedType) fieldType).getActualTypeArguments()[0];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:281: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  279.       boolean isRequired = isRequired(field);
  280.       List<Object> views = new ArrayList<>(ids.length);
  281. >     String who = "field '" + field.getName() + "'";
  282.       for (int id : ids) {
  283.         Object view;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:290: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  288.         }
  289.         if (view != null) {
  290. >         views.add(view);
  291.         }
  292.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:296: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  294.       Object value;
  295.       if (isArray) {
  296. >       Object[] viewArray = (Object[]) Array.newInstance(viewClass, views.size());
  297.         value = views.toArray(viewArray);
  298.       } else {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:297: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  295.       if (isArray) {
  296.         Object[] viewArray = (Object[]) Array.newInstance(viewClass, views.size());
  297. >       value = views.toArray(viewArray);
  298.       } else {
  299.         value = views;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:256: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindViews(Object,Field,View)`.
  254.       BindViews bindViews = field.getAnnotation(BindViews.class);
  255.       if (bindViews == null) {
  256. >       return null;
  257.       }
  258.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:323: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  321.         throw new IllegalStateException(); // TODO
  322.       }
  323. >     trySet(field, target, value);
  324.   
  325.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:307: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  305.   
  306.     private static @Nullable Unbinder parseBindAnim(Object target, Field field, View source) {
  307. >     BindAnim bindAnim = field.getAnnotation(BindAnim.class);
  308.       if (bindAnim == null) {
  309.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:317: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  315.   
  316.       Object value;
  317. >     Class<?> fieldType = field.getType();
  318.       if (fieldType == Animation.class) {
  319.         value = resources.getAnimation(id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:314: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  312.   
  313.       int id = bindAnim.value();
  314. >     Resources resources = source.getContext().getResources();
  315.   
  316.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:309: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindAnim(Object,Field,View)`.
  307.       BindAnim bindAnim = field.getAnnotation(BindAnim.class);
  308.       if (bindAnim == null) {
  309. >       return null;
  310.       }
  311.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:356: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  354.         throw new IllegalStateException(); // TODO
  355.       }
  356. >     trySet(field, target, value);
  357.   
  358.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:329: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  327.   
  328.     private static @Nullable Unbinder parseBindArray(Object target, Field field, View source) {
  329. >     BindArray bindArray = field.getAnnotation(BindArray.class);
  330.       if (bindArray == null) {
  331.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:339: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  337.   
  338.       Object value;
  339. >     Class<?> fieldType = field.getType();
  340.       if (fieldType == TypedArray.class) {
  341.         value = resources.obtainTypedArray(id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:336: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  334.   
  335.       int id = bindArray.value();
  336. >     Resources resources = source.getContext().getResources();
  337.   
  338.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:331: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindArray(Object,Field,View)`.
  329.       BindArray bindArray = field.getAnnotation(BindArray.class);
  330.       if (bindArray == null) {
  331. >       return null;
  332.       }
  333.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:378: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  376.         throw new IllegalStateException(); // TODO
  377.       }
  378. >     trySet(field, target, value);
  379.   
  380.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:362: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  360.   
  361.     private static @Nullable Unbinder parseBindBitmap(Object target, Field field, View source) {
  362. >     BindBitmap bindBitmap = field.getAnnotation(BindBitmap.class);
  363.       if (bindBitmap == null) {
  364.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:372: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  370.   
  371.       Object value;
  372. >     Class<?> fieldType = field.getType();
  373.       if (fieldType == Bitmap.class) {
  374.         value = BitmapFactory.decodeResource(resources, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:369: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  367.   
  368.       int id = bindBitmap.value();
  369. >     Resources resources = source.getContext().getResources();
  370.   
  371.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:364: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindBitmap(Object,Field,View)`.
  362.       BindBitmap bindBitmap = field.getAnnotation(BindBitmap.class);
  363.       if (bindBitmap == null) {
  364. >       return null;
  365.       }
  366.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:400: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  398.         throw new IllegalStateException(); // TODO
  399.       }
  400. >     trySet(field, target, value);
  401.   
  402.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:384: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  382.   
  383.     private static @Nullable Unbinder parseBindBool(Object target, Field field, View source) {
  384. >     BindBool bindBool = field.getAnnotation(BindBool.class);
  385.       if (bindBool == null) {
  386.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:394: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  392.   
  393.       Object value;
  394. >     Class<?> fieldType = field.getType();
  395.       if (fieldType == boolean.class) {
  396.         value = resources.getBoolean(id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:391: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  389.   
  390.       int id = bindBool.value();
  391. >     Resources resources = source.getContext().getResources();
  392.   
  393.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:386: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindBool(Object,Field,View)`.
  384.       BindBool bindBool = field.getAnnotation(BindBool.class);
  385.       if (bindBool == null) {
  386. >       return null;
  387.       }
  388.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:424: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  422.         throw new IllegalStateException(); // TODO
  423.       }
  424. >     trySet(field, target, value);
  425.   
  426.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:406: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  404.   
  405.     private static @Nullable Unbinder parseBindColor(Object target, Field field, View source) {
  406. >     BindColor bindColor = field.getAnnotation(BindColor.class);
  407.       if (bindColor == null) {
  408.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:416: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  414.   
  415.       Object value;
  416. >     Class<?> fieldType = field.getType();
  417.       if (fieldType == int.class) {
  418.         value = ContextCompat.getColor(context, id);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:413: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  411.   
  412.       int id = bindColor.value();
  413. >     Context context = source.getContext();
  414.   
  415.       Object value;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:408: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindColor(Object,Field,View)`.
  406.       BindColor bindColor = field.getAnnotation(BindColor.class);
  407.       if (bindColor == null) {
  408. >       return null;
  409.       }
  410.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:448: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  446.         throw new IllegalStateException(); // TODO
  447.       }
  448. >     trySet(field, target, value);
  449.   
  450.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:430: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  428.   
  429.     private static @Nullable Unbinder parseBindDimen(Object target, Field field, View source) {
  430. >     BindDimen bindDimen = field.getAnnotation(BindDimen.class);
  431.       if (bindDimen == null) {
  432.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:439: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  437.       Resources resources = source.getContext().getResources();
  438.   
  439. >     Class<?> fieldType = field.getType();
  440.       Object value;
  441.       if (fieldType == int.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:437: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  435.   
  436.       int id = bindDimen.value();
  437. >     Resources resources = source.getContext().getResources();
  438.   
  439.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:432: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindDimen(Object,Field,View)`.
  430.       BindDimen bindDimen = field.getAnnotation(BindDimen.class);
  431.       if (bindDimen == null) {
  432. >       return null;
  433.       }
  434.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:473: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  471.         throw new IllegalStateException(); // TODO
  472.       }
  473. >     trySet(field, target, value);
  474.   
  475.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:454: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  452.   
  453.     private static @Nullable Unbinder parseBindDrawable(Object target, Field field, View source) {
  454. >     BindDrawable bindDrawable = field.getAnnotation(BindDrawable.class);
  455.       if (bindDrawable == null) {
  456.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:464: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  462.       Context context = source.getContext();
  463.   
  464. >     Class<?> fieldType = field.getType();
  465.       Object value;
  466.       if (fieldType == Drawable.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:462: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  460.       int id = bindDrawable.value();
  461.       int tint = bindDrawable.tint();
  462. >     Context context = source.getContext();
  463.   
  464.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:456: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindDrawable(Object,Field,View)`.
  454.       BindDrawable bindDrawable = field.getAnnotation(BindDrawable.class);
  455.       if (bindDrawable == null) {
  456. >       return null;
  457.       }
  458.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:495: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  493.         throw new IllegalStateException(); // TODO
  494.       }
  495. >     trySet(field, target, value);
  496.   
  497.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:479: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  477.   
  478.     private static @Nullable Unbinder parseBindFloat(Object target, Field field, View source) {
  479. >     BindFloat bindInt = field.getAnnotation(BindFloat.class);
  480.       if (bindInt == null) {
  481.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:488: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  486.       Context context = source.getContext();
  487.   
  488. >     Class<?> fieldType = field.getType();
  489.       Object value;
  490.       if (fieldType == float.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:486: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  484.   
  485.       int id = bindInt.value();
  486. >     Context context = source.getContext();
  487.   
  488.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:481: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindFloat(Object,Field,View)`.
  479.       BindFloat bindInt = field.getAnnotation(BindFloat.class);
  480.       if (bindInt == null) {
  481. >       return null;
  482.       }
  483.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:521: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  519.         throw new IllegalStateException(); // TODO
  520.       }
  521. >     trySet(field, target, value);
  522.   
  523.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:501: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  499.   
  500.     private static @Nullable Unbinder parseBindFont(Object target, Field field, View source) {
  501. >     BindFont bindFont = field.getAnnotation(BindFont.class);
  502.       if (bindFont == null) {
  503.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:511: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  509.       Context context = source.getContext();
  510.   
  511. >     Class<?> fieldType = field.getType();
  512.       Object value;
  513.       if (fieldType == Typeface.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:509: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  507.       int id = bindFont.value();
  508.       int style = bindFont.style();
  509. >     Context context = source.getContext();
  510.   
  511.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:503: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindFont(Object,Field,View)`.
  501.       BindFont bindFont = field.getAnnotation(BindFont.class);
  502.       if (bindFont == null) {
  503. >       return null;
  504.       }
  505.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:543: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  541.         throw new IllegalStateException(); // TODO
  542.       }
  543. >     trySet(field, target, value);
  544.   
  545.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:527: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  525.   
  526.     private static @Nullable Unbinder parseBindInt(Object target, Field field, View source) {
  527. >     BindInt bindInt = field.getAnnotation(BindInt.class);
  528.       if (bindInt == null) {
  529.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:536: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  534.       Resources resources = source.getContext().getResources();
  535.   
  536. >     Class<?> fieldType = field.getType();
  537.       Object value;
  538.       if (fieldType == int.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:534: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  532.   
  533.       int id = bindInt.value();
  534. >     Resources resources = source.getContext().getResources();
  535.   
  536.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:529: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindInt(Object,Field,View)`.
  527.       BindInt bindInt = field.getAnnotation(BindInt.class);
  528.       if (bindInt == null) {
  529. >       return null;
  530.       }
  531.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:565: warning: GRADUAL_BOUNDARY
  check ambiguous argument `field` passed to nonnull parameter,check ambiguous argument `target` passed to nonnull parameter.
  563.         throw new IllegalStateException(); // TODO
  564.       }
  565. >     trySet(field, target, value);
  566.   
  567.       return Unbinder.EMPTY;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:549: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  547.   
  548.     private static @Nullable Unbinder parseBindString(Object target, Field field, View source) {
  549. >     BindString bindString = field.getAnnotation(BindString.class);
  550.       if (bindString == null) {
  551.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:558: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  556.       Context context = source.getContext();
  557.   
  558. >     Class<?> fieldType = field.getType();
  559.       Object value;
  560.       if (fieldType == String.class) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:556: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `source`.
  554.   
  555.       int id = bindString.value();
  556. >     Context context = source.getContext();
  557.   
  558.       Class<?> fieldType = field.getType();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:551: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseBindString(Object,Field,View)`.
  549.       BindString bindString = field.getAnnotation(BindString.class);
  550.       if (bindString == null) {
  551. >       return null;
  552.       }
  553.       validateMember(field);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:572: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  570.     private static @Nullable Unbinder parseOnCheckedChanged(final Object target, final Method method,
  571.         View source) {
  572. >     OnCheckedChanged onCheckedChanged = method.getAnnotation(OnCheckedChanged.class);
  573.       if (onCheckedChanged == null) {
  574.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:582: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  580.   
  581.       List<CompoundButton> views =
  582. >         findViews(source, onCheckedChanged.value(), isRequired(method), method.getName(),
  583.               CompoundButton.class);
  584.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:574: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnCheckedChanged(Object,Method,View)`.
  572.       OnCheckedChanged onCheckedChanged = method.getAnnotation(OnCheckedChanged.class);
  573.       if (onCheckedChanged == null) {
  574. >       return null;
  575.       }
  576.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:587: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  585.       ViewCollections.set(views, ON_CHECKED_CHANGE,
  586.           (buttonView, isChecked) -> tryInvoke(method, target,
  587. >             argumentTransformer.transform(buttonView, isChecked)));
  588.   
  589.       return new ListenerUnbinder<>(views, ON_CHECKED_CHANGE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:594: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  592.     private static @Nullable Unbinder parseOnClick(final Object target, final Method method,
  593.         View source) {
  594. >     OnClick onClick = method.getAnnotation(OnClick.class);
  595.       if (onClick == null) {
  596.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:604: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  602.   
  603.       List<View> views =
  604. >         findViews(source, onClick.value(), isRequired(method), method.getName(), View.class);
  605.   
  606.       ViewCollections.set(views, ON_CLICK,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:596: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnClick(Object,Method,View)`.
  594.       OnClick onClick = method.getAnnotation(OnClick.class);
  595.       if (onClick == null) {
  596. >       return null;
  597.       }
  598.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:607: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  605.   
  606.       ViewCollections.set(views, ON_CLICK,
  607. >         v -> tryInvoke(method, target, argumentTransformer.transform(v)));
  608.   
  609.       return new ListenerUnbinder<>(views, ON_CLICK);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:614: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  612.     private static @Nullable Unbinder parseOnEditorAction(final Object target, final Method method,
  613.         View source) {
  614. >     OnEditorAction onEditorAction = method.getAnnotation(OnEditorAction.class);
  615.       if (onEditorAction == null) {
  616.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:624: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  622.   
  623.       List<TextView> views =
  624. >         findViews(source, onEditorAction.value(), isRequired(method), method.getName(),
  625.               TextView.class);
  626.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:616: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnEditorAction(Object,Method,View)`.
  614.       OnEditorAction onEditorAction = method.getAnnotation(OnEditorAction.class);
  615.       if (onEditorAction == null) {
  616. >       return null;
  617.       }
  618.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:628: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  626.   
  627.       ViewCollections.set(views, ON_EDITOR_ACTION, (v, actionId, event) -> {
  628. >       Object value = tryInvoke(method, target, argumentTransformer.transform(v, actionId, event));
  629.         //noinspection SimplifiableConditionalExpression
  630.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:640: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  638.     private static @Nullable Unbinder parseOnFocusChange(final Object target, final Method method,
  639.         View source) {
  640. >     OnFocusChange onFocusChange = method.getAnnotation(OnFocusChange.class);
  641.       if (onFocusChange == null) {
  642.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:650: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  648.   
  649.       List<View> views =
  650. >         findViews(source, onFocusChange.value(), isRequired(method), method.getName(), View.class);
  651.   
  652.       ViewCollections.set(views, ON_FOCUS_CHANGE,

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:642: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnFocusChange(Object,Method,View)`.
  640.       OnFocusChange onFocusChange = method.getAnnotation(OnFocusChange.class);
  641.       if (onFocusChange == null) {
  642. >       return null;
  643.       }
  644.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:653: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  651.   
  652.       ViewCollections.set(views, ON_FOCUS_CHANGE,
  653. >         (v, hasFocus) -> tryInvoke(method, target, argumentTransformer.transform(v, hasFocus)));
  654.   
  655.       return new ListenerUnbinder<>(views, ON_FOCUS_CHANGE);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:660: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  658.     private static @Nullable Unbinder parseOnItemClick(final Object target, final Method method,
  659.         View source) {
  660. >     OnItemClick onItemClick = method.getAnnotation(OnItemClick.class);
  661.       if (onItemClick == null) {
  662.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:670: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  668.   
  669.       List<AdapterView<?>> views =
  670. >         findViews(source, onItemClick.value(), isRequired(method), method.getName(),
  671.               AdapterView.class);
  672.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:662: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnItemClick(Object,Method,View)`.
  660.       OnItemClick onItemClick = method.getAnnotation(OnItemClick.class);
  661.       if (onItemClick == null) {
  662. >       return null;
  663.       }
  664.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:675: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  673.       ViewCollections.set(views, ON_ITEM_CLICK,
  674.           (parent, view, position, id) -> tryInvoke(method, target,
  675. >             argumentTransformer.transform(parent, view, position, id)));
  676.   
  677.       return new ListenerUnbinder<>(views, ON_ITEM_CLICK);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:682: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  680.     private static @Nullable Unbinder parseOnItemLongClick(final Object target, final Method method,
  681.         View source) {
  682. >     OnItemLongClick onItemLongClick = method.getAnnotation(OnItemLongClick.class);
  683.       if (onItemLongClick == null) {
  684.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:692: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  690.   
  691.       List<AdapterView<?>> views =
  692. >         findViews(source, onItemLongClick.value(), isRequired(method), method.getName(),
  693.               AdapterView.class);
  694.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:684: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnItemLongClick(Object,Method,View)`.
  682.       OnItemLongClick onItemLongClick = method.getAnnotation(OnItemLongClick.class);
  683.       if (onItemLongClick == null) {
  684. >       return null;
  685.       }
  686.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:697: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  695.       ViewCollections.set(views, ON_ITEM_LONG_CLICK, (parent, view, position, id) -> {
  696.         Object value =
  697. >           tryInvoke(method, target, argumentTransformer.transform(parent, view, position, id));
  698.         //noinspection SimplifiableConditionalExpression
  699.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:709: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  707.     private static @Nullable Unbinder parseOnLongClick(final Object target, final Method method,
  708.         View source) {
  709. >     OnLongClick onLongClick = method.getAnnotation(OnLongClick.class);
  710.       if (onLongClick == null) {
  711.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:719: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  717.   
  718.       List<View> views =
  719. >         findViews(source, onLongClick.value(), isRequired(method), method.getName(), View.class);
  720.   
  721.       ViewCollections.set(views, ON_LONG_CLICK, v -> {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:711: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnLongClick(Object,Method,View)`.
  709.       OnLongClick onLongClick = method.getAnnotation(OnLongClick.class);
  710.       if (onLongClick == null) {
  711. >       return null;
  712.       }
  713.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:722: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  720.   
  721.       ViewCollections.set(views, ON_LONG_CLICK, v -> {
  722. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  723.         //noinspection SimplifiableConditionalExpression
  724.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:734: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  732.     private static @Nullable Unbinder parseOnTouch(final Object target, final Method method,
  733.         View source) {
  734. >     OnTouch onTouch = method.getAnnotation(OnTouch.class);
  735.       if (onTouch == null) {
  736.         return null;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:744: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  742.   
  743.       List<View> views =
  744. >         findViews(source, onTouch.value(), isRequired(method), method.getName(), View.class);
  745.   
  746.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:736: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Unbinder ButterKnife.parseOnTouch(Object,Method,View)`.
  734.       OnTouch onTouch = method.getAnnotation(OnTouch.class);
  735.       if (onTouch == null) {
  736. >       return null;
  737.       }
  738.       validateMember(method);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:747: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `argumentTransformer`.
  745.   
  746.       ViewCollections.set(views, ON_TOUCH, (v, event) -> {
  747. >       Object returnValue = tryInvoke(method, target, argumentTransformer.transform(v));
  748.         //noinspection SimplifiableConditionalExpression
  749.         return propagateReturn

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:764: warning: GRADUAL_BOUNDARY
  check ambiguous argument `name` passed to nonnull parameter.
  762.       }
  763.   
  764. >     String who = "method '" + name + "'";
  765.       List<T> views = new ArrayList<>(ids.length);
  766.       for (int id : ids) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:761: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter.
  759.         String name, Class<? extends View> cls) {
  760.       if (ids.length == 1 && ids[0] == View.NO_ID) {
  761. >       return singletonList((T) cls.cast(source));
  762.       }
  763.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  766.       for (int id : ids) {
  767.         if (isRequired) {
  768. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:770: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770. >         T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  771.           if (view != null) {
  772.             views.add(view);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  766.       for (int id : ids) {
  767.         if (isRequired) {
  768. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:770: warning: GRADUAL_BOUNDARY
  check ambiguous argument `source` passed to nonnull parameter,check ambiguous argument `id` passed to nonnull parameter,check ambiguous argument `who` passed to nonnull parameter,check ambiguous argument `cls` passed to nonnull parameter.
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770. >         T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  771.           if (view != null) {
  772.             views.add(view);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:766: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List ButterKnife.findViews(View,int[],boolean,String,Class)`.
  764.       String who = "method '" + name + "'";
  765.       List<T> views = new ArrayList<>(ids.length);
  766. >     for (int id : ids) {
  767.         if (isRequired) {
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:776: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `List ButterKnife.findViews(View,int[],boolean,String,Class)`.
  774.         }
  775.       }
  776. >     return views;
  777.     }
  778.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:760: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  758.     private static <T extends View> List<T> findViews(View source, int[] ids, boolean isRequired,
  759.         String name, Class<? extends View> cls) {
  760. >     if (ids.length == 1 && ids[0] == View.NO_ID) {
  761.         return singletonList((T) cls.cast(source));
  762.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:766: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `ids`.
  764.       String who = "method '" + name + "'";
  765.       List<T> views = new ArrayList<>(ids.length);
  766. >     for (int id : ids) {
  767.         if (isRequired) {
  768.           views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:761: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `cls`.
  759.         String name, Class<? extends View> cls) {
  760.       if (ids.length == 1 && ids[0] == View.NO_ID) {
  761. >       return singletonList((T) cls.cast(source));
  762.       }
  763.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:768: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  766.       for (int id : ids) {
  767.         if (isRequired) {
  768. >         views.add((T) Utils.findRequiredViewAsType(source, id, who, cls));
  769.         } else {
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:772: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `views`.
  770.           T view = (T) Utils.findOptionalViewAsType(source, id, who, cls);
  771.           if (view != null) {
  772. >           views.add(view);
  773.           }
  774.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:780: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  778.   
  779.     private static <T extends AccessibleObject & Member> void validateMember(T object) {
  780. >     int modifiers = object.getModifiers();
  781.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  782.         throw new IllegalStateException(object.getDeclaringClass().getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:782: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  780.       int modifiers = object.getModifiers();
  781.       if ((modifiers & (PRIVATE | STATIC)) != 0) {
  782. >       throw new IllegalStateException(object.getDeclaringClass().getName()
  783.             + "."
  784.             + object.getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:784: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  782.         throw new IllegalStateException(object.getDeclaringClass().getName()
  783.             + "."
  784. >           + object.getName()
  785.             + " must not be private or static");
  786.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:788: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `object`.
  786.       }
  787.       if ((modifiers & PUBLIC) == 0) {
  788. >       object.setAccessible(true);
  789.       }
  790.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:799: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `expected`.
  797.       }
  798.       if (returnType != expected) {
  799. >       String expectedType = "'" + expected.getName() + "'";
  800.         if (expected != void.class) {
  801.           expectedType = "'void' or " + expectedType;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:794: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  792.     /** Returns true when the return value should be propagated. Use a default otherwise. */
  793.     private static boolean validateReturnType(Method method, Class<?> expected) {
  794. >     Class<?> returnType = method.getReturnType();
  795.       if (returnType == void.class) {
  796.         return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:803: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  801.           expectedType = "'void' or " + expectedType;
  802.         }
  803. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  804.             + "."
  805.             + method.getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:805: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  803.         throw new IllegalStateException(method.getDeclaringClass().getName()
  804.             + "."
  805. >           + method.getName()
  806.             + " must have return type of "
  807.             + expectedType);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean ButterKnife.isRequired(Field)`.
  811.   
  812.     private static boolean isRequired(Field field) {
  813. >     for (Annotation annotation : field.getAnnotations()) {
  814.         if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `n$2`.
  811.   
  812.     private static boolean isRequired(Field field) {
  813. >     for (Annotation annotation : field.getAnnotations()) {
  814.         if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:814: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `annotation`.
  812.     private static boolean isRequired(Field field) {
  813.       for (Annotation annotation : field.getAnnotations()) {
  814. >       if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;
  816.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:813: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `field`.
  811.   
  812.     private static boolean isRequired(Field field) {
  813. >     for (Annotation annotation : field.getAnnotations()) {
  814.         if (annotation.annotationType().getSimpleName().equals("Nullable")) {
  815.           return false;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:822: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  820.   
  821.     private static boolean isRequired(Method method) {
  822. >     return method.getAnnotation(Optional.class) == null;
  823.     }
  824.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:863: warning: GRADUAL_BOUNDARY
  check ambiguous argument `callbackParameterType` passed to nonnull parameter.
  861.               callbackParameterType.equals(targetParameterType)
  862.               /* or subtype of view */
  863. >             || (View.class.isAssignableFrom(callbackParameterType)
  864.                   && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:861: warning: GRADUAL_BOUNDARY
  check ambiguous argument `targetParameterType` passed to nonnull parameter.
  859.   
  860.           if (/* exact match */
  861. >             callbackParameterType.equals(targetParameterType)
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:864: warning: GRADUAL_BOUNDARY
  check ambiguous argument `targetParameterType` passed to nonnull parameter.
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)
  864. >                 && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */
  866.               || targetParameterType.isInterface()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:829: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  827.       Class<?>[] targetParameterTypes = method.getParameterTypes();
  828.   
  829. >     int targetParameterLength = targetParameterTypes.length;
  830.       if (targetParameterLength == 0) {
  831.         // Special case the common case of no arguments.

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:835: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  833.       }
  834.   
  835. >     int callbackParameterLength = callbackParameterTypes.length;
  836.       if (targetParameterLength > callbackParameterLength) {
  837.         throw new IllegalStateException(method.getDeclaringClass().getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:853: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  851.       final int[] indexMap = new int[targetParameterLength];
  852.       nextTarget: for (int targetIndex = 0; targetIndex < targetParameterLength; targetIndex++) {
  853. >       Class<?> targetParameterType = targetParameterTypes[targetIndex];
  854.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  855.           if (callbackIndexUsed[callbackIndex]) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  856.             continue; // We have already used this callback argument.
  857.           }
  858. >         Class<?> callbackParameterType = callbackParameterTypes[callbackIndex];
  859.   
  860.           if (/* exact match */

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `ButterKnife$ArgumentTransformer ButterKnife.createArgumentTransformer(Method,java.lang.Class[])`.
  895.             .append(callbackParameterLength)
  896.             .append(" parameter(s):\n");
  897. >       for (Class<?> callbackParameter : callbackParameterTypes) {
  898.           builder.append("\n  ").append(callbackParameter.getName());
  899.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:855: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackIndexUsed`.
  853.         Class<?> targetParameterType = targetParameterTypes[targetIndex];
  854.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  855. >         if (callbackIndexUsed[callbackIndex]) {
  856.             continue; // We have already used this callback argument.
  857.           }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:858: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackParameterTypes`.
  856.             continue; // We have already used this callback argument.
  857.           }
  858. >         Class<?> callbackParameterType = callbackParameterTypes[callbackIndex];
  859.   
  860.           if (/* exact match */

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:897: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackParameterTypes`.
  895.             .append(callbackParameterLength)
  896.             .append(" parameter(s):\n");
  897. >       for (Class<?> callbackParameter : callbackParameterTypes) {
  898.           builder.append("\n  ").append(callbackParameter.getName());
  899.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:889: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `callbackParameterTypes`,check method call on ambiguous pointer `*(callbackParameterTypes)[_]`.
  887.                 .append(indexMap[i])
  888.                 .append(": ")
  889. >               .append(callbackParameterTypes[indexMap[i]].getName());
  890.           } else {
  891.             builder.append("did not match any listener parameters");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:887: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `indexMap`.
  885.           if (i < targetIndex) {
  886.             builder.append("matched listener parameter #")
  887. >               .append(indexMap[i])
  888.                 .append(": ")
  889.                 .append(callbackParameterTypes[indexMap[i]].getName());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:853: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `targetParameterTypes`.
  851.       final int[] indexMap = new int[targetParameterLength];
  852.       nextTarget: for (int targetIndex = 0; targetIndex < targetParameterLength; targetIndex++) {
  853. >       Class<?> targetParameterType = targetParameterTypes[targetIndex];
  854.         for (int callbackIndex = 0; callbackIndex < callbackParameterLength; callbackIndex++) {
  855.           if (callbackIndexUsed[callbackIndex]) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:883: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `targetParameterTypes`,check method call on ambiguous pointer `*(targetParameterTypes)[_]`.
  881.               .append(i + 1)
  882.               .append(": ")
  883. >             .append(targetParameterTypes[i].getName())
  884.               .append("\n    ");
  885.           if (i < targetIndex) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:880: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  878.             .append(" method arguments.");
  879.         for (int i = 0; i < targetParameterLength; i++) {
  880. >         builder.append("\n\n  Parameter #")
  881.               .append(i + 1)
  882.               .append(": ")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:886: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  884.               .append("\n    ");
  885.           if (i < targetIndex) {
  886. >           builder.append("matched listener parameter #")
  887.                 .append(indexMap[i])
  888.                 .append(": ")

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:891: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  889.                 .append(callbackParameterTypes[indexMap[i]].getName());
  890.           } else {
  891. >           builder.append("did not match any listener parameters");
  892.           }
  893.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:894: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  892.           }
  893.         }
  894. >       builder.append("\n\nMethods may have up to ")
  895.             .append(callbackParameterLength)
  896.             .append(" parameter(s):\n");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:898: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  896.             .append(" parameter(s):\n");
  897.         for (Class<?> callbackParameter : callbackParameterTypes) {
  898. >         builder.append("\n  ").append(callbackParameter.getName());
  899.         }
  900.         builder.append(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:900: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  898.           builder.append("\n  ").append(callbackParameter.getName());
  899.         }
  900. >       builder.append(
  901.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  902.         throw new IllegalStateException(builder.toString());

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:902: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  900.         builder.append(
  901.             "\n\nThese may be listed in any order but will be searched for from top to bottom.");
  902. >       throw new IllegalStateException(builder.toString());
  903.       }
  904.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:861: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackParameterType`.
  859.   
  860.           if (/* exact match */
  861. >             callbackParameterType.equals(targetParameterType)
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:864: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackParameterType`.
  862.               /* or subtype of view */
  863.               || (View.class.isAssignableFrom(callbackParameterType)
  864. >                 && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */
  866.               || targetParameterType.isInterface()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:898: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `callbackParameter`.
  896.             .append(" parameter(s):\n");
  897.         for (Class<?> callbackParameter : callbackParameterTypes) {
  898. >         builder.append("\n  ").append(callbackParameter.getName());
  899.         }
  900.         builder.append(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:827: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  825.     private static ArgumentTransformer createArgumentTransformer(Method method,
  826.         Class<?>[] callbackParameterTypes) {
  827. >     Class<?>[] targetParameterTypes = method.getParameterTypes();
  828.   
  829.       int targetParameterLength = targetParameterTypes.length;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:837: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  835.       int callbackParameterLength = callbackParameterTypes.length;
  836.       if (targetParameterLength > callbackParameterLength) {
  837. >       throw new IllegalStateException(method.getDeclaringClass().getName()
  838.             + "."
  839.             + method.getName()

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:839: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  837.         throw new IllegalStateException(method.getDeclaringClass().getName()
  838.             + "."
  839. >           + method.getName()
  840.             + " must have at most "
  841.             + callbackParameterLength

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:875: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  873.         StringBuilder builder = new StringBuilder();
  874.         builder.append("Unable to match ")
  875. >           .append(method.getDeclaringClass().getName())
  876.             .append('.')
  877.             .append(method.getName())

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:877: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  875.             .append(method.getDeclaringClass().getName())
  876.             .append('.')
  877. >           .append(method.getName())
  878.             .append(" method arguments.");
  879.         for (int i = 0; i < targetParameterLength; i++) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:866: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `targetParameterType`.
  864.                   && callbackParameterType.isAssignableFrom(targetParameterType))
  865.               /* or interface (like Checkable) */
  866. >             || targetParameterType.isInterface()) {
  867.             indexMap[targetIndex] = callbackIndex;
  868.             callbackIndexUsed[callbackIndex] = true;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:905: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.ButterKnife$1.val$indexMap`.
  903.       }
  904.   
  905. >     return new ArgumentTransformer() {
  906.         @Override public Object[] transform(Object... arguments) {
  907.           Object[] newArguments = new Object[indexMap.length];

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:909: warning: GRADUAL_CHECK
  check dereference of ambiguous pointer `arguments`.
  907.           Object[] newArguments = new Object[indexMap.length];
  908.           for (int i = 0; i < indexMap.length; i++) {
  909. >           newArguments[i] = arguments[indexMap[i]];
  910.           }
  911.           return newArguments;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:918: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  916.           for (int i = 0; i < indexMap.length; i++) {
  917.             if (i > 0) {
  918. >             builder.append(", ");
  919.             }
  920.             builder.append(i).append(" => ").append(indexMap[i]);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:920: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  918.               builder.append(", ");
  919.             }
  920. >           builder.append(i).append(" => ").append(indexMap[i]);
  921.           }
  922.           return builder.append(']').toString();

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:922: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `builder`.
  920.             builder.append(i).append(" => ").append(indexMap[i]);
  921.           }
  922. >         return builder.append(']').toString();
  923.         }
  924.       };

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:930: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void ButterKnife.trySet(Field,Object,Object)`.
  928.       try {
  929.         field.set(target, value);
  930. >     } catch (IllegalAccessException e) {
  931.         throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  932.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:930: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void ButterKnife.trySet(Field,Object,Object)`.
  928.       try {
  929.         field.set(target, value);
  930. >     } catch (IllegalAccessException e) {
  931.         throw new RuntimeException("Unable to assign " + value + " to " + field + " on " + target, e);
  932.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:944: warning: GRADUAL_BOUNDARY
  check ambiguous argument `method` passed to nonnull parameter.
  942.         cause = e;
  943.       }
  944. >     throw new RuntimeException(
  945.           "Unable to invoke " + method + " on " + target + " with arguments "
  946.               + Arrays.toString(arguments), cause);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:944: warning: GRADUAL_BOUNDARY
  check ambiguous argument `target` passed to nonnull parameter.
  942.         cause = e;
  943.       }
  944. >     throw new RuntimeException(
  945.           "Unable to invoke " + method + " on " + target + " with arguments "
  946.               + Arrays.toString(arguments), cause);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:939: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  937.       try {
  938.         return method.invoke(target, arguments);
  939. >     } catch (IllegalAccessException e) {
  940.         cause = e;
  941.       } catch (InvocationTargetException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:940: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  938.         return method.invoke(target, arguments);
  939.       } catch (IllegalAccessException e) {
  940. >       cause = e;
  941.       } catch (InvocationTargetException e) {
  942.         cause = e;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:941: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  939.       } catch (IllegalAccessException e) {
  940.         cause = e;
  941. >     } catch (InvocationTargetException e) {
  942.         cause = e;
  943.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:942: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  940.         cause = e;
  941.       } catch (InvocationTargetException e) {
  942. >       cause = e;
  943.       }
  944.       throw new RuntimeException(

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:938: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `method`.
  936.       Throwable cause;
  937.       try {
  938. >       return method.invoke(target, arguments);
  939.       } catch (IllegalAccessException e) {
  940.         cause = e;

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:939: error: GRADUAL_STATIC
  possibly-null return in nonnull method `Object ButterKnife.tryInvoke(Method,Object,java.lang.Object[])`.
  937.       try {
  938.         return method.invoke(target, arguments);
  939. >     } catch (IllegalAccessException e) {
  940.         cause = e;
  941.       } catch (InvocationTargetException e) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:950: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  948.   
  949.     private static final Setter<CompoundButton, CompoundButton.OnCheckedChangeListener>
  950. >       ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952.         (view, value, index) -> view.setOnClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:950: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  948.   
  949.     private static final Setter<CompoundButton, CompoundButton.OnCheckedChangeListener>
  950. >       ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952.         (view, value, index) -> view.setOnClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:952: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  950.         ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952. >       (view, value, index) -> view.setOnClickListener(value);
  953.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  954.         (view, value, index) -> view.setOnEditorActionListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:952: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  950.         ON_CHECKED_CHANGE = (view, value, index) -> view.setOnCheckedChangeListener(value);
  951.     private static final Setter<View, View.OnClickListener> ON_CLICK =
  952. >       (view, value, index) -> view.setOnClickListener(value);
  953.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  954.         (view, value, index) -> view.setOnEditorActionListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:954: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  952.         (view, value, index) -> view.setOnClickListener(value);
  953.     private static final Setter<TextView, TextView.OnEditorActionListener> ON_EDITOR_ACTION =
  954. >       (view, value, index) -> view.setOnEditorActionListener(value);
  955.     private static final Setter<View, View.OnFocusChangeListener> ON_FOCUS_CHANGE =
  956.         (view, value, index) -> view.setOnFocusChangeListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:956: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  954.         (view, value, index) -> view.setOnEditorActionListener(value);
  955.     private static final Setter<View, View.OnFocusChangeListener> ON_FOCUS_CHANGE =
  956. >       (view, value, index) -> view.setOnFocusChangeListener(value);
  957.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  958.         (view, value, index) -> view.setOnItemClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:958: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  956.         (view, value, index) -> view.setOnFocusChangeListener(value);
  957.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  958. >       (view, value, index) -> view.setOnItemClickListener(value);
  959.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:958: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  956.         (view, value, index) -> view.setOnFocusChangeListener(value);
  957.     private static final Setter<AdapterView<?>, AdapterView.OnItemClickListener> ON_ITEM_CLICK =
  958. >       (view, value, index) -> view.setOnItemClickListener(value);
  959.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:960: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  958.         (view, value, index) -> view.setOnItemClickListener(value);
  959.     private static final Setter<AdapterView<?>, AdapterView.OnItemLongClickListener>
  960. >       ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  961.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  962.         (view, value, index) -> view.setOnLongClickListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:962: warning: GRADUAL_BOUNDARY
  check ambiguous argument `value` passed to nonnull parameter.
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  961.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  962. >       (view, value, index) -> view.setOnLongClickListener(value);
  963.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  964.         (view, value, index) -> view.setOnTouchListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:962: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  960.         ON_ITEM_LONG_CLICK = (view, value, index) -> view.setOnItemLongClickListener(value);
  961.     private static final Setter<View, View.OnLongClickListener> ON_LONG_CLICK =
  962. >       (view, value, index) -> view.setOnLongClickListener(value);
  963.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  964.         (view, value, index) -> view.setOnTouchListener(value);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:964: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  962.         (view, value, index) -> view.setOnLongClickListener(value);
  963.     private static final Setter<View, View.OnTouchListener> ON_TOUCH =
  964. >       (view, value, index) -> view.setOnTouchListener(value);
  965.   
  966.     private static final Class<?>[] ON_CHECKED_CHANGED_TYPES =

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-reflect/src/main/java/butterknife/ButterKnife.java:992: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `java.lang.Object[] ButterKnife$ArgumentTransformer$2.transform(java.lang.Object[])`.
  990.       ArgumentTransformer IDENTITY = new ArgumentTransformer() {
  991.         @Override public Object[] transform(Object... arguments) {
  992. >         return arguments;
  993.         }
  994.   

Summary of the reports

     GRADUAL_CHECK: 155
  GRADUAL_BOUNDARY: 62
    GRADUAL_STATIC: 26Found 15 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java:13: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  11.   
  12.     public A(View view) {
  13. >     ButterKnife.bind(this, view);
  14.     }
  15.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public B(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public D(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public E(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java:14: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  12.     public F(View view) {
  13.       super(view);
  14. >     ButterKnife.bind(this, view);
  15.     }
  16.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public C(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java:16: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  14.     public H(View view) {
  15.       super(view);
  16. >     ButterKnife.bind(this, view);
  17.     }
  18.   }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java:17: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  15.     public G(View view) {
  16.       super(view);
  17. >     ButterKnife.bind(this, view);
  18.     }
  19.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:25: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `int SimpleAdapter.getCount()`.
  23.   
  24.     @Override public int getCount() {
  25. >     return CONTENTS.length;
  26.     }
  27.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:31: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `view`.
  29.       alphaAnimation.setDuration(500);
  30.       alphaAnimation.setStartOffset(index * 100);
  31. >     view.startAnimation(alphaAnimation);
  32.     };
  33.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:29: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `String SimpleAdapter.getItem(int)`.
  27.   
  28.     @Override public String getItem(int position) {
  29. >     return CONTENTS[position];
  30.     }
  31.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:33: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `long SimpleAdapter.getItemId(int)`.
  31.   
  32.     @Override public long getItemId(int position) {
  33. >     return position;
  34.     }
  35.   

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:41: warning: GRADUAL_BOUNDARY
  check ambiguous argument `parent` passed to nonnull parameter.
  39.         holder = (ViewHolder) view.getTag();
  40.       } else {
  41. >       view = inflater.inflate(R.layout.simple_list_item, parent, false);
  42.         holder = new ViewHolder(view);
  43.         view.setTag(holder);

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java:61: warning: GRADUAL_BOUNDARY
  check ambiguous argument `view` passed to nonnull parameter.
  59.   
  60.       ViewHolder(View view) {
  61. >       ButterKnife.bind(this, view);
  62.       }
  63.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java:63: warning: GRADUAL_BOUNDARY
  check ambiguous argument `savedInstanceState` passed to nonnull parameter.
  61.   
  62.     @Override protected void onCreate(Bundle savedInstanceState) {
  63. >     super.onCreate(savedInstanceState);
  64.       setContentView(R.layout.simple_activity);
  65.       ButterKnife.bind(this);

Summary of the reports

  GRADUAL_BOUNDARY: 14
     GRADUAL_CHECK: 1No issues foundFound 8 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/UtilsTest.java:36: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void UtilsTest.testCastParam()`.
  34.         Utils.castParam("abc", "Foo", 3, "foo()", 4, Integer.class);
  35.         fail();
  36. >     } catch (IllegalStateException ise) {
  37.         assertThat(ise.getMessage()).isEqualTo(
  38.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/UtilsTest.java:37: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `ise`.
  35.         fail();
  36.       } catch (IllegalStateException ise) {
  37. >       assertThat(ise.getMessage()).isEqualTo(
  38.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");
  39.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/UtilsTest.java:36: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void UtilsTest.testCastParam()`.
  34.         Utils.castParam("abc", "Foo", 3, "foo()", 4, Integer.class);
  35.         fail();
  36. >     } catch (IllegalStateException ise) {
  37.         assertThat(ise.getMessage()).isEqualTo(
  38.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:36: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.TestGeneratingProcessor.generatedClassName`.
  34.   
  35.     TestGeneratingProcessor(String generatedClassName, String... source) {
  36. >     this.generatedClassName = generatedClassName;
  37.       this.generatedSource = Joiner.on("\n").join(source);
  38.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean TestGeneratingProcessor.process(Set,RoundEnvironment)`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$63`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:49: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean TestGeneratingProcessor.process(Set,RoundEnvironment)`.
  47.       if (!processed) {
  48.         processed = true;
  49. >       try (Writer writer = processingEnv.getFiler()
  50.             .createSourceFile(generatedClassName)
  51.             .openWriter()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean TestGeneratingProcessor.process(Set,RoundEnvironment)`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

Summary of the reports

    GRADUAL_STATIC: 3
  GRADUAL_BOUNDARY: 3
     GRADUAL_CHECK: 2Found 8 issues

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/UtilsTest.java:36: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `void UtilsTest.testCastParam()`.
  34.         Utils.castParam("abc", "Foo", 3, "foo()", 4, Integer.class);
  35.         fail();
  36. >     } catch (IllegalStateException ise) {
  37.         assertThat(ise.getMessage()).isEqualTo(
  38.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/UtilsTest.java:37: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `ise`.
  35.         fail();
  36.       } catch (IllegalStateException ise) {
  37. >       assertThat(ise.getMessage()).isEqualTo(
  38.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");
  39.       }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/UtilsTest.java:36: error: GRADUAL_STATIC
  possibly-null return in nonnull method `void UtilsTest.testCastParam()`.
  34.         Utils.castParam("abc", "Foo", 3, "foo()", 4, Integer.class);
  35.         fail();
  36. >     } catch (IllegalStateException ise) {
  37.         assertThat(ise.getMessage()).isEqualTo(
  38.             "Parameter #4 of method 'Foo' was of the wrong type for parameter #5 of method 'foo()'. See cause for more info.");

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:36: warning: GRADUAL_BOUNDARY
  check ambiguous assignment to nonnull field `butterknife.TestGeneratingProcessor.generatedClassName`.
  34.   
  35.     TestGeneratingProcessor(String generatedClassName, String... source) {
  36. >     this.generatedClassName = generatedClassName;
  37.       this.generatedSource = Joiner.on("\n").join(source);
  38.     }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_BOUNDARY
  check ambiguous return in nonnull method `boolean TestGeneratingProcessor.process(Set,RoundEnvironment)`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: warning: GRADUAL_CHECK
  check method call on ambiguous pointer `n$63`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:49: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean TestGeneratingProcessor.process(Set,RoundEnvironment)`.
  47.       if (!processed) {
  48.         processed = true;
  49. >       try (Writer writer = processingEnv.getFiler()
  50.             .createSourceFile(generatedClassName)
  51.             .openWriter()) {

/home/sam/sandbox/NullSafetyJava-master/nullaway-eval/repos/butterknife/butterknife-runtime/src/test/java/butterknife/TestGeneratingProcessor.java:53: error: GRADUAL_STATIC
  possibly-null return in nonnull method `boolean TestGeneratingProcessor.process(Set,RoundEnvironment)`.
  51.             .openWriter()) {
  52.           writer.append(generatedSource);
  53. >       } catch (IOException e) {
  54.           throw new RuntimeException(e);
  55.         }

Summary of the reports

    GRADUAL_STATIC: 3
  GRADUAL_BOUNDARY: 3
     GRADUAL_CHECK: 2